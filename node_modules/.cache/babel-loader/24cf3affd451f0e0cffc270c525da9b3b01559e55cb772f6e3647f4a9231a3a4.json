{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { isClipPathChanged } from '../../canvas/helper';\nfunction generateClipPathsKey(clipPaths) {\n  var key = [];\n  if (clipPaths) {\n    for (var i = 0; i < clipPaths.length; i++) {\n      var clipPath = clipPaths[i];\n      key.push(clipPath.id);\n    }\n  }\n  return key.join(',');\n}\nexport function hasClipPath(displayable) {\n  var clipPaths = displayable.__clipPaths;\n  return clipPaths && clipPaths.length > 0;\n}\nvar ClippathManager = function (_super) {\n  __extends(ClippathManager, _super);\n  function ClippathManager(zrId, svgRoot) {\n    var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\n    _this._refGroups = {};\n    _this._keyDuplicateCount = {};\n    return _this;\n  }\n  ClippathManager.prototype.markAllUnused = function () {\n    _super.prototype.markAllUnused.call(this);\n    for (var key in this._refGroups) {\n      this.markDomUnused(this._refGroups[key]);\n    }\n    this._keyDuplicateCount = {};\n  };\n  ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\n    if (!hasClipPath(displayable)) {\n      return;\n    }\n    var clipPaths = displayable.__clipPaths;\n    var keyDuplicateCount = this._keyDuplicateCount;\n    var clipPathKey = generateClipPathsKey(clipPaths);\n    if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\n      keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\n      keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\n      keyDuplicateCount[clipPathKey]++;\n    }\n    return this._refGroups[clipPathKey] || (this._refGroups[clipPathKey] = this.createElement('g'));\n  };\n  ClippathManager.prototype.update = function (displayable, prevDisplayable) {\n    var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\n    if (clipGroup) {\n      this.markDomUsed(clipGroup);\n      this.updateDom(clipGroup, displayable.__clipPaths);\n    }\n    return clipGroup;\n  };\n  ;\n  ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\n    if (clipPaths && clipPaths.length > 0) {\n      var defs = this.getDefs(true);\n      var clipPath = clipPaths[0];\n      var clipPathEl = void 0;\n      var id = void 0;\n      if (clipPath._dom) {\n        id = clipPath._dom.getAttribute('id');\n        clipPathEl = clipPath._dom;\n        if (!defs.contains(clipPathEl)) {\n          defs.appendChild(clipPathEl);\n        }\n      } else {\n        id = 'zr' + this._zrId + '-clip-' + this.nextId;\n        ++this.nextId;\n        clipPathEl = this.createElement('clipPath');\n        clipPathEl.setAttribute('id', id);\n        defs.appendChild(clipPathEl);\n        clipPath._dom = clipPathEl;\n      }\n      var svgProxy = this.getSvgProxy(clipPath);\n      svgProxy.brush(clipPath);\n      var pathEl = this.getSvgElement(clipPath);\n      clipPathEl.innerHTML = '';\n      clipPathEl.appendChild(pathEl);\n      parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n      if (clipPaths.length > 1) {\n        this.updateDom(clipPathEl, clipPaths.slice(1));\n      }\n    } else {\n      if (parentEl) {\n        parentEl.setAttribute('clip-path', 'none');\n      }\n    }\n  };\n  ;\n  ClippathManager.prototype.markUsed = function (displayable) {\n    var _this = this;\n    if (displayable.__clipPaths) {\n      zrUtil.each(displayable.__clipPaths, function (clipPath) {\n        if (clipPath._dom) {\n          _super.prototype.markDomUsed.call(_this, clipPath._dom);\n        }\n      });\n    }\n  };\n  ;\n  ClippathManager.prototype.removeUnused = function () {\n    _super.prototype.removeUnused.call(this);\n    var newRefGroupsMap = {};\n    for (var key in this._refGroups) {\n      var group = this._refGroups[key];\n      if (!this.isDomUnused(group)) {\n        newRefGroupsMap[key] = group;\n      } else if (group.parentNode) {\n        group.parentNode.removeChild(group);\n      }\n    }\n    this._refGroups = newRefGroupsMap;\n  };\n  return ClippathManager;\n}(Definable);\nexport default ClippathManager;","map":{"version":3,"names":["__extends","Definable","zrUtil","isClipPathChanged","generateClipPathsKey","clipPaths","key","i","length","clipPath","push","id","join","hasClipPath","displayable","__clipPaths","ClippathManager","_super","zrId","svgRoot","_this","call","_refGroups","_keyDuplicateCount","prototype","markAllUnused","markDomUnused","_getClipPathGroup","prevDisplayable","keyDuplicateCount","clipPathKey","createElement","update","clipGroup","markDomUsed","updateDom","parentEl","defs","getDefs","clipPathEl","_dom","getAttribute","contains","appendChild","_zrId","nextId","setAttribute","svgProxy","getSvgProxy","brush","pathEl","getSvgElement","innerHTML","slice","markUsed","each","removeUnused","newRefGroupsMap","group","isDomUnused","parentNode","removeChild"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/svg/helper/ClippathManager.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { isClipPathChanged } from '../../canvas/helper';\nfunction generateClipPathsKey(clipPaths) {\n    var key = [];\n    if (clipPaths) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            key.push(clipPath.id);\n        }\n    }\n    return key.join(',');\n}\nexport function hasClipPath(displayable) {\n    var clipPaths = displayable.__clipPaths;\n    return clipPaths && clipPaths.length > 0;\n}\nvar ClippathManager = (function (_super) {\n    __extends(ClippathManager, _super);\n    function ClippathManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\n        _this._refGroups = {};\n        _this._keyDuplicateCount = {};\n        return _this;\n    }\n    ClippathManager.prototype.markAllUnused = function () {\n        _super.prototype.markAllUnused.call(this);\n        for (var key in this._refGroups) {\n            this.markDomUnused(this._refGroups[key]);\n        }\n        this._keyDuplicateCount = {};\n    };\n    ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\n        if (!hasClipPath(displayable)) {\n            return;\n        }\n        var clipPaths = displayable.__clipPaths;\n        var keyDuplicateCount = this._keyDuplicateCount;\n        var clipPathKey = generateClipPathsKey(clipPaths);\n        if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\n            keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\n            keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\n            keyDuplicateCount[clipPathKey]++;\n        }\n        return this._refGroups[clipPathKey]\n            || (this._refGroups[clipPathKey] = this.createElement('g'));\n    };\n    ClippathManager.prototype.update = function (displayable, prevDisplayable) {\n        var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\n        if (clipGroup) {\n            this.markDomUsed(clipGroup);\n            this.updateDom(clipGroup, displayable.__clipPaths);\n        }\n        return clipGroup;\n    };\n    ;\n    ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\n        if (clipPaths && clipPaths.length > 0) {\n            var defs = this.getDefs(true);\n            var clipPath = clipPaths[0];\n            var clipPathEl = void 0;\n            var id = void 0;\n            if (clipPath._dom) {\n                id = clipPath._dom.getAttribute('id');\n                clipPathEl = clipPath._dom;\n                if (!defs.contains(clipPathEl)) {\n                    defs.appendChild(clipPathEl);\n                }\n            }\n            else {\n                id = 'zr' + this._zrId + '-clip-' + this.nextId;\n                ++this.nextId;\n                clipPathEl = this.createElement('clipPath');\n                clipPathEl.setAttribute('id', id);\n                defs.appendChild(clipPathEl);\n                clipPath._dom = clipPathEl;\n            }\n            var svgProxy = this.getSvgProxy(clipPath);\n            svgProxy.brush(clipPath);\n            var pathEl = this.getSvgElement(clipPath);\n            clipPathEl.innerHTML = '';\n            clipPathEl.appendChild(pathEl);\n            parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n            if (clipPaths.length > 1) {\n                this.updateDom(clipPathEl, clipPaths.slice(1));\n            }\n        }\n        else {\n            if (parentEl) {\n                parentEl.setAttribute('clip-path', 'none');\n            }\n        }\n    };\n    ;\n    ClippathManager.prototype.markUsed = function (displayable) {\n        var _this = this;\n        if (displayable.__clipPaths) {\n            zrUtil.each(displayable.__clipPaths, function (clipPath) {\n                if (clipPath._dom) {\n                    _super.prototype.markDomUsed.call(_this, clipPath._dom);\n                }\n            });\n        }\n    };\n    ;\n    ClippathManager.prototype.removeUnused = function () {\n        _super.prototype.removeUnused.call(this);\n        var newRefGroupsMap = {};\n        for (var key in this._refGroups) {\n            var group = this._refGroups[key];\n            if (!this.isDomUnused(group)) {\n                newRefGroupsMap[key] = group;\n            }\n            else if (group.parentNode) {\n                group.parentNode.removeChild(group);\n            }\n        }\n        this._refGroups = newRefGroupsMap;\n    };\n    return ClippathManager;\n}(Definable));\nexport default ClippathManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}