{"ast":null,"code":"import { normalizeArcAngles } from '../../core/PathProxy';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0;\n  var y10 = y1 - y0;\n  var x32 = x3 - x2;\n  var y32 = y3 - y2;\n  var t = y32 * x10 - x32 * y10;\n  if (t * t < e) {\n    return;\n  }\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n  var x01 = x0 - x1;\n  var y01 = y0 - y1;\n  var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n  var ox = lo * y01;\n  var oy = -lo * x01;\n  var x11 = x0 + ox;\n  var y11 = y0 + oy;\n  var x10 = x1 + ox;\n  var y10 = y1 + oy;\n  var x00 = (x11 + x10) / 2;\n  var y00 = (y11 + y10) / 2;\n  var dx = x10 - x11;\n  var dy = y10 - y11;\n  var d2 = dx * dx + dy * dy;\n  var r = radius - cr;\n  var s = x11 * y10 - x10 * y11;\n  var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n  var cx0 = (s * dy - dx * d) / d2;\n  var cy0 = (-s * dx - dy * d) / d2;\n  var cx1 = (s * dy + dx * d) / d2;\n  var cy1 = (-s * dx + dy * d) / d2;\n  var dx0 = cx0 - x00;\n  var dy0 = cy0 - y00;\n  var dx1 = cx1 - x00;\n  var dy1 = cy1 - y00;\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n    cx0 = cx1;\n    cy0 = cy1;\n  }\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (radius / r - 1),\n    y11: cy0 * (radius / r - 1)\n  };\n}\nexport function buildPath(ctx, shape) {\n  var radius = mathMax(shape.r, 0);\n  var innerRadius = mathMax(shape.r0 || 0, 0);\n  var hasRadius = radius > 0;\n  var hasInnerRadius = innerRadius > 0;\n  if (!hasRadius && !hasInnerRadius) {\n    return;\n  }\n  if (!hasRadius) {\n    radius = innerRadius;\n    innerRadius = 0;\n  }\n  if (innerRadius > radius) {\n    var tmp = radius;\n    radius = innerRadius;\n    innerRadius = tmp;\n  }\n  var clockwise = !!shape.clockwise;\n  var startAngle = shape.startAngle;\n  var endAngle = shape.endAngle;\n  var arc;\n  if (startAngle === endAngle) {\n    arc = 0;\n  } else {\n    var tmpAngles = [startAngle, endAngle];\n    normalizeArcAngles(tmpAngles, !clockwise);\n    arc = mathAbs(tmpAngles[0] - tmpAngles[1]);\n  }\n  var x = shape.cx;\n  var y = shape.cy;\n  var cornerRadius = shape.cornerRadius || 0;\n  var innerCornerRadius = shape.innerCornerRadius || 0;\n  if (!(radius > e)) {\n    ctx.moveTo(x, y);\n  } else if (arc > PI2 - e) {\n    ctx.moveTo(x + radius * mathCos(startAngle), y + radius * mathSin(startAngle));\n    ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n    if (innerRadius > e) {\n      ctx.moveTo(x + innerRadius * mathCos(endAngle), y + innerRadius * mathSin(endAngle));\n      ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n    }\n  } else {\n    var halfRd = mathAbs(radius - innerRadius) / 2;\n    var cr = mathMin(halfRd, cornerRadius);\n    var icr = mathMin(halfRd, innerCornerRadius);\n    var cr0 = icr;\n    var cr1 = cr;\n    var xrs = radius * mathCos(startAngle);\n    var yrs = radius * mathSin(startAngle);\n    var xire = innerRadius * mathCos(endAngle);\n    var yire = innerRadius * mathSin(endAngle);\n    var xre = void 0;\n    var yre = void 0;\n    var xirs = void 0;\n    var yirs = void 0;\n    if (cr > e || icr > e) {\n      xre = radius * mathCos(endAngle);\n      yre = radius * mathSin(endAngle);\n      xirs = innerRadius * mathCos(startAngle);\n      yirs = innerRadius * mathSin(startAngle);\n      if (arc < PI) {\n        var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n        if (it_1) {\n          var x0 = xrs - it_1[0];\n          var y0 = yrs - it_1[1];\n          var x1 = xre - it_1[0];\n          var y1 = yre - it_1[1];\n          var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n          var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n          cr0 = mathMin(icr, (innerRadius - b) / (a - 1));\n          cr1 = mathMin(cr, (radius - b) / (a + 1));\n        }\n      }\n    }\n    if (!(arc > e)) {\n      ctx.moveTo(x + xrs, y + yrs);\n    } else if (cr1 > e) {\n      var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, cr1, clockwise);\n      var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, cr1, clockwise);\n      ctx.moveTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n      if (cr1 < cr) {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      } else {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n        ctx.arc(x, y, radius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), !clockwise);\n        ctx.arc(x + ct1.cx, y + ct1.cy, cr1, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      }\n    } else {\n      ctx.moveTo(x + xrs, y + yrs);\n      ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n    }\n    if (!(innerRadius > e) || !(arc > e)) {\n      ctx.lineTo(x + xire, y + yire);\n    } else if (cr0 > e) {\n      var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -cr0, clockwise);\n      var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -cr0, clockwise);\n      ctx.lineTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n      if (cr0 < icr) {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      } else {\n        ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n        ctx.arc(x, y, innerRadius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), clockwise);\n        ctx.arc(x + ct1.cx, y + ct1.cy, cr0, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n      }\n    } else {\n      ctx.lineTo(x + xire, y + yire);\n      ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n    }\n  }\n  ctx.closePath();\n}","map":{"version":3,"names":["normalizeArcAngles","PI","Math","PI2","mathSin","sin","mathCos","cos","mathACos","acos","mathATan2","atan2","mathAbs","abs","mathSqrt","sqrt","mathMax","max","mathMin","min","e","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","computeCornerTangents","radius","cr","clockwise","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","s","d","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","buildPath","ctx","shape","innerRadius","r0","hasRadius","hasInnerRadius","tmp","startAngle","endAngle","arc","tmpAngles","x","y","cornerRadius","innerCornerRadius","moveTo","halfRd","icr","cr0","cr1","xrs","yrs","xire","yire","xre","yre","xirs","yirs","it_1","a","b","ct0","ct1","lineTo","closePath"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/graphic/helper/roundSector.js"],"sourcesContent":["import { normalizeArcAngles } from '../../core/PathProxy';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0;\n    var y10 = y1 - y0;\n    var x32 = x3 - x2;\n    var y32 = y3 - y2;\n    var t = y32 * x10 - x32 * y10;\n    if (t * t < e) {\n        return;\n    }\n    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n    return [x0 + t * x10, y0 + t * y10];\n}\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n    var x01 = x0 - x1;\n    var y01 = y0 - y1;\n    var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n    var ox = lo * y01;\n    var oy = -lo * x01;\n    var x11 = x0 + ox;\n    var y11 = y0 + oy;\n    var x10 = x1 + ox;\n    var y10 = y1 + oy;\n    var x00 = (x11 + x10) / 2;\n    var y00 = (y11 + y10) / 2;\n    var dx = x10 - x11;\n    var dy = y10 - y11;\n    var d2 = dx * dx + dy * dy;\n    var r = radius - cr;\n    var s = x11 * y10 - x10 * y11;\n    var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n    var cx0 = (s * dy - dx * d) / d2;\n    var cy0 = (-s * dx - dy * d) / d2;\n    var cx1 = (s * dy + dx * d) / d2;\n    var cy1 = (-s * dx + dy * d) / d2;\n    var dx0 = cx0 - x00;\n    var dy0 = cy0 - y00;\n    var dx1 = cx1 - x00;\n    var dy1 = cy1 - y00;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n        cx0 = cx1;\n        cy0 = cy1;\n    }\n    return {\n        cx: cx0,\n        cy: cy0,\n        x01: -ox,\n        y01: -oy,\n        x11: cx0 * (radius / r - 1),\n        y11: cy0 * (radius / r - 1)\n    };\n}\nexport function buildPath(ctx, shape) {\n    var radius = mathMax(shape.r, 0);\n    var innerRadius = mathMax(shape.r0 || 0, 0);\n    var hasRadius = radius > 0;\n    var hasInnerRadius = innerRadius > 0;\n    if (!hasRadius && !hasInnerRadius) {\n        return;\n    }\n    if (!hasRadius) {\n        radius = innerRadius;\n        innerRadius = 0;\n    }\n    if (innerRadius > radius) {\n        var tmp = radius;\n        radius = innerRadius;\n        innerRadius = tmp;\n    }\n    var clockwise = !!shape.clockwise;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var arc;\n    if (startAngle === endAngle) {\n        arc = 0;\n    }\n    else {\n        var tmpAngles = [startAngle, endAngle];\n        normalizeArcAngles(tmpAngles, !clockwise);\n        arc = mathAbs(tmpAngles[0] - tmpAngles[1]);\n    }\n    var x = shape.cx;\n    var y = shape.cy;\n    var cornerRadius = shape.cornerRadius || 0;\n    var innerCornerRadius = shape.innerCornerRadius || 0;\n    if (!(radius > e)) {\n        ctx.moveTo(x, y);\n    }\n    else if (arc > PI2 - e) {\n        ctx.moveTo(x + radius * mathCos(startAngle), y + radius * mathSin(startAngle));\n        ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n        if (innerRadius > e) {\n            ctx.moveTo(x + innerRadius * mathCos(endAngle), y + innerRadius * mathSin(endAngle));\n            ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    else {\n        var halfRd = mathAbs(radius - innerRadius) / 2;\n        var cr = mathMin(halfRd, cornerRadius);\n        var icr = mathMin(halfRd, innerCornerRadius);\n        var cr0 = icr;\n        var cr1 = cr;\n        var xrs = radius * mathCos(startAngle);\n        var yrs = radius * mathSin(startAngle);\n        var xire = innerRadius * mathCos(endAngle);\n        var yire = innerRadius * mathSin(endAngle);\n        var xre = void 0;\n        var yre = void 0;\n        var xirs = void 0;\n        var yirs = void 0;\n        if (cr > e || icr > e) {\n            xre = radius * mathCos(endAngle);\n            yre = radius * mathSin(endAngle);\n            xirs = innerRadius * mathCos(startAngle);\n            yirs = innerRadius * mathSin(startAngle);\n            if (arc < PI) {\n                var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n                if (it_1) {\n                    var x0 = xrs - it_1[0];\n                    var y0 = yrs - it_1[1];\n                    var x1 = xre - it_1[0];\n                    var y1 = yre - it_1[1];\n                    var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n                    var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n                    cr0 = mathMin(icr, (innerRadius - b) / (a - 1));\n                    cr1 = mathMin(cr, (radius - b) / (a + 1));\n                }\n            }\n        }\n        if (!(arc > e)) {\n            ctx.moveTo(x + xrs, y + yrs);\n        }\n        else if (cr1 > e) {\n            var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, cr1, clockwise);\n            var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, cr1, clockwise);\n            ctx.moveTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n            if (cr1 < cr) {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n            else {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n                ctx.arc(x, y, radius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), !clockwise);\n                ctx.arc(x + ct1.cx, y + ct1.cy, cr1, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n        }\n        else {\n            ctx.moveTo(x + xrs, y + yrs);\n            ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\n        }\n        if (!(innerRadius > e) || !(arc > e)) {\n            ctx.lineTo(x + xire, y + yire);\n        }\n        else if (cr0 > e) {\n            var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -cr0, clockwise);\n            var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -cr0, clockwise);\n            ctx.lineTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\n            if (cr0 < icr) {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n            else {\n                ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\n                ctx.arc(x, y, innerRadius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), clockwise);\n                ctx.arc(x + ct1.cx, y + ct1.cy, cr0, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\n            }\n        }\n        else {\n            ctx.lineTo(x + xire, y + yire);\n            ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    ctx.closePath();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}