{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as matrix from './matrix';\nimport * as vector from './vector';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\nvar Transformable = function () {\n  function Transformable() {}\n  Transformable.prototype.setPosition = function (arr) {\n    this.x = arr[0];\n    this.y = arr[1];\n  };\n  Transformable.prototype.setScale = function (arr) {\n    this.scaleX = arr[0];\n    this.scaleY = arr[1];\n  };\n  Transformable.prototype.setSkew = function (arr) {\n    this.skewX = arr[0];\n    this.skewY = arr[1];\n  };\n  Transformable.prototype.setOrigin = function (arr) {\n    this.originX = arr[0];\n    this.originY = arr[1];\n  };\n  Transformable.prototype.needLocalTransform = function () {\n    return isNotAroundZero(this.rotation) || isNotAroundZero(this.x) || isNotAroundZero(this.y) || isNotAroundZero(this.scaleX - 1) || isNotAroundZero(this.scaleY - 1);\n  };\n  Transformable.prototype.updateTransform = function () {\n    var parent = this.parent;\n    var parentHasTransform = parent && parent.transform;\n    var needLocalTransform = this.needLocalTransform();\n    var m = this.transform;\n    if (!(needLocalTransform || parentHasTransform)) {\n      m && mIdentity(m);\n      return;\n    }\n    m = m || matrix.create();\n    if (needLocalTransform) {\n      this.getLocalTransform(m);\n    } else {\n      mIdentity(m);\n    }\n    if (parentHasTransform) {\n      if (needLocalTransform) {\n        matrix.mul(m, parent.transform, m);\n      } else {\n        matrix.copy(m, parent.transform);\n      }\n    }\n    this.transform = m;\n    this._resolveGlobalScaleRatio(m);\n  };\n  Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n    var globalScaleRatio = this.globalScaleRatio;\n    if (globalScaleRatio != null && globalScaleRatio !== 1) {\n      this.getGlobalScale(scaleTmp);\n      var relX = scaleTmp[0] < 0 ? -1 : 1;\n      var relY = scaleTmp[1] < 0 ? -1 : 1;\n      var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n      var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n      m[0] *= sx;\n      m[1] *= sx;\n      m[2] *= sy;\n      m[3] *= sy;\n    }\n    this.invTransform = this.invTransform || matrix.create();\n    matrix.invert(this.invTransform, m);\n  };\n  Transformable.prototype.getLocalTransform = function (m) {\n    return Transformable.getLocalTransform(this, m);\n  };\n  Transformable.prototype.getComputedTransform = function () {\n    var transformNode = this;\n    var ancestors = [];\n    while (transformNode) {\n      ancestors.push(transformNode);\n      transformNode = transformNode.parent;\n    }\n    while (transformNode = ancestors.pop()) {\n      transformNode.updateTransform();\n    }\n    return this.transform;\n  };\n  Transformable.prototype.setLocalTransform = function (m) {\n    if (!m) {\n      return;\n    }\n    var sx = m[0] * m[0] + m[1] * m[1];\n    var sy = m[2] * m[2] + m[3] * m[3];\n    var rotation = Math.atan2(m[1], m[0]);\n    var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n    sy = Math.sqrt(sy) * Math.cos(shearX);\n    sx = Math.sqrt(sx);\n    this.skewX = shearX;\n    this.skewY = 0;\n    this.rotation = -rotation;\n    this.x = +m[4];\n    this.y = +m[5];\n    this.scaleX = sx;\n    this.scaleY = sy;\n    this.originX = 0;\n    this.originY = 0;\n  };\n  Transformable.prototype.decomposeTransform = function () {\n    if (!this.transform) {\n      return;\n    }\n    var parent = this.parent;\n    var m = this.transform;\n    if (parent && parent.transform) {\n      matrix.mul(tmpTransform, parent.invTransform, m);\n      m = tmpTransform;\n    }\n    var ox = this.originX;\n    var oy = this.originY;\n    if (ox || oy) {\n      originTransform[4] = ox;\n      originTransform[5] = oy;\n      matrix.mul(tmpTransform, m, originTransform);\n      tmpTransform[4] -= ox;\n      tmpTransform[5] -= oy;\n      m = tmpTransform;\n    }\n    this.setLocalTransform(m);\n  };\n  Transformable.prototype.getGlobalScale = function (out) {\n    var m = this.transform;\n    out = out || [];\n    if (!m) {\n      out[0] = 1;\n      out[1] = 1;\n      return out;\n    }\n    out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n    out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n    if (m[0] < 0) {\n      out[0] = -out[0];\n    }\n    if (m[3] < 0) {\n      out[1] = -out[1];\n    }\n    return out;\n  };\n  Transformable.prototype.transformCoordToLocal = function (x, y) {\n    var v2 = [x, y];\n    var invTransform = this.invTransform;\n    if (invTransform) {\n      vector.applyTransform(v2, v2, invTransform);\n    }\n    return v2;\n  };\n  Transformable.prototype.transformCoordToGlobal = function (x, y) {\n    var v2 = [x, y];\n    var transform = this.transform;\n    if (transform) {\n      vector.applyTransform(v2, v2, transform);\n    }\n    return v2;\n  };\n  Transformable.prototype.getLineScale = function () {\n    var m = this.transform;\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  };\n  Transformable.getLocalTransform = function (target, m) {\n    m = m || [];\n    var ox = target.originX || 0;\n    var oy = target.originY || 0;\n    var sx = target.scaleX;\n    var sy = target.scaleY;\n    var rotation = target.rotation || 0;\n    var x = target.x;\n    var y = target.y;\n    var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n    var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n    if (ox || oy) {\n      m[4] = -ox * sx - skewX * oy * sy;\n      m[5] = -oy * sy - skewY * ox * sx;\n    } else {\n      m[4] = m[5] = 0;\n    }\n    m[0] = sx;\n    m[3] = sy;\n    m[1] = skewY * sx;\n    m[2] = skewX * sy;\n    rotation && matrix.rotate(m, m, rotation);\n    m[4] += ox + x;\n    m[5] += oy + y;\n    return m;\n  };\n  Transformable.initDefaultProps = function () {\n    var proto = Transformable.prototype;\n    proto.x = 0;\n    proto.y = 0;\n    proto.scaleX = 1;\n    proto.scaleY = 1;\n    proto.originX = 0;\n    proto.originY = 0;\n    proto.skewX = 0;\n    proto.skewY = 0;\n    proto.rotation = 0;\n    proto.globalScaleRatio = 1;\n  }();\n  return Transformable;\n}();\n;\nexport default Transformable;","map":{"version":3,"names":["matrix","vector","mIdentity","identity","EPSILON","isNotAroundZero","val","scaleTmp","tmpTransform","originTransform","create","abs","Math","Transformable","prototype","setPosition","arr","x","y","setScale","scaleX","scaleY","setSkew","skewX","skewY","setOrigin","originX","originY","needLocalTransform","rotation","updateTransform","parent","parentHasTransform","transform","m","getLocalTransform","mul","copy","_resolveGlobalScaleRatio","globalScaleRatio","getGlobalScale","relX","relY","sx","sy","invTransform","invert","getComputedTransform","transformNode","ancestors","push","pop","setLocalTransform","atan2","shearX","PI","sqrt","cos","decomposeTransform","ox","oy","out","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","getLineScale","target","tan","rotate","initDefaultProps","proto"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/core/Transformable.js"],"sourcesContent":["import * as matrix from './matrix';\nimport * as vector from './vector';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\nfunction isNotAroundZero(val) {\n    return val > EPSILON || val < -EPSILON;\n}\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\nvar Transformable = (function () {\n    function Transformable() {\n    }\n    Transformable.prototype.setPosition = function (arr) {\n        this.x = arr[0];\n        this.y = arr[1];\n    };\n    Transformable.prototype.setScale = function (arr) {\n        this.scaleX = arr[0];\n        this.scaleY = arr[1];\n    };\n    Transformable.prototype.setSkew = function (arr) {\n        this.skewX = arr[0];\n        this.skewY = arr[1];\n    };\n    Transformable.prototype.setOrigin = function (arr) {\n        this.originX = arr[0];\n        this.originY = arr[1];\n    };\n    Transformable.prototype.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.x)\n            || isNotAroundZero(this.y)\n            || isNotAroundZero(this.scaleX - 1)\n            || isNotAroundZero(this.scaleY - 1);\n    };\n    Transformable.prototype.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n        m = m || matrix.create();\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        this.transform = m;\n        this._resolveGlobalScaleRatio(m);\n    };\n    Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n        var globalScaleRatio = this.globalScaleRatio;\n        if (globalScaleRatio != null && globalScaleRatio !== 1) {\n            this.getGlobalScale(scaleTmp);\n            var relX = scaleTmp[0] < 0 ? -1 : 1;\n            var relY = scaleTmp[1] < 0 ? -1 : 1;\n            var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n            var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n            m[0] *= sx;\n            m[1] *= sx;\n            m[2] *= sy;\n            m[3] *= sy;\n        }\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n    Transformable.prototype.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n    Transformable.prototype.getComputedTransform = function () {\n        var transformNode = this;\n        var ancestors = [];\n        while (transformNode) {\n            ancestors.push(transformNode);\n            transformNode = transformNode.parent;\n        }\n        while (transformNode = ancestors.pop()) {\n            transformNode.updateTransform();\n        }\n        return this.transform;\n    };\n    Transformable.prototype.setLocalTransform = function (m) {\n        if (!m) {\n            return;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var rotation = Math.atan2(m[1], m[0]);\n        var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n        sy = Math.sqrt(sy) * Math.cos(shearX);\n        sx = Math.sqrt(sx);\n        this.skewX = shearX;\n        this.skewY = 0;\n        this.rotation = -rotation;\n        this.x = +m[4];\n        this.y = +m[5];\n        this.scaleX = sx;\n        this.scaleY = sy;\n        this.originX = 0;\n        this.originY = 0;\n    };\n    Transformable.prototype.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var ox = this.originX;\n        var oy = this.originY;\n        if (ox || oy) {\n            originTransform[4] = ox;\n            originTransform[5] = oy;\n            matrix.mul(tmpTransform, m, originTransform);\n            tmpTransform[4] -= ox;\n            tmpTransform[5] -= oy;\n            m = tmpTransform;\n        }\n        this.setLocalTransform(m);\n    };\n    Transformable.prototype.getGlobalScale = function (out) {\n        var m = this.transform;\n        out = out || [];\n        if (!m) {\n            out[0] = 1;\n            out[1] = 1;\n            return out;\n        }\n        out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            out[0] = -out[0];\n        }\n        if (m[3] < 0) {\n            out[1] = -out[1];\n        }\n        return out;\n    };\n    Transformable.prototype.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n    Transformable.prototype.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n    Transformable.prototype.getLineScale = function () {\n        var m = this.transform;\n        return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n            ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n            : 1;\n    };\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        var ox = target.originX || 0;\n        var oy = target.originY || 0;\n        var sx = target.scaleX;\n        var sy = target.scaleY;\n        var rotation = target.rotation || 0;\n        var x = target.x;\n        var y = target.y;\n        var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n        var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n        if (ox || oy) {\n            m[4] = -ox * sx - skewX * oy * sy;\n            m[5] = -oy * sy - skewY * ox * sx;\n        }\n        else {\n            m[4] = m[5] = 0;\n        }\n        m[0] = sx;\n        m[3] = sy;\n        m[1] = skewY * sx;\n        m[2] = skewX * sy;\n        rotation && matrix.rotate(m, m, rotation);\n        m[4] += ox + x;\n        m[5] += oy + y;\n        return m;\n    };\n    Transformable.initDefaultProps = (function () {\n        var proto = Transformable.prototype;\n        proto.x = 0;\n        proto.y = 0;\n        proto.scaleX = 1;\n        proto.scaleY = 1;\n        proto.originX = 0;\n        proto.originY = 0;\n        proto.skewX = 0;\n        proto.skewY = 0;\n        proto.rotation = 0;\n        proto.globalScaleRatio = 1;\n    })();\n    return Transformable;\n}());\n;\nexport default Transformable;\n"],"mappings":";AAAA,OAAO,KAAKA,MAAM,MAAM,UAAU;AAClC,OAAO,KAAKC,MAAM,MAAM,UAAU;AAClC,IAAIC,SAAS,GAAGF,MAAM,CAACG,QAAQ;AAC/B,IAAIC,OAAO,GAAG,IAAI;AAClB,SAASC,eAAe,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,GAAGF,OAAO,IAAIE,GAAG,GAAG,CAACF,OAAO;AAC1C;AACA,IAAIG,QAAQ,GAAG,EAAE;AACjB,IAAIC,YAAY,GAAG,EAAE;AACrB,IAAIC,eAAe,GAAGT,MAAM,CAACU,MAAM,EAAE;AACrC,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAG;AAClB,IAAIE,aAAa,GAAI,YAAY;EAC7B,SAASA,aAAa,GAAG,CACzB;EACAA,aAAa,CAACC,SAAS,CAACC,WAAW,GAAG,UAAUC,GAAG,EAAE;IACjD,IAAI,CAACC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC;IACf,IAAI,CAACE,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC;EACnB,CAAC;EACDH,aAAa,CAACC,SAAS,CAACK,QAAQ,GAAG,UAAUH,GAAG,EAAE;IAC9C,IAAI,CAACI,MAAM,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACpB,IAAI,CAACK,MAAM,GAAGL,GAAG,CAAC,CAAC,CAAC;EACxB,CAAC;EACDH,aAAa,CAACC,SAAS,CAACQ,OAAO,GAAG,UAAUN,GAAG,EAAE;IAC7C,IAAI,CAACO,KAAK,GAAGP,GAAG,CAAC,CAAC,CAAC;IACnB,IAAI,CAACQ,KAAK,GAAGR,GAAG,CAAC,CAAC,CAAC;EACvB,CAAC;EACDH,aAAa,CAACC,SAAS,CAACW,SAAS,GAAG,UAAUT,GAAG,EAAE;IAC/C,IAAI,CAACU,OAAO,GAAGV,GAAG,CAAC,CAAC,CAAC;IACrB,IAAI,CAACW,OAAO,GAAGX,GAAG,CAAC,CAAC,CAAC;EACzB,CAAC;EACDH,aAAa,CAACC,SAAS,CAACc,kBAAkB,GAAG,YAAY;IACrD,OAAOvB,eAAe,CAAC,IAAI,CAACwB,QAAQ,CAAC,IAC9BxB,eAAe,CAAC,IAAI,CAACY,CAAC,CAAC,IACvBZ,eAAe,CAAC,IAAI,CAACa,CAAC,CAAC,IACvBb,eAAe,CAAC,IAAI,CAACe,MAAM,GAAG,CAAC,CAAC,IAChCf,eAAe,CAAC,IAAI,CAACgB,MAAM,GAAG,CAAC,CAAC;EAC3C,CAAC;EACDR,aAAa,CAACC,SAAS,CAACgB,eAAe,GAAG,YAAY;IAClD,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIC,kBAAkB,GAAGD,MAAM,IAAIA,MAAM,CAACE,SAAS;IACnD,IAAIL,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,EAAE;IAClD,IAAIM,CAAC,GAAG,IAAI,CAACD,SAAS;IACtB,IAAI,EAAEL,kBAAkB,IAAII,kBAAkB,CAAC,EAAE;MAC7CE,CAAC,IAAIhC,SAAS,CAACgC,CAAC,CAAC;MACjB;IACJ;IACAA,CAAC,GAAGA,CAAC,IAAIlC,MAAM,CAACU,MAAM,EAAE;IACxB,IAAIkB,kBAAkB,EAAE;MACpB,IAAI,CAACO,iBAAiB,CAACD,CAAC,CAAC;IAC7B,CAAC,MACI;MACDhC,SAAS,CAACgC,CAAC,CAAC;IAChB;IACA,IAAIF,kBAAkB,EAAE;MACpB,IAAIJ,kBAAkB,EAAE;QACpB5B,MAAM,CAACoC,GAAG,CAACF,CAAC,EAAEH,MAAM,CAACE,SAAS,EAAEC,CAAC,CAAC;MACtC,CAAC,MACI;QACDlC,MAAM,CAACqC,IAAI,CAACH,CAAC,EAAEH,MAAM,CAACE,SAAS,CAAC;MACpC;IACJ;IACA,IAAI,CAACA,SAAS,GAAGC,CAAC;IAClB,IAAI,CAACI,wBAAwB,CAACJ,CAAC,CAAC;EACpC,CAAC;EACDrB,aAAa,CAACC,SAAS,CAACwB,wBAAwB,GAAG,UAAUJ,CAAC,EAAE;IAC5D,IAAIK,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;IAC5C,IAAIA,gBAAgB,IAAI,IAAI,IAAIA,gBAAgB,KAAK,CAAC,EAAE;MACpD,IAAI,CAACC,cAAc,CAACjC,QAAQ,CAAC;MAC7B,IAAIkC,IAAI,GAAGlC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,IAAImC,IAAI,GAAGnC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,IAAIoC,EAAE,GAAG,CAAC,CAACpC,QAAQ,CAAC,CAAC,CAAC,GAAGkC,IAAI,IAAIF,gBAAgB,GAAGE,IAAI,IAAIlC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;MAC5E,IAAIqC,EAAE,GAAG,CAAC,CAACrC,QAAQ,CAAC,CAAC,CAAC,GAAGmC,IAAI,IAAIH,gBAAgB,GAAGG,IAAI,IAAInC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;MAC5E2B,CAAC,CAAC,CAAC,CAAC,IAAIS,EAAE;MACVT,CAAC,CAAC,CAAC,CAAC,IAAIS,EAAE;MACVT,CAAC,CAAC,CAAC,CAAC,IAAIU,EAAE;MACVV,CAAC,CAAC,CAAC,CAAC,IAAIU,EAAE;IACd;IACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI7C,MAAM,CAACU,MAAM,EAAE;IACxDV,MAAM,CAAC8C,MAAM,CAAC,IAAI,CAACD,YAAY,EAAEX,CAAC,CAAC;EACvC,CAAC;EACDrB,aAAa,CAACC,SAAS,CAACqB,iBAAiB,GAAG,UAAUD,CAAC,EAAE;IACrD,OAAOrB,aAAa,CAACsB,iBAAiB,CAAC,IAAI,EAAED,CAAC,CAAC;EACnD,CAAC;EACDrB,aAAa,CAACC,SAAS,CAACiC,oBAAoB,GAAG,YAAY;IACvD,IAAIC,aAAa,GAAG,IAAI;IACxB,IAAIC,SAAS,GAAG,EAAE;IAClB,OAAOD,aAAa,EAAE;MAClBC,SAAS,CAACC,IAAI,CAACF,aAAa,CAAC;MAC7BA,aAAa,GAAGA,aAAa,CAACjB,MAAM;IACxC;IACA,OAAOiB,aAAa,GAAGC,SAAS,CAACE,GAAG,EAAE,EAAE;MACpCH,aAAa,CAAClB,eAAe,EAAE;IACnC;IACA,OAAO,IAAI,CAACG,SAAS;EACzB,CAAC;EACDpB,aAAa,CAACC,SAAS,CAACsC,iBAAiB,GAAG,UAAUlB,CAAC,EAAE;IACrD,IAAI,CAACA,CAAC,EAAE;MACJ;IACJ;IACA,IAAIS,EAAE,GAAGT,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IAClC,IAAIU,EAAE,GAAGV,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IAClC,IAAIL,QAAQ,GAAGjB,IAAI,CAACyC,KAAK,CAACnB,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,IAAIoB,MAAM,GAAG1C,IAAI,CAAC2C,EAAE,GAAG,CAAC,GAAG1B,QAAQ,GAAGjB,IAAI,CAACyC,KAAK,CAACnB,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5DU,EAAE,GAAGhC,IAAI,CAAC4C,IAAI,CAACZ,EAAE,CAAC,GAAGhC,IAAI,CAAC6C,GAAG,CAACH,MAAM,CAAC;IACrCX,EAAE,GAAG/B,IAAI,CAAC4C,IAAI,CAACb,EAAE,CAAC;IAClB,IAAI,CAACpB,KAAK,GAAG+B,MAAM;IACnB,IAAI,CAAC9B,KAAK,GAAG,CAAC;IACd,IAAI,CAACK,QAAQ,GAAG,CAACA,QAAQ;IACzB,IAAI,CAACZ,CAAC,GAAG,CAACiB,CAAC,CAAC,CAAC,CAAC;IACd,IAAI,CAAChB,CAAC,GAAG,CAACgB,CAAC,CAAC,CAAC,CAAC;IACd,IAAI,CAACd,MAAM,GAAGuB,EAAE;IAChB,IAAI,CAACtB,MAAM,GAAGuB,EAAE;IAChB,IAAI,CAAClB,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;EACpB,CAAC;EACDd,aAAa,CAACC,SAAS,CAAC4C,kBAAkB,GAAG,YAAY;IACrD,IAAI,CAAC,IAAI,CAACzB,SAAS,EAAE;MACjB;IACJ;IACA,IAAIF,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIG,CAAC,GAAG,IAAI,CAACD,SAAS;IACtB,IAAIF,MAAM,IAAIA,MAAM,CAACE,SAAS,EAAE;MAC5BjC,MAAM,CAACoC,GAAG,CAAC5B,YAAY,EAAEuB,MAAM,CAACc,YAAY,EAAEX,CAAC,CAAC;MAChDA,CAAC,GAAG1B,YAAY;IACpB;IACA,IAAImD,EAAE,GAAG,IAAI,CAACjC,OAAO;IACrB,IAAIkC,EAAE,GAAG,IAAI,CAACjC,OAAO;IACrB,IAAIgC,EAAE,IAAIC,EAAE,EAAE;MACVnD,eAAe,CAAC,CAAC,CAAC,GAAGkD,EAAE;MACvBlD,eAAe,CAAC,CAAC,CAAC,GAAGmD,EAAE;MACvB5D,MAAM,CAACoC,GAAG,CAAC5B,YAAY,EAAE0B,CAAC,EAAEzB,eAAe,CAAC;MAC5CD,YAAY,CAAC,CAAC,CAAC,IAAImD,EAAE;MACrBnD,YAAY,CAAC,CAAC,CAAC,IAAIoD,EAAE;MACrB1B,CAAC,GAAG1B,YAAY;IACpB;IACA,IAAI,CAAC4C,iBAAiB,CAAClB,CAAC,CAAC;EAC7B,CAAC;EACDrB,aAAa,CAACC,SAAS,CAAC0B,cAAc,GAAG,UAAUqB,GAAG,EAAE;IACpD,IAAI3B,CAAC,GAAG,IAAI,CAACD,SAAS;IACtB4B,GAAG,GAAGA,GAAG,IAAI,EAAE;IACf,IAAI,CAAC3B,CAAC,EAAE;MACJ2B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACVA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACV,OAAOA,GAAG;IACd;IACAA,GAAG,CAAC,CAAC,CAAC,GAAGjD,IAAI,CAAC4C,IAAI,CAACtB,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C2B,GAAG,CAAC,CAAC,CAAC,GAAGjD,IAAI,CAAC4C,IAAI,CAACtB,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAIA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACV2B,GAAG,CAAC,CAAC,CAAC,GAAG,CAACA,GAAG,CAAC,CAAC,CAAC;IACpB;IACA,IAAI3B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACV2B,GAAG,CAAC,CAAC,CAAC,GAAG,CAACA,GAAG,CAAC,CAAC,CAAC;IACpB;IACA,OAAOA,GAAG;EACd,CAAC;EACDhD,aAAa,CAACC,SAAS,CAACgD,qBAAqB,GAAG,UAAU7C,CAAC,EAAEC,CAAC,EAAE;IAC5D,IAAI6C,EAAE,GAAG,CAAC9C,CAAC,EAAEC,CAAC,CAAC;IACf,IAAI2B,YAAY,GAAG,IAAI,CAACA,YAAY;IACpC,IAAIA,YAAY,EAAE;MACd5C,MAAM,CAAC+D,cAAc,CAACD,EAAE,EAAEA,EAAE,EAAElB,YAAY,CAAC;IAC/C;IACA,OAAOkB,EAAE;EACb,CAAC;EACDlD,aAAa,CAACC,SAAS,CAACmD,sBAAsB,GAAG,UAAUhD,CAAC,EAAEC,CAAC,EAAE;IAC7D,IAAI6C,EAAE,GAAG,CAAC9C,CAAC,EAAEC,CAAC,CAAC;IACf,IAAIe,SAAS,GAAG,IAAI,CAACA,SAAS;IAC9B,IAAIA,SAAS,EAAE;MACXhC,MAAM,CAAC+D,cAAc,CAACD,EAAE,EAAEA,EAAE,EAAE9B,SAAS,CAAC;IAC5C;IACA,OAAO8B,EAAE;EACb,CAAC;EACDlD,aAAa,CAACC,SAAS,CAACoD,YAAY,GAAG,YAAY;IAC/C,IAAIhC,CAAC,GAAG,IAAI,CAACD,SAAS;IACtB,OAAOC,CAAC,IAAIvB,GAAG,CAACuB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAIvB,GAAG,CAACuB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GACpDtB,IAAI,CAAC4C,IAAI,CAAC7C,GAAG,CAACuB,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACzC,CAAC;EACX,CAAC;EACDrB,aAAa,CAACsB,iBAAiB,GAAG,UAAUgC,MAAM,EAAEjC,CAAC,EAAE;IACnDA,CAAC,GAAGA,CAAC,IAAI,EAAE;IACX,IAAIyB,EAAE,GAAGQ,MAAM,CAACzC,OAAO,IAAI,CAAC;IAC5B,IAAIkC,EAAE,GAAGO,MAAM,CAACxC,OAAO,IAAI,CAAC;IAC5B,IAAIgB,EAAE,GAAGwB,MAAM,CAAC/C,MAAM;IACtB,IAAIwB,EAAE,GAAGuB,MAAM,CAAC9C,MAAM;IACtB,IAAIQ,QAAQ,GAAGsC,MAAM,CAACtC,QAAQ,IAAI,CAAC;IACnC,IAAIZ,CAAC,GAAGkD,MAAM,CAAClD,CAAC;IAChB,IAAIC,CAAC,GAAGiD,MAAM,CAACjD,CAAC;IAChB,IAAIK,KAAK,GAAG4C,MAAM,CAAC5C,KAAK,GAAGX,IAAI,CAACwD,GAAG,CAACD,MAAM,CAAC5C,KAAK,CAAC,GAAG,CAAC;IACrD,IAAIC,KAAK,GAAG2C,MAAM,CAAC3C,KAAK,GAAGZ,IAAI,CAACwD,GAAG,CAAC,CAACD,MAAM,CAAC3C,KAAK,CAAC,GAAG,CAAC;IACtD,IAAImC,EAAE,IAAIC,EAAE,EAAE;MACV1B,CAAC,CAAC,CAAC,CAAC,GAAG,CAACyB,EAAE,GAAGhB,EAAE,GAAGpB,KAAK,GAAGqC,EAAE,GAAGhB,EAAE;MACjCV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC0B,EAAE,GAAGhB,EAAE,GAAGpB,KAAK,GAAGmC,EAAE,GAAGhB,EAAE;IACrC,CAAC,MACI;MACDT,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACnB;IACAA,CAAC,CAAC,CAAC,CAAC,GAAGS,EAAE;IACTT,CAAC,CAAC,CAAC,CAAC,GAAGU,EAAE;IACTV,CAAC,CAAC,CAAC,CAAC,GAAGV,KAAK,GAAGmB,EAAE;IACjBT,CAAC,CAAC,CAAC,CAAC,GAAGX,KAAK,GAAGqB,EAAE;IACjBf,QAAQ,IAAI7B,MAAM,CAACqE,MAAM,CAACnC,CAAC,EAAEA,CAAC,EAAEL,QAAQ,CAAC;IACzCK,CAAC,CAAC,CAAC,CAAC,IAAIyB,EAAE,GAAG1C,CAAC;IACdiB,CAAC,CAAC,CAAC,CAAC,IAAI0B,EAAE,GAAG1C,CAAC;IACd,OAAOgB,CAAC;EACZ,CAAC;EACDrB,aAAa,CAACyD,gBAAgB,GAAI,YAAY;IAC1C,IAAIC,KAAK,GAAG1D,aAAa,CAACC,SAAS;IACnCyD,KAAK,CAACtD,CAAC,GAAG,CAAC;IACXsD,KAAK,CAACrD,CAAC,GAAG,CAAC;IACXqD,KAAK,CAACnD,MAAM,GAAG,CAAC;IAChBmD,KAAK,CAAClD,MAAM,GAAG,CAAC;IAChBkD,KAAK,CAAC7C,OAAO,GAAG,CAAC;IACjB6C,KAAK,CAAC5C,OAAO,GAAG,CAAC;IACjB4C,KAAK,CAAChD,KAAK,GAAG,CAAC;IACfgD,KAAK,CAAC/C,KAAK,GAAG,CAAC;IACf+C,KAAK,CAAC1C,QAAQ,GAAG,CAAC;IAClB0C,KAAK,CAAChC,gBAAgB,GAAG,CAAC;EAC9B,CAAC,EAAG;EACJ,OAAO1B,aAAa;AACxB,CAAC,EAAG;AACJ;AACA,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}