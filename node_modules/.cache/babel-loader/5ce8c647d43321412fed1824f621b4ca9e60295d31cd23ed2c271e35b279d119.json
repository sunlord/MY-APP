{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport View from '../View';\nimport geoSourceManager from './geoSourceManager';\nimport { SINGLE_REFERRING } from '../../util/model';\nvar GEO_DEFAULT_PARAMS = {\n  'geoJSON': {\n    aspectScale: 0.75,\n    invertLongitute: true\n  },\n  'geoSVG': {\n    aspectScale: 1,\n    invertLongitute: false\n  }\n};\nvar Geo = /** @class */\nfunction (_super) {\n  __extends(Geo, _super);\n  function Geo(name, map, opt) {\n    var _this = _super.call(this, name) || this;\n    _this.dimensions = ['lng', 'lat'];\n    _this.type = 'geo'; // Only store specified name coord via `addGeoCoord`.\n\n    _this._nameCoordMap = zrUtil.createHashMap();\n    _this.map = map;\n    var source = geoSourceManager.load(map, opt.nameMap, opt.nameProperty);\n    var resource = geoSourceManager.getGeoResource(map);\n    _this.resourceType = resource ? resource.type : null;\n    var defaultParmas = GEO_DEFAULT_PARAMS[resource.type];\n    _this._regionsMap = source.regionsMap;\n    _this._invertLongitute = defaultParmas.invertLongitute;\n    _this.regions = source.regions;\n    _this.aspectScale = zrUtil.retrieve2(opt.aspectScale, defaultParmas.aspectScale);\n    var boundingRect = source.boundingRect;\n    _this.setBoundingRect(boundingRect.x, boundingRect.y, boundingRect.width, boundingRect.height);\n    return _this;\n  }\n  /**\n   * Whether contain the given [lng, lat] coord.\n   */\n  // Never used yet.\n  // containCoord(coord: number[]) {\n  //     const regions = this.regions;\n  //     for (let i = 0; i < regions.length; i++) {\n  //         const region = regions[i];\n  //         if (region.type === 'geoJSON' && (region as GeoJSONRegion).contain(coord)) {\n  //             return true;\n  //         }\n  //     }\n  //     return false;\n  // }\n\n  Geo.prototype._transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    var rawParent = rawTransformable.parent;\n    rawTransformable.parent = null;\n    rawTransformable.decomposeTransform();\n    rawTransformable.parent = rawParent;\n    if (invertLongitute) {\n      rawTransformable.scaleY = -rawTransformable.scaleY;\n    }\n    this._updateTransform();\n  };\n  Geo.prototype.getRegion = function (name) {\n    return this._regionsMap.get(name);\n  };\n  Geo.prototype.getRegionByCoord = function (coord) {\n    var regions = this.regions;\n    for (var i = 0; i < regions.length; i++) {\n      var region = regions[i];\n      if (region.type === 'geoJSON' && region.contain(coord)) {\n        return regions[i];\n      }\n    }\n  };\n  /**\n   * Add geoCoord for indexing by name\n   */\n\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  };\n  /**\n   * Get geoCoord by name\n   */\n\n  Geo.prototype.getGeoCoord = function (name) {\n    var region = this._regionsMap.get(name); // calcualte center only on demand.\n\n    return this._nameCoordMap.get(name) || region && region.getCenter();\n  };\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  };\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n  return Geo;\n}(View);\n;\nzrUtil.mixin(Geo, View);\nfunction getCoordSys(finder) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\n  || (seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\n}\nexport default Geo;","map":{"version":3,"names":["__extends","zrUtil","BoundingRect","View","geoSourceManager","SINGLE_REFERRING","GEO_DEFAULT_PARAMS","aspectScale","invertLongitute","Geo","_super","name","map","opt","_this","call","dimensions","type","_nameCoordMap","createHashMap","source","load","nameMap","nameProperty","resource","getGeoResource","resourceType","defaultParmas","_regionsMap","regionsMap","_invertLongitute","regions","retrieve2","boundingRect","setBoundingRect","x","y","width","height","prototype","_transformTo","rect","getBoundingRect","clone","rawTransformable","_rawTransformable","transform","calculateTransform","rawParent","parent","decomposeTransform","scaleY","_updateTransform","getRegion","get","getRegionByCoord","coord","i","length","region","contain","addGeoCoord","geoCoord","set","getGeoCoord","getCenter","dataToPoint","data","noRoam","out","convertToPixel","ecModel","finder","value","coordSys","getCoordSys","convertFromPixel","pixel","pointToData","mixin","geoModel","seriesModel","coordinateSystem","getReferringComponents","models"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/coord/geo/Geo.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport View from '../View';\nimport geoSourceManager from './geoSourceManager';\nimport { SINGLE_REFERRING } from '../../util/model';\nvar GEO_DEFAULT_PARAMS = {\n  'geoJSON': {\n    aspectScale: 0.75,\n    invertLongitute: true\n  },\n  'geoSVG': {\n    aspectScale: 1,\n    invertLongitute: false\n  }\n};\n\nvar Geo =\n/** @class */\nfunction (_super) {\n  __extends(Geo, _super);\n\n  function Geo(name, map, opt) {\n    var _this = _super.call(this, name) || this;\n\n    _this.dimensions = ['lng', 'lat'];\n    _this.type = 'geo'; // Only store specified name coord via `addGeoCoord`.\n\n    _this._nameCoordMap = zrUtil.createHashMap();\n    _this.map = map;\n    var source = geoSourceManager.load(map, opt.nameMap, opt.nameProperty);\n    var resource = geoSourceManager.getGeoResource(map);\n    _this.resourceType = resource ? resource.type : null;\n    var defaultParmas = GEO_DEFAULT_PARAMS[resource.type];\n    _this._regionsMap = source.regionsMap;\n    _this._invertLongitute = defaultParmas.invertLongitute;\n    _this.regions = source.regions;\n    _this.aspectScale = zrUtil.retrieve2(opt.aspectScale, defaultParmas.aspectScale);\n    var boundingRect = source.boundingRect;\n\n    _this.setBoundingRect(boundingRect.x, boundingRect.y, boundingRect.width, boundingRect.height);\n\n    return _this;\n  }\n  /**\n   * Whether contain the given [lng, lat] coord.\n   */\n  // Never used yet.\n  // containCoord(coord: number[]) {\n  //     const regions = this.regions;\n  //     for (let i = 0; i < regions.length; i++) {\n  //         const region = regions[i];\n  //         if (region.type === 'geoJSON' && (region as GeoJSONRegion).contain(coord)) {\n  //             return true;\n  //         }\n  //     }\n  //     return false;\n  // }\n\n\n  Geo.prototype._transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    var rawParent = rawTransformable.parent;\n    rawTransformable.parent = null;\n    rawTransformable.decomposeTransform();\n    rawTransformable.parent = rawParent;\n\n    if (invertLongitute) {\n      rawTransformable.scaleY = -rawTransformable.scaleY;\n    }\n\n    this._updateTransform();\n  };\n\n  Geo.prototype.getRegion = function (name) {\n    return this._regionsMap.get(name);\n  };\n\n  Geo.prototype.getRegionByCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var region = regions[i];\n\n      if (region.type === 'geoJSON' && region.contain(coord)) {\n        return regions[i];\n      }\n    }\n  };\n  /**\n   * Add geoCoord for indexing by name\n   */\n\n\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  };\n  /**\n   * Get geoCoord by name\n   */\n\n\n  Geo.prototype.getGeoCoord = function (name) {\n    var region = this._regionsMap.get(name); // calcualte center only on demand.\n\n\n    return this._nameCoordMap.get(name) || region && region.getCenter();\n  };\n\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  };\n\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n\n  return Geo;\n}(View);\n\n;\nzrUtil.mixin(Geo, View);\n\nfunction getCoordSys(finder) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\n  || (seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\n}\n\nexport default Geo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}