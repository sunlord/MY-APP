{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookie from \"js-cookie\";\nexport default {\n  state: {\n    isCollapse: false,\n    //控制菜单的展开和收起\n    tabsList: [{\n      path: \"/\",\n      name: \"home\",\n      label: \"首页\",\n      icon: \"s-home\",\n      url: \"Home/Home\"\n    }],\n    //面包屑数据\n    menu: []\n  },\n  mutations: {\n    //修改菜单展开和收起的方法\n    collapseMenu(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    // 更新面包屑数据\n    selectMenu(state, val) {\n      // console.log(val, 'val');\n      // 判断添加的数据是否为首页\n      if (val.name !== 'home') {\n        const index = state.tabsList.findIndex(item => item.name === val.name);\n        // 如果不存在\n        if (index === -1) {\n          state.tabsList.push(val);\n        }\n      }\n    },\n    // 设置menu的数据\n    setMenu(state, val) {\n      state.menu = val;\n      Cookie.set('menu', JSON.stringify(val));\n    },\n    // 动态注册路由\n    addMenu(state, router) {\n      // 判断当前缓存中是否有数据\n      if (!Cookie.get('menu')) return;\n      const menu = JSON.parse(Cookie.get('menu'));\n      state.menu = menu;\n      // 组装动态路由的数据\n      const menuArray = [];\n      menu.forEach(item => {\n        if (item.children) {\n          item.children = item.children.map(item => {\n            item.component = () => import(`../views/${item.url}`);\n            return item;\n          });\n          menuArray.push(...item.children);\n        } else {\n          item.component = () => import(`../views/${item.url}`);\n        }\n      });\n      console.log(menuArray, 'menuArray');\n      // 路由的动态添加\n    }\n  }\n};","map":{"version":3,"names":["Cookie","state","isCollapse","tabsList","path","name","label","icon","url","menu","mutations","collapseMenu","selectMenu","val","index","findIndex","item","push","setMenu","set","JSON","stringify","addMenu","router","get","parse","menuArray","forEach","children","map","component","console","log"],"sources":["/Users/jiong/Downloads/my-app/src/store/tab.js"],"sourcesContent":["import Cookie from \"js-cookie\";\n\nexport default {\n  state: {\n    isCollapse: false, //控制菜单的展开和收起\n    tabsList: [\n      {\n        path: \"/\",\n        name: \"home\",\n        label: \"首页\",\n        icon: \"s-home\",\n        url: \"Home/Home\",\n      }\n    ], //面包屑数据\n    menu: []\n  },\n  mutations: {\n    //修改菜单展开和收起的方法\n    collapseMenu(state) {\n      state.isCollapse = !state.isCollapse\n    },\n    // 更新面包屑数据\n    selectMenu(state, val) {\n      // console.log(val, 'val');\n      // 判断添加的数据是否为首页\n      if (val.name !== 'home') {\n        const index = state.tabsList.findIndex(item => item.name === val.name)\n        // 如果不存在\n        if (index === -1) {\n          state.tabsList.push(val);\n        }\n      }\n    },\n    // 设置menu的数据\n    setMenu(state, val) {\n      state.menu = val\n      Cookie.set('menu', JSON.stringify(val))\n    },\n    // 动态注册路由\n    addMenu(state, router) {\n      // 判断当前缓存中是否有数据\n      if (!Cookie.get('menu')) return\n      const menu = JSON.parse(Cookie.get('menu'))\n      state.menu = menu\n      // 组装动态路由的数据\n      const menuArray = []\n      menu.forEach(item => {\n        if (item.children) {\n          item.children = item.children.map(item => {\n            item.component = () => import(`../views/${item.url}`)\n            return item\n          })\n          menuArray.push(...item.children)\n        } else {\n          item.component = () => import(`../views/${item.url}`)\n        }\n      })\n      console.log(menuArray, 'menuArray')\n      // 路由的动态添加\n      \n    }\n  }\n}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,WAAW;AAE9B,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAE,KAAK;IAAE;IACnBC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,GAAG;MACTC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAE;IACP,CAAC,CACF;IAAE;IACHC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,YAAY,CAACV,KAAK,EAAE;MAClBA,KAAK,CAACC,UAAU,GAAG,CAACD,KAAK,CAACC,UAAU;IACtC,CAAC;IACD;IACAU,UAAU,CAACX,KAAK,EAAEY,GAAG,EAAE;MACrB;MACA;MACA,IAAIA,GAAG,CAACR,IAAI,KAAK,MAAM,EAAE;QACvB,MAAMS,KAAK,GAAGb,KAAK,CAACE,QAAQ,CAACY,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACX,IAAI,KAAKQ,GAAG,CAACR,IAAI,CAAC;QACtE;QACA,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBb,KAAK,CAACE,QAAQ,CAACc,IAAI,CAACJ,GAAG,CAAC;QAC1B;MACF;IACF,CAAC;IACD;IACAK,OAAO,CAACjB,KAAK,EAAEY,GAAG,EAAE;MAClBZ,KAAK,CAACQ,IAAI,GAAGI,GAAG;MAChBb,MAAM,CAACmB,GAAG,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG,CAAC,CAAC;IACzC,CAAC;IACD;IACAS,OAAO,CAACrB,KAAK,EAAEsB,MAAM,EAAE;MACrB;MACA,IAAI,CAACvB,MAAM,CAACwB,GAAG,CAAC,MAAM,CAAC,EAAE;MACzB,MAAMf,IAAI,GAAGW,IAAI,CAACK,KAAK,CAACzB,MAAM,CAACwB,GAAG,CAAC,MAAM,CAAC,CAAC;MAC3CvB,KAAK,CAACQ,IAAI,GAAGA,IAAI;MACjB;MACA,MAAMiB,SAAS,GAAG,EAAE;MACpBjB,IAAI,CAACkB,OAAO,CAACX,IAAI,IAAI;QACnB,IAAIA,IAAI,CAACY,QAAQ,EAAE;UACjBZ,IAAI,CAACY,QAAQ,GAAGZ,IAAI,CAACY,QAAQ,CAACC,GAAG,CAACb,IAAI,IAAI;YACxCA,IAAI,CAACc,SAAS,GAAG,MAAM,MAAM,CAAE,YAAWd,IAAI,CAACR,GAAI,EAAC,CAAC;YACrD,OAAOQ,IAAI;UACb,CAAC,CAAC;UACFU,SAAS,CAACT,IAAI,CAAC,GAAGD,IAAI,CAACY,QAAQ,CAAC;QAClC,CAAC,MAAM;UACLZ,IAAI,CAACc,SAAS,GAAG,MAAM,MAAM,CAAE,YAAWd,IAAI,CAACR,GAAI,EAAC,CAAC;QACvD;MACF,CAAC,CAAC;MACFuB,OAAO,CAACC,GAAG,CAACN,SAAS,EAAE,WAAW,CAAC;MACnC;IAEF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}