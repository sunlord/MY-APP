{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport MapDraw from '../helper/MapDraw';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { findEventDispatcher } from '../../util/event';\nvar GeoView = /** @class */\nfunction (_super) {\n  __extends(GeoView, _super);\n  function GeoView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GeoView.type;\n    _this.focusBlurEnabled = true;\n    return _this;\n  }\n  GeoView.prototype.init = function (ecModel, api) {\n    var mapDraw = new MapDraw(api);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n    this._api = api;\n  };\n  GeoView.prototype.render = function (geoModel, ecModel, api, payload) {\n    var mapDraw = this._mapDraw;\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n    mapDraw.group.on('click', this._handleRegionClick, this);\n    mapDraw.group.silent = geoModel.get('silent');\n    this._model = geoModel;\n    this.updateSelectStatus(geoModel, ecModel, api);\n  };\n  GeoView.prototype._handleRegionClick = function (e) {\n    var eventData;\n    findEventDispatcher(e.target, function (current) {\n      return (eventData = getECData(current).eventData) != null;\n    }, true);\n    if (eventData) {\n      this._api.dispatchAction({\n        type: 'geoToggleSelect',\n        geoId: this._model.id,\n        name: eventData.name\n      });\n    }\n  };\n  GeoView.prototype.updateSelectStatus = function (model, ecModel, api) {\n    var _this = this;\n    this._mapDraw.group.traverse(function (node) {\n      var eventData = getECData(node).eventData;\n      if (eventData) {\n        _this._model.isSelected(eventData.name) ? api.enterSelect(node) : api.leaveSelect(node); // No need to traverse children.\n\n        return true;\n      }\n    });\n  };\n  GeoView.prototype.findHighDownDispatchers = function (name) {\n    return this._mapDraw && this._mapDraw.findHighDownDispatchers(name, this._model);\n  };\n  GeoView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n  };\n  GeoView.type = 'geo';\n  return GeoView;\n}(ComponentView);\nexport default GeoView;","map":{"version":3,"names":["__extends","MapDraw","ComponentView","getECData","findEventDispatcher","GeoView","_super","_this","apply","arguments","type","focusBlurEnabled","prototype","init","ecModel","api","mapDraw","_mapDraw","group","add","_api","render","geoModel","payload","get","draw","removeAll","on","_handleRegionClick","silent","_model","updateSelectStatus","e","eventData","target","current","dispatchAction","geoId","id","name","model","traverse","node","isSelected","enterSelect","leaveSelect","findHighDownDispatchers","dispose","remove"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/component/geo/GeoView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport MapDraw from '../helper/MapDraw';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { findEventDispatcher } from '../../util/event';\n\nvar GeoView =\n/** @class */\nfunction (_super) {\n  __extends(GeoView, _super);\n\n  function GeoView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GeoView.type;\n    _this.focusBlurEnabled = true;\n    return _this;\n  }\n\n  GeoView.prototype.init = function (ecModel, api) {\n    var mapDraw = new MapDraw(api);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n    this._api = api;\n  };\n\n  GeoView.prototype.render = function (geoModel, ecModel, api, payload) {\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    mapDraw.group.on('click', this._handleRegionClick, this);\n    mapDraw.group.silent = geoModel.get('silent');\n    this._model = geoModel;\n    this.updateSelectStatus(geoModel, ecModel, api);\n  };\n\n  GeoView.prototype._handleRegionClick = function (e) {\n    var eventData;\n    findEventDispatcher(e.target, function (current) {\n      return (eventData = getECData(current).eventData) != null;\n    }, true);\n\n    if (eventData) {\n      this._api.dispatchAction({\n        type: 'geoToggleSelect',\n        geoId: this._model.id,\n        name: eventData.name\n      });\n    }\n  };\n\n  GeoView.prototype.updateSelectStatus = function (model, ecModel, api) {\n    var _this = this;\n\n    this._mapDraw.group.traverse(function (node) {\n      var eventData = getECData(node).eventData;\n\n      if (eventData) {\n        _this._model.isSelected(eventData.name) ? api.enterSelect(node) : api.leaveSelect(node); // No need to traverse children.\n\n        return true;\n      }\n    });\n  };\n\n  GeoView.prototype.findHighDownDispatchers = function (name) {\n    return this._mapDraw && this._mapDraw.findHighDownDispatchers(name, this._model);\n  };\n\n  GeoView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n  };\n\n  GeoView.type = 'geo';\n  return GeoView;\n}(ComponentView);\n\nexport default GeoView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}