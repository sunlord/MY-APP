{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Clip from './Clip';\nimport * as color from '../tool/color';\nimport { isArrayLike, keys, logError } from '../core/util';\nvar arraySlice = Array.prototype.slice;\nexport function interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\nexport function step(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\nexport function interpolate1DArray(out, p0, p1, percent) {\n  var len = p0.length;\n  for (var i = 0; i < len; i++) {\n    out[i] = interpolateNumber(p0[i], p1[i], percent);\n  }\n}\nexport function interpolate2DArray(out, p0, p1, percent) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n    }\n  }\n}\nfunction add1DArray(out, p0, p1, sign) {\n  var len = p0.length;\n  for (var i = 0; i < len; i++) {\n    out[i] = p0[i] + p1[i] * sign;\n  }\n  return out;\n}\nfunction add2DArray(out, p0, p1, sign) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = p0[i][j] + p1[i][j] * sign;\n    }\n  }\n  return out;\n}\nfunction fillArray(val0, val1, arrDim) {\n  var arr0 = val0;\n  var arr1 = val1;\n  if (!arr0.push || !arr1.push) {\n    return;\n  }\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n  if (arr0Len !== arr1Len) {\n    var isPreviousLarger = arr0Len > arr1Len;\n    if (isPreviousLarger) {\n      arr0.length = arr1Len;\n    } else {\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  }\n  var len2 = arr0[0] && arr0[0].length;\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\nfunction is1DArraySame(arr0, arr1) {\n  var len = arr0.length;\n  if (len !== arr1.length) {\n    return false;\n  }\n  for (var i = 0; i < len; i++) {\n    if (arr0[i] !== arr1[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction is2DArraySame(arr0, arr1) {\n  var len = arr0.length;\n  if (len !== arr1.length) {\n    return false;\n  }\n  var len2 = arr0[0].length;\n  for (var i = 0; i < len; i++) {\n    for (var j = 0; j < len2; j++) {\n      if (arr0[i][j] !== arr1[i][j]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\nfunction catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\n  var len = p0.length;\n  for (var i = 0; i < len; i++) {\n    out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n  }\n}\nfunction catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\n  var len = p0.length;\n  var len2 = p0[0].length;\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[1] = [];\n    }\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n    }\n  }\n}\nexport function cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n    if (isArrayLike(value[0])) {\n      var ret = [];\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n      return ret;\n    }\n    return arraySlice.call(value);\n  }\n  return value;\n}\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\nfunction guessArrayDim(value) {\n  return isArrayLike(value && value[0]) ? 2 : 1;\n}\nvar tmpRgba = [0, 0, 0, 0];\nvar Track = function () {\n  function Track(propName) {\n    this.keyframes = [];\n    this.maxTime = 0;\n    this.arrDim = 0;\n    this.interpolable = true;\n    this._needsSort = false;\n    this._isAllValueEqual = true;\n    this._lastFrame = 0;\n    this._lastFramePercent = 0;\n    this.propName = propName;\n  }\n  Track.prototype.isFinished = function () {\n    return this._finished;\n  };\n  Track.prototype.setFinished = function () {\n    this._finished = true;\n    if (this._additiveTrack) {\n      this._additiveTrack.setFinished();\n    }\n  };\n  Track.prototype.needsAnimate = function () {\n    return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\n  };\n  Track.prototype.getAdditiveTrack = function () {\n    return this._additiveTrack;\n  };\n  Track.prototype.addKeyframe = function (time, value) {\n    if (time >= this.maxTime) {\n      this.maxTime = time;\n    } else {\n      this._needsSort = true;\n    }\n    var keyframes = this.keyframes;\n    var len = keyframes.length;\n    if (this.interpolable) {\n      if (isArrayLike(value)) {\n        var arrayDim = guessArrayDim(value);\n        if (len > 0 && this.arrDim !== arrayDim) {\n          this.interpolable = false;\n          return;\n        }\n        if (arrayDim === 1 && typeof value[0] !== 'number' || arrayDim === 2 && typeof value[0][0] !== 'number') {\n          this.interpolable = false;\n          return;\n        }\n        if (len > 0) {\n          var lastFrame = keyframes[len - 1];\n          if (this._isAllValueEqual) {\n            if (arrayDim === 1) {\n              if (!is1DArraySame(value, lastFrame.value)) {\n                this._isAllValueEqual = false;\n              }\n            } else {\n              this._isAllValueEqual = false;\n            }\n          }\n        }\n        this.arrDim = arrayDim;\n      } else {\n        if (this.arrDim > 0) {\n          this.interpolable = false;\n          return;\n        }\n        if (typeof value === 'string') {\n          var colorArray = color.parse(value);\n          if (colorArray) {\n            value = colorArray;\n            this.isValueColor = true;\n          } else {\n            this.interpolable = false;\n          }\n        } else if (typeof value !== 'number' || isNaN(value)) {\n          this.interpolable = false;\n          return;\n        }\n        if (this._isAllValueEqual && len > 0) {\n          var lastFrame = keyframes[len - 1];\n          if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\n            this._isAllValueEqual = false;\n          } else if (lastFrame.value !== value) {\n            this._isAllValueEqual = false;\n          }\n        }\n      }\n    }\n    var kf = {\n      time: time,\n      value: value,\n      percent: 0\n    };\n    this.keyframes.push(kf);\n    return kf;\n  };\n  Track.prototype.prepare = function (additiveTrack) {\n    var kfs = this.keyframes;\n    if (this._needsSort) {\n      kfs.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n    var arrDim = this.arrDim;\n    var kfsLen = kfs.length;\n    var lastKf = kfs[kfsLen - 1];\n    for (var i = 0; i < kfsLen; i++) {\n      kfs[i].percent = kfs[i].time / this.maxTime;\n      if (arrDim > 0 && i !== kfsLen - 1) {\n        fillArray(kfs[i].value, lastKf.value, arrDim);\n      }\n    }\n    if (additiveTrack && this.needsAnimate() && additiveTrack.needsAnimate() && arrDim === additiveTrack.arrDim && this.isValueColor === additiveTrack.isValueColor && !additiveTrack._finished) {\n      this._additiveTrack = additiveTrack;\n      var startValue = kfs[0].value;\n      for (var i = 0; i < kfsLen; i++) {\n        if (arrDim === 0) {\n          if (this.isValueColor) {\n            kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n          } else {\n            kfs[i].additiveValue = kfs[i].value - startValue;\n          }\n        } else if (arrDim === 1) {\n          kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n        } else if (arrDim === 2) {\n          kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\n        }\n      }\n    }\n  };\n  Track.prototype.step = function (target, percent) {\n    if (this._finished) {\n      return;\n    }\n    if (this._additiveTrack && this._additiveTrack._finished) {\n      this._additiveTrack = null;\n    }\n    var isAdditive = this._additiveTrack != null;\n    var valueKey = isAdditive ? 'additiveValue' : 'value';\n    var keyframes = this.keyframes;\n    var kfsNum = this.keyframes.length;\n    var propName = this.propName;\n    var arrDim = this.arrDim;\n    var isValueColor = this.isValueColor;\n    var frameIdx;\n    if (percent < 0) {\n      frameIdx = 0;\n    } else if (percent < this._lastFramePercent) {\n      var start = Math.min(this._lastFrame + 1, kfsNum - 1);\n      for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n        if (keyframes[frameIdx].percent <= percent) {\n          break;\n        }\n      }\n      frameIdx = Math.min(frameIdx, kfsNum - 2);\n    } else {\n      for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\n        if (keyframes[frameIdx].percent > percent) {\n          break;\n        }\n      }\n      frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\n    }\n    var nextFrame = keyframes[frameIdx + 1];\n    var frame = keyframes[frameIdx];\n    if (!(frame && nextFrame)) {\n      return;\n    }\n    this._lastFrame = frameIdx;\n    this._lastFramePercent = percent;\n    var range = nextFrame.percent - frame.percent;\n    if (range === 0) {\n      return;\n    }\n    var w = (percent - frame.percent) / range;\n    var targetArr = isAdditive ? this._additiveValue : isValueColor ? tmpRgba : target[propName];\n    if ((arrDim > 0 || isValueColor) && !targetArr) {\n      targetArr = this._additiveValue = [];\n    }\n    if (this.useSpline) {\n      var p1 = keyframes[frameIdx][valueKey];\n      var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\n      var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\n      var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\n      if (arrDim > 0) {\n        arrDim === 1 ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w) : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n      } else if (isValueColor) {\n        catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n        if (!isAdditive) {\n          target[propName] = rgba2String(targetArr);\n        }\n      } else {\n        var value = void 0;\n        if (!this.interpolable) {\n          value = p2;\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n        if (isAdditive) {\n          this._additiveValue = value;\n        } else {\n          target[propName] = value;\n        }\n      }\n    } else {\n      if (arrDim > 0) {\n        arrDim === 1 ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w) : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n      } else if (isValueColor) {\n        interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n        if (!isAdditive) {\n          target[propName] = rgba2String(targetArr);\n        }\n      } else {\n        var value = void 0;\n        if (!this.interpolable) {\n          value = step(frame[valueKey], nextFrame[valueKey], w);\n        } else {\n          value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n        }\n        if (isAdditive) {\n          this._additiveValue = value;\n        } else {\n          target[propName] = value;\n        }\n      }\n    }\n    if (isAdditive) {\n      this._addToTarget(target);\n    }\n  };\n  Track.prototype._addToTarget = function (target) {\n    var arrDim = this.arrDim;\n    var propName = this.propName;\n    var additiveValue = this._additiveValue;\n    if (arrDim === 0) {\n      if (this.isValueColor) {\n        color.parse(target[propName], tmpRgba);\n        add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n        target[propName] = rgba2String(tmpRgba);\n      } else {\n        target[propName] = target[propName] + additiveValue;\n      }\n    } else if (arrDim === 1) {\n      add1DArray(target[propName], target[propName], additiveValue, 1);\n    } else if (arrDim === 2) {\n      add2DArray(target[propName], target[propName], additiveValue, 1);\n    }\n  };\n  return Track;\n}();\nvar Animator = function () {\n  function Animator(target, loop, additiveTo) {\n    this._tracks = {};\n    this._trackKeys = [];\n    this._delay = 0;\n    this._maxTime = 0;\n    this._paused = false;\n    this._started = 0;\n    this._clip = null;\n    this._target = target;\n    this._loop = loop;\n    if (loop && additiveTo) {\n      logError('Can\\' use additive animation on looped animation.');\n      return;\n    }\n    this._additiveAnimators = additiveTo;\n  }\n  Animator.prototype.getTarget = function () {\n    return this._target;\n  };\n  Animator.prototype.changeTarget = function (target) {\n    this._target = target;\n  };\n  Animator.prototype.when = function (time, props) {\n    return this.whenWithKeys(time, props, keys(props));\n  };\n  Animator.prototype.whenWithKeys = function (time, props, propNames) {\n    var tracks = this._tracks;\n    for (var i = 0; i < propNames.length; i++) {\n      var propName = propNames[i];\n      var track = tracks[propName];\n      if (!track) {\n        track = tracks[propName] = new Track(propName);\n        var initialValue = void 0;\n        var additiveTrack = this._getAdditiveTrack(propName);\n        if (additiveTrack) {\n          var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\n          initialValue = lastFinalKf && lastFinalKf.value;\n          if (additiveTrack.isValueColor && initialValue) {\n            initialValue = rgba2String(initialValue);\n          }\n        } else {\n          initialValue = this._target[propName];\n        }\n        if (initialValue == null) {\n          continue;\n        }\n        if (time !== 0) {\n          track.addKeyframe(0, cloneValue(initialValue));\n        }\n        this._trackKeys.push(propName);\n      }\n      track.addKeyframe(time, cloneValue(props[propName]));\n    }\n    this._maxTime = Math.max(this._maxTime, time);\n    return this;\n  };\n  Animator.prototype.pause = function () {\n    this._clip.pause();\n    this._paused = true;\n  };\n  Animator.prototype.resume = function () {\n    this._clip.resume();\n    this._paused = false;\n  };\n  Animator.prototype.isPaused = function () {\n    return !!this._paused;\n  };\n  Animator.prototype._doneCallback = function () {\n    this._setTracksFinished();\n    this._clip = null;\n    var doneList = this._doneList;\n    if (doneList) {\n      var len = doneList.length;\n      for (var i = 0; i < len; i++) {\n        doneList[i].call(this);\n      }\n    }\n  };\n  Animator.prototype._abortedCallback = function () {\n    this._setTracksFinished();\n    var animation = this.animation;\n    var abortedList = this._abortedList;\n    if (animation) {\n      animation.removeClip(this._clip);\n    }\n    this._clip = null;\n    if (abortedList) {\n      for (var i = 0; i < abortedList.length; i++) {\n        abortedList[i].call(this);\n      }\n    }\n  };\n  Animator.prototype._setTracksFinished = function () {\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n    for (var i = 0; i < tracksKeys.length; i++) {\n      tracks[tracksKeys[i]].setFinished();\n    }\n  };\n  Animator.prototype._getAdditiveTrack = function (trackName) {\n    var additiveTrack;\n    var additiveAnimators = this._additiveAnimators;\n    if (additiveAnimators) {\n      for (var i = 0; i < additiveAnimators.length; i++) {\n        var track = additiveAnimators[i].getTrack(trackName);\n        if (track) {\n          additiveTrack = track;\n        }\n      }\n    }\n    return additiveTrack;\n  };\n  Animator.prototype.start = function (easing, forceAnimate) {\n    if (this._started > 0) {\n      return;\n    }\n    this._started = 1;\n    var self = this;\n    var tracks = [];\n    for (var i = 0; i < this._trackKeys.length; i++) {\n      var propName = this._trackKeys[i];\n      var track = this._tracks[propName];\n      var additiveTrack = this._getAdditiveTrack(propName);\n      var kfs = track.keyframes;\n      track.prepare(additiveTrack);\n      if (track.needsAnimate()) {\n        tracks.push(track);\n      } else if (!track.interpolable) {\n        var lastKf = kfs[kfs.length - 1];\n        if (lastKf) {\n          self._target[track.propName] = lastKf.value;\n        }\n      }\n    }\n    if (tracks.length || forceAnimate) {\n      var clip = new Clip({\n        life: this._maxTime,\n        loop: this._loop,\n        delay: this._delay,\n        onframe: function (percent) {\n          self._started = 2;\n          var additiveAnimators = self._additiveAnimators;\n          if (additiveAnimators) {\n            var stillHasAdditiveAnimator = false;\n            for (var i = 0; i < additiveAnimators.length; i++) {\n              if (additiveAnimators[i]._clip) {\n                stillHasAdditiveAnimator = true;\n                break;\n              }\n            }\n            if (!stillHasAdditiveAnimator) {\n              self._additiveAnimators = null;\n            }\n          }\n          for (var i = 0; i < tracks.length; i++) {\n            tracks[i].step(self._target, percent);\n          }\n          var onframeList = self._onframeList;\n          if (onframeList) {\n            for (var i = 0; i < onframeList.length; i++) {\n              onframeList[i](self._target, percent);\n            }\n          }\n        },\n        ondestroy: function () {\n          self._doneCallback();\n        }\n      });\n      this._clip = clip;\n      if (this.animation) {\n        this.animation.addClip(clip);\n      }\n      if (easing && easing !== 'spline') {\n        clip.easing = easing;\n      }\n    } else {\n      this._doneCallback();\n    }\n    return this;\n  };\n  Animator.prototype.stop = function (forwardToLast) {\n    if (!this._clip) {\n      return;\n    }\n    var clip = this._clip;\n    if (forwardToLast) {\n      clip.onframe(1);\n    }\n    this._abortedCallback();\n  };\n  Animator.prototype.delay = function (time) {\n    this._delay = time;\n    return this;\n  };\n  Animator.prototype.during = function (cb) {\n    if (cb) {\n      if (!this._onframeList) {\n        this._onframeList = [];\n      }\n      this._onframeList.push(cb);\n    }\n    return this;\n  };\n  Animator.prototype.done = function (cb) {\n    if (cb) {\n      if (!this._doneList) {\n        this._doneList = [];\n      }\n      this._doneList.push(cb);\n    }\n    return this;\n  };\n  Animator.prototype.aborted = function (cb) {\n    if (cb) {\n      if (!this._abortedList) {\n        this._abortedList = [];\n      }\n      this._abortedList.push(cb);\n    }\n    return this;\n  };\n  Animator.prototype.getClip = function () {\n    return this._clip;\n  };\n  Animator.prototype.getTrack = function (propName) {\n    return this._tracks[propName];\n  };\n  Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n    if (!propNames.length || !this._clip) {\n      return true;\n    }\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n    for (var i = 0; i < propNames.length; i++) {\n      var track = tracks[propNames[i]];\n      if (track) {\n        if (forwardToLast) {\n          track.step(this._target, 1);\n        } else if (this._started === 1) {\n          track.step(this._target, 0);\n        }\n        track.setFinished();\n      }\n    }\n    var allAborted = true;\n    for (var i = 0; i < tracksKeys.length; i++) {\n      if (!tracks[tracksKeys[i]].isFinished()) {\n        allAborted = false;\n        break;\n      }\n    }\n    if (allAborted) {\n      this._abortedCallback();\n    }\n    return allAborted;\n  };\n  Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\n    if (!target) {\n      return;\n    }\n    trackKeys = trackKeys || this._trackKeys;\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n      if (!track || track.isFinished()) {\n        continue;\n      }\n      var kfs = track.keyframes;\n      var lastKf = kfs[kfs.length - 1];\n      if (lastKf) {\n        var val = cloneValue(lastKf.value);\n        if (track.isValueColor) {\n          val = rgba2String(val);\n        }\n        target[propName] = val;\n      }\n    }\n  };\n  Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n    trackKeys = trackKeys || keys(finalProps);\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n      if (!track) {\n        continue;\n      }\n      var kfs = track.keyframes;\n      if (kfs.length > 1) {\n        var lastKf = kfs.pop();\n        track.addKeyframe(lastKf.time, finalProps[propName]);\n        track.prepare(track.getAdditiveTrack());\n      }\n    }\n  };\n  return Animator;\n}();\nexport default Animator;","map":{"version":3,"names":["Clip","color","isArrayLike","keys","logError","arraySlice","Array","prototype","slice","interpolateNumber","p0","p1","percent","step","interpolate1DArray","out","len","length","i","interpolate2DArray","len2","j","add1DArray","sign","add2DArray","fillArray","val0","val1","arrDim","arr0","arr1","push","arr0Len","arr1Len","isPreviousLarger","call","isNaN","is1DArraySame","is2DArraySame","catmullRomInterpolate","p2","p3","t","t2","t3","v0","v1","catmullRomInterpolate1DArray","catmullRomInterpolate2DArray","cloneValue","value","ret","rgba2String","rgba","Math","floor","join","guessArrayDim","tmpRgba","Track","propName","keyframes","maxTime","interpolable","_needsSort","_isAllValueEqual","_lastFrame","_lastFramePercent","isFinished","_finished","setFinished","_additiveTrack","needsAnimate","getAdditiveTrack","addKeyframe","time","arrayDim","lastFrame","colorArray","parse","isValueColor","kf","prepare","additiveTrack","kfs","sort","a","b","kfsLen","lastKf","startValue","additiveValue","target","isAdditive","valueKey","kfsNum","frameIdx","start","min","nextFrame","frame","range","w","targetArr","_additiveValue","useSpline","_addToTarget","Animator","loop","additiveTo","_tracks","_trackKeys","_delay","_maxTime","_paused","_started","_clip","_target","_loop","_additiveAnimators","getTarget","changeTarget","when","props","whenWithKeys","propNames","tracks","track","initialValue","_getAdditiveTrack","lastFinalKf","max","pause","resume","isPaused","_doneCallback","_setTracksFinished","doneList","_doneList","_abortedCallback","animation","abortedList","_abortedList","removeClip","tracksKeys","trackName","additiveAnimators","getTrack","easing","forceAnimate","self","clip","life","delay","onframe","stillHasAdditiveAnimator","onframeList","_onframeList","ondestroy","addClip","stop","forwardToLast","during","cb","done","aborted","getClip","stopTracks","allAborted","saveFinalToTarget","trackKeys","val","__changeFinalValue","finalProps","pop"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/animation/Animator.js"],"sourcesContent":["import Clip from './Clip';\nimport * as color from '../tool/color';\nimport { isArrayLike, keys, logError } from '../core/util';\nvar arraySlice = Array.prototype.slice;\nexport function interpolateNumber(p0, p1, percent) {\n    return (p1 - p0) * percent + p0;\n}\nexport function step(p0, p1, percent) {\n    return percent > 0.5 ? p1 : p0;\n}\nexport function interpolate1DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n}\nexport function interpolate2DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n        }\n    }\n}\nfunction add1DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = p0[i] + p1[i] * sign;\n    }\n    return out;\n}\nfunction add2DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = p0[i][j] + p1[i][j] * sign;\n        }\n    }\n    return out;\n}\nfunction fillArray(val0, val1, arrDim) {\n    var arr0 = val0;\n    var arr1 = val1;\n    if (!arr0.push || !arr1.push) {\n        return;\n    }\n    var arr0Len = arr0.length;\n    var arr1Len = arr1.length;\n    if (arr0Len !== arr1Len) {\n        var isPreviousLarger = arr0Len > arr1Len;\n        if (isPreviousLarger) {\n            arr0.length = arr1Len;\n        }\n        else {\n            for (var i = arr0Len; i < arr1Len; i++) {\n                arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n            }\n        }\n    }\n    var len2 = arr0[0] && arr0[0].length;\n    for (var i = 0; i < arr0.length; i++) {\n        if (arrDim === 1) {\n            if (isNaN(arr0[i])) {\n                arr0[i] = arr1[i];\n            }\n        }\n        else {\n            for (var j = 0; j < len2; j++) {\n                if (isNaN(arr0[i][j])) {\n                    arr0[i][j] = arr1[i][j];\n                }\n            }\n        }\n    }\n}\nfunction is1DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (arr0[i] !== arr1[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction is2DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    var len2 = arr0[0].length;\n    for (var i = 0; i < len; i++) {\n        for (var j = 0; j < len2; j++) {\n            if (arr0[i][j] !== arr1[i][j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3\n        + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n        + v0 * t + p1;\n}\nfunction catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n}\nfunction catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\n    var len = p0.length;\n    var len2 = p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[1] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n        }\n    }\n}\nexport function cloneValue(value) {\n    if (isArrayLike(value)) {\n        var len = value.length;\n        if (isArrayLike(value[0])) {\n            var ret = [];\n            for (var i = 0; i < len; i++) {\n                ret.push(arraySlice.call(value[i]));\n            }\n            return ret;\n        }\n        return arraySlice.call(value);\n    }\n    return value;\n}\nfunction rgba2String(rgba) {\n    rgba[0] = Math.floor(rgba[0]);\n    rgba[1] = Math.floor(rgba[1]);\n    rgba[2] = Math.floor(rgba[2]);\n    return 'rgba(' + rgba.join(',') + ')';\n}\nfunction guessArrayDim(value) {\n    return isArrayLike(value && value[0]) ? 2 : 1;\n}\nvar tmpRgba = [0, 0, 0, 0];\nvar Track = (function () {\n    function Track(propName) {\n        this.keyframes = [];\n        this.maxTime = 0;\n        this.arrDim = 0;\n        this.interpolable = true;\n        this._needsSort = false;\n        this._isAllValueEqual = true;\n        this._lastFrame = 0;\n        this._lastFramePercent = 0;\n        this.propName = propName;\n    }\n    Track.prototype.isFinished = function () {\n        return this._finished;\n    };\n    Track.prototype.setFinished = function () {\n        this._finished = true;\n        if (this._additiveTrack) {\n            this._additiveTrack.setFinished();\n        }\n    };\n    Track.prototype.needsAnimate = function () {\n        return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\n    };\n    Track.prototype.getAdditiveTrack = function () {\n        return this._additiveTrack;\n    };\n    Track.prototype.addKeyframe = function (time, value) {\n        if (time >= this.maxTime) {\n            this.maxTime = time;\n        }\n        else {\n            this._needsSort = true;\n        }\n        var keyframes = this.keyframes;\n        var len = keyframes.length;\n        if (this.interpolable) {\n            if (isArrayLike(value)) {\n                var arrayDim = guessArrayDim(value);\n                if (len > 0 && this.arrDim !== arrayDim) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (arrayDim === 1 && typeof value[0] !== 'number'\n                    || arrayDim === 2 && typeof value[0][0] !== 'number') {\n                    this.interpolable = false;\n                    return;\n                }\n                if (len > 0) {\n                    var lastFrame = keyframes[len - 1];\n                    if (this._isAllValueEqual) {\n                        if (arrayDim === 1) {\n                            if (!is1DArraySame(value, lastFrame.value)) {\n                                this._isAllValueEqual = false;\n                            }\n                        }\n                        else {\n                            this._isAllValueEqual = false;\n                        }\n                    }\n                }\n                this.arrDim = arrayDim;\n            }\n            else {\n                if (this.arrDim > 0) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (typeof value === 'string') {\n                    var colorArray = color.parse(value);\n                    if (colorArray) {\n                        value = colorArray;\n                        this.isValueColor = true;\n                    }\n                    else {\n                        this.interpolable = false;\n                    }\n                }\n                else if (typeof value !== 'number' || isNaN(value)) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (this._isAllValueEqual && len > 0) {\n                    var lastFrame = keyframes[len - 1];\n                    if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\n                        this._isAllValueEqual = false;\n                    }\n                    else if (lastFrame.value !== value) {\n                        this._isAllValueEqual = false;\n                    }\n                }\n            }\n        }\n        var kf = {\n            time: time,\n            value: value,\n            percent: 0\n        };\n        this.keyframes.push(kf);\n        return kf;\n    };\n    Track.prototype.prepare = function (additiveTrack) {\n        var kfs = this.keyframes;\n        if (this._needsSort) {\n            kfs.sort(function (a, b) {\n                return a.time - b.time;\n            });\n        }\n        var arrDim = this.arrDim;\n        var kfsLen = kfs.length;\n        var lastKf = kfs[kfsLen - 1];\n        for (var i = 0; i < kfsLen; i++) {\n            kfs[i].percent = kfs[i].time / this.maxTime;\n            if (arrDim > 0 && i !== kfsLen - 1) {\n                fillArray(kfs[i].value, lastKf.value, arrDim);\n            }\n        }\n        if (additiveTrack\n            && this.needsAnimate()\n            && additiveTrack.needsAnimate()\n            && arrDim === additiveTrack.arrDim\n            && this.isValueColor === additiveTrack.isValueColor\n            && !additiveTrack._finished) {\n            this._additiveTrack = additiveTrack;\n            var startValue = kfs[0].value;\n            for (var i = 0; i < kfsLen; i++) {\n                if (arrDim === 0) {\n                    if (this.isValueColor) {\n                        kfs[i].additiveValue\n                            = add1DArray([], kfs[i].value, startValue, -1);\n                    }\n                    else {\n                        kfs[i].additiveValue = kfs[i].value - startValue;\n                    }\n                }\n                else if (arrDim === 1) {\n                    kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n                }\n                else if (arrDim === 2) {\n                    kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\n                }\n            }\n        }\n    };\n    Track.prototype.step = function (target, percent) {\n        if (this._finished) {\n            return;\n        }\n        if (this._additiveTrack && this._additiveTrack._finished) {\n            this._additiveTrack = null;\n        }\n        var isAdditive = this._additiveTrack != null;\n        var valueKey = isAdditive ? 'additiveValue' : 'value';\n        var keyframes = this.keyframes;\n        var kfsNum = this.keyframes.length;\n        var propName = this.propName;\n        var arrDim = this.arrDim;\n        var isValueColor = this.isValueColor;\n        var frameIdx;\n        if (percent < 0) {\n            frameIdx = 0;\n        }\n        else if (percent < this._lastFramePercent) {\n            var start = Math.min(this._lastFrame + 1, kfsNum - 1);\n            for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n                if (keyframes[frameIdx].percent <= percent) {\n                    break;\n                }\n            }\n            frameIdx = Math.min(frameIdx, kfsNum - 2);\n        }\n        else {\n            for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\n                if (keyframes[frameIdx].percent > percent) {\n                    break;\n                }\n            }\n            frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\n        }\n        var nextFrame = keyframes[frameIdx + 1];\n        var frame = keyframes[frameIdx];\n        if (!(frame && nextFrame)) {\n            return;\n        }\n        this._lastFrame = frameIdx;\n        this._lastFramePercent = percent;\n        var range = (nextFrame.percent - frame.percent);\n        if (range === 0) {\n            return;\n        }\n        var w = (percent - frame.percent) / range;\n        var targetArr = isAdditive ? this._additiveValue\n            : (isValueColor ? tmpRgba : target[propName]);\n        if ((arrDim > 0 || isValueColor) && !targetArr) {\n            targetArr = this._additiveValue = [];\n        }\n        if (this.useSpline) {\n            var p1 = keyframes[frameIdx][valueKey];\n            var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\n            var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\n            var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\n            if (arrDim > 0) {\n                arrDim === 1\n                    ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w)\n                    : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n            }\n            else if (isValueColor) {\n                catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n                if (!isAdditive) {\n                    target[propName] = rgba2String(targetArr);\n                }\n            }\n            else {\n                var value = void 0;\n                if (!this.interpolable) {\n                    value = p2;\n                }\n                else {\n                    value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n                }\n                if (isAdditive) {\n                    this._additiveValue = value;\n                }\n                else {\n                    target[propName] = value;\n                }\n            }\n        }\n        else {\n            if (arrDim > 0) {\n                arrDim === 1\n                    ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w)\n                    : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n            }\n            else if (isValueColor) {\n                interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n                if (!isAdditive) {\n                    target[propName] = rgba2String(targetArr);\n                }\n            }\n            else {\n                var value = void 0;\n                if (!this.interpolable) {\n                    value = step(frame[valueKey], nextFrame[valueKey], w);\n                }\n                else {\n                    value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n                }\n                if (isAdditive) {\n                    this._additiveValue = value;\n                }\n                else {\n                    target[propName] = value;\n                }\n            }\n        }\n        if (isAdditive) {\n            this._addToTarget(target);\n        }\n    };\n    Track.prototype._addToTarget = function (target) {\n        var arrDim = this.arrDim;\n        var propName = this.propName;\n        var additiveValue = this._additiveValue;\n        if (arrDim === 0) {\n            if (this.isValueColor) {\n                color.parse(target[propName], tmpRgba);\n                add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n                target[propName] = rgba2String(tmpRgba);\n            }\n            else {\n                target[propName] = target[propName] + additiveValue;\n            }\n        }\n        else if (arrDim === 1) {\n            add1DArray(target[propName], target[propName], additiveValue, 1);\n        }\n        else if (arrDim === 2) {\n            add2DArray(target[propName], target[propName], additiveValue, 1);\n        }\n    };\n    return Track;\n}());\nvar Animator = (function () {\n    function Animator(target, loop, additiveTo) {\n        this._tracks = {};\n        this._trackKeys = [];\n        this._delay = 0;\n        this._maxTime = 0;\n        this._paused = false;\n        this._started = 0;\n        this._clip = null;\n        this._target = target;\n        this._loop = loop;\n        if (loop && additiveTo) {\n            logError('Can\\' use additive animation on looped animation.');\n            return;\n        }\n        this._additiveAnimators = additiveTo;\n    }\n    Animator.prototype.getTarget = function () {\n        return this._target;\n    };\n    Animator.prototype.changeTarget = function (target) {\n        this._target = target;\n    };\n    Animator.prototype.when = function (time, props) {\n        return this.whenWithKeys(time, props, keys(props));\n    };\n    Animator.prototype.whenWithKeys = function (time, props, propNames) {\n        var tracks = this._tracks;\n        for (var i = 0; i < propNames.length; i++) {\n            var propName = propNames[i];\n            var track = tracks[propName];\n            if (!track) {\n                track = tracks[propName] = new Track(propName);\n                var initialValue = void 0;\n                var additiveTrack = this._getAdditiveTrack(propName);\n                if (additiveTrack) {\n                    var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\n                    initialValue = lastFinalKf && lastFinalKf.value;\n                    if (additiveTrack.isValueColor && initialValue) {\n                        initialValue = rgba2String(initialValue);\n                    }\n                }\n                else {\n                    initialValue = this._target[propName];\n                }\n                if (initialValue == null) {\n                    continue;\n                }\n                if (time !== 0) {\n                    track.addKeyframe(0, cloneValue(initialValue));\n                }\n                this._trackKeys.push(propName);\n            }\n            track.addKeyframe(time, cloneValue(props[propName]));\n        }\n        this._maxTime = Math.max(this._maxTime, time);\n        return this;\n    };\n    Animator.prototype.pause = function () {\n        this._clip.pause();\n        this._paused = true;\n    };\n    Animator.prototype.resume = function () {\n        this._clip.resume();\n        this._paused = false;\n    };\n    Animator.prototype.isPaused = function () {\n        return !!this._paused;\n    };\n    Animator.prototype._doneCallback = function () {\n        this._setTracksFinished();\n        this._clip = null;\n        var doneList = this._doneList;\n        if (doneList) {\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._abortedCallback = function () {\n        this._setTracksFinished();\n        var animation = this.animation;\n        var abortedList = this._abortedList;\n        if (animation) {\n            animation.removeClip(this._clip);\n        }\n        this._clip = null;\n        if (abortedList) {\n            for (var i = 0; i < abortedList.length; i++) {\n                abortedList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._setTracksFinished = function () {\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            tracks[tracksKeys[i]].setFinished();\n        }\n    };\n    Animator.prototype._getAdditiveTrack = function (trackName) {\n        var additiveTrack;\n        var additiveAnimators = this._additiveAnimators;\n        if (additiveAnimators) {\n            for (var i = 0; i < additiveAnimators.length; i++) {\n                var track = additiveAnimators[i].getTrack(trackName);\n                if (track) {\n                    additiveTrack = track;\n                }\n            }\n        }\n        return additiveTrack;\n    };\n    Animator.prototype.start = function (easing, forceAnimate) {\n        if (this._started > 0) {\n            return;\n        }\n        this._started = 1;\n        var self = this;\n        var tracks = [];\n        for (var i = 0; i < this._trackKeys.length; i++) {\n            var propName = this._trackKeys[i];\n            var track = this._tracks[propName];\n            var additiveTrack = this._getAdditiveTrack(propName);\n            var kfs = track.keyframes;\n            track.prepare(additiveTrack);\n            if (track.needsAnimate()) {\n                tracks.push(track);\n            }\n            else if (!track.interpolable) {\n                var lastKf = kfs[kfs.length - 1];\n                if (lastKf) {\n                    self._target[track.propName] = lastKf.value;\n                }\n            }\n        }\n        if (tracks.length || forceAnimate) {\n            var clip = new Clip({\n                life: this._maxTime,\n                loop: this._loop,\n                delay: this._delay,\n                onframe: function (percent) {\n                    self._started = 2;\n                    var additiveAnimators = self._additiveAnimators;\n                    if (additiveAnimators) {\n                        var stillHasAdditiveAnimator = false;\n                        for (var i = 0; i < additiveAnimators.length; i++) {\n                            if (additiveAnimators[i]._clip) {\n                                stillHasAdditiveAnimator = true;\n                                break;\n                            }\n                        }\n                        if (!stillHasAdditiveAnimator) {\n                            self._additiveAnimators = null;\n                        }\n                    }\n                    for (var i = 0; i < tracks.length; i++) {\n                        tracks[i].step(self._target, percent);\n                    }\n                    var onframeList = self._onframeList;\n                    if (onframeList) {\n                        for (var i = 0; i < onframeList.length; i++) {\n                            onframeList[i](self._target, percent);\n                        }\n                    }\n                },\n                ondestroy: function () {\n                    self._doneCallback();\n                }\n            });\n            this._clip = clip;\n            if (this.animation) {\n                this.animation.addClip(clip);\n            }\n            if (easing && easing !== 'spline') {\n                clip.easing = easing;\n            }\n        }\n        else {\n            this._doneCallback();\n        }\n        return this;\n    };\n    Animator.prototype.stop = function (forwardToLast) {\n        if (!this._clip) {\n            return;\n        }\n        var clip = this._clip;\n        if (forwardToLast) {\n            clip.onframe(1);\n        }\n        this._abortedCallback();\n    };\n    Animator.prototype.delay = function (time) {\n        this._delay = time;\n        return this;\n    };\n    Animator.prototype.during = function (cb) {\n        if (cb) {\n            if (!this._onframeList) {\n                this._onframeList = [];\n            }\n            this._onframeList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.done = function (cb) {\n        if (cb) {\n            if (!this._doneList) {\n                this._doneList = [];\n            }\n            this._doneList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.aborted = function (cb) {\n        if (cb) {\n            if (!this._abortedList) {\n                this._abortedList = [];\n            }\n            this._abortedList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.getClip = function () {\n        return this._clip;\n    };\n    Animator.prototype.getTrack = function (propName) {\n        return this._tracks[propName];\n    };\n    Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n        if (!propNames.length || !this._clip) {\n            return true;\n        }\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < propNames.length; i++) {\n            var track = tracks[propNames[i]];\n            if (track) {\n                if (forwardToLast) {\n                    track.step(this._target, 1);\n                }\n                else if (this._started === 1) {\n                    track.step(this._target, 0);\n                }\n                track.setFinished();\n            }\n        }\n        var allAborted = true;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            if (!tracks[tracksKeys[i]].isFinished()) {\n                allAborted = false;\n                break;\n            }\n        }\n        if (allAborted) {\n            this._abortedCallback();\n        }\n        return allAborted;\n    };\n    Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\n        if (!target) {\n            return;\n        }\n        trackKeys = trackKeys || this._trackKeys;\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track || track.isFinished()) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            var lastKf = kfs[kfs.length - 1];\n            if (lastKf) {\n                var val = cloneValue(lastKf.value);\n                if (track.isValueColor) {\n                    val = rgba2String(val);\n                }\n                target[propName] = val;\n            }\n        }\n    };\n    Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n        trackKeys = trackKeys || keys(finalProps);\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            if (kfs.length > 1) {\n                var lastKf = kfs.pop();\n                track.addKeyframe(lastKf.time, finalProps[propName]);\n                track.prepare(track.getAdditiveTrack());\n            }\n        }\n    };\n    return Animator;\n}());\nexport default Animator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}