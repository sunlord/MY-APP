{"ast":null,"code":"import Mock from 'mockjs';\nexport default {\n  getMenu: config => {\n    const {\n      username,\n      password\n    } = JSON.parse(config.body);\n    // 先判断用户是否存在\n    // 判断账号和密码是否对应\n    if (username === 'admin' && password === 'admin') {\n      return {\n        code: 20000,\n        data: {\n          menu: [{\n            path: \"home\",\n            name: \"home\",\n            label: \"首页\",\n            icon: \"s-home\",\n            url: \"/home.vue\"\n          }, {\n            path: \"/mall\",\n            name: \"mall\",\n            label: \"商品管理\",\n            icon: \"video-play\",\n            url: \"mall.vue\"\n          }, {\n            path: \"/user\",\n            name: \"user\",\n            label: \"用户管理\",\n            icon: \"user\",\n            url: \"user.vue\"\n          }, {\n            label: \"其他\",\n            icon: \"location\",\n            children: [{\n              path: \"/page1\",\n              name: \"page1\",\n              label: \"页面1\",\n              icon: \"setting\",\n              url: \"PageOne.vue\"\n            }, {\n              path: \"/page2\",\n              name: \"page2\",\n              label: \"页面2\",\n              icon: \"setting\",\n              url: \"PageTwo.vue\"\n            }]\n          }],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      };\n    } else if (username === 'xiaoxiao' && password === 'xiaoxiao') {\n      return {\n        code: 20000,\n        data: {\n          menu: [{\n            path: \"/home\",\n            name: \"home\",\n            label: \"首页\",\n            icon: \"s-home\",\n            url: \"home.vue\"\n          }, {\n            path: \"/user\",\n            name: \"user\",\n            label: \"用户管理\",\n            icon: \"user\",\n            url: \"user.vue\"\n          }],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      };\n    } else {\n      return {\n        code: -999,\n        data: {\n          message: '用户名或密码错误'\n        }\n      };\n    }\n  }\n};","map":{"version":3,"names":["Mock","getMenu","config","username","password","JSON","parse","body","code","data","menu","path","name","label","icon","url","children","token","Random","guid","message"],"sources":["/Users/jiong/Downloads/my-app/src/api/mockServeData/permission.js"],"sourcesContent":["import Mock from 'mockjs'\n\nexport default {\n  getMenu: config => {\n    const { username, password } = JSON.parse(config.body)\n    // 先判断用户是否存在\n    // 判断账号和密码是否对应\n    if (username === 'admin' && password === 'admin') {\n      return {\n        code: 20000,\n        data: {\n          menu: [\n            {\n              path: \"home\",\n              name: \"home\",\n              label: \"首页\",\n              icon: \"s-home\",\n              url: \"/home.vue\",\n            },\n            {\n              path: \"/mall\",\n              name: \"mall\",\n              label: \"商品管理\",\n              icon: \"video-play\",\n              url: \"mall.vue\",\n            },\n            {\n              path: \"/user\",\n              name: \"user\",\n              label: \"用户管理\",\n              icon: \"user\",\n              url: \"user.vue\",\n            },\n            {\n              label: \"其他\",\n              icon: \"location\",\n              children: [\n                {\n                  path: \"/page1\",\n                  name: \"page1\",\n                  label: \"页面1\",\n                  icon: \"setting\",\n                  url: \"PageOne.vue\",\n                },\n                {\n                  path: \"/page2\",\n                  name: \"page2\",\n                  label: \"页面2\",\n                  icon: \"setting\",\n                  url: \"PageTwo.vue\",\n                },\n              ],\n            },\n          ],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      }\n    }else if (username === 'xiaoxiao' && password === 'xiaoxiao') {\n      return {\n        code: 20000,\n        data: {\n          menu: [\n            {\n              path: \"/home\",\n              name: \"home\",\n              label: \"首页\",\n              icon: \"s-home\",\n              url: \"home.vue\",\n            },\n            {\n              path: \"/user\",\n              name: \"user\",\n              label: \"用户管理\",\n              icon: \"user\",\n              url: \"user.vue\",\n            }\n          ],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      }\n    }else {\n      return {\n        code: -999,\n        data: {\n          message: '用户名或密码错误'\n        }\n      }\n    }\n  }\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,eAAe;EACbC,OAAO,EAAEC,MAAM,IAAI;IACjB,MAAM;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAACK,IAAI,CAAC;IACtD;IACA;IACA,IAAIJ,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,OAAO;QACLI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACJC,IAAI,EAAE,CACJ;YACEC,IAAI,EAAE,MAAM;YACZC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,QAAQ;YACdC,GAAG,EAAE;UACP,CAAC,EACD;YACEJ,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,YAAY;YAClBC,GAAG,EAAE;UACP,CAAC,EACD;YACEJ,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,MAAM;YACZC,GAAG,EAAE;UACP,CAAC,EACD;YACEF,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,UAAU;YAChBE,QAAQ,EAAE,CACR;cACEL,IAAI,EAAE,QAAQ;cACdC,IAAI,EAAE,OAAO;cACbC,KAAK,EAAE,KAAK;cACZC,IAAI,EAAE,SAAS;cACfC,GAAG,EAAE;YACP,CAAC,EACD;cACEJ,IAAI,EAAE,QAAQ;cACdC,IAAI,EAAE,OAAO;cACbC,KAAK,EAAE,KAAK;cACZC,IAAI,EAAE,SAAS;cACfC,GAAG,EAAE;YACP,CAAC;UAEL,CAAC,CACF;UACDE,KAAK,EAAEjB,IAAI,CAACkB,MAAM,CAACC,IAAI,EAAE;UACzBC,OAAO,EAAE;QACX;MACF,CAAC;IACH,CAAC,MAAK,IAAIjB,QAAQ,KAAK,UAAU,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC5D,OAAO;QACLI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACJC,IAAI,EAAE,CACJ;YACEC,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,QAAQ;YACdC,GAAG,EAAE;UACP,CAAC,EACD;YACEJ,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,MAAM;YACZC,GAAG,EAAE;UACP,CAAC,CACF;UACDE,KAAK,EAAEjB,IAAI,CAACkB,MAAM,CAACC,IAAI,EAAE;UACzBC,OAAO,EAAE;QACX;MACF,CAAC;IACH,CAAC,MAAK;MACJ,OAAO;QACLZ,IAAI,EAAE,CAAC,GAAG;QACVC,IAAI,EAAE;UACJW,OAAO,EAAE;QACX;MACF,CAAC;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}