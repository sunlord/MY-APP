{"ast":null,"code":"import axios from 'axios';\nconst http = axios.create({\n  // 通用请求的地址前缀\n  baseURL: '/api',\n  timeout: 10000 //超时事件\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n  // 2xx 范围内的状态码都会触发该函数。\n  // 对响应数据做点什么\n\n  return response;\n}, function (error) {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nexport default http;","map":{"version":3,"names":["axios","http","create","baseURL","timeout","interceptors","response","use","error","Promise","reject"],"sources":["/Users/jiong/Downloads/my-app/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\n\nconst http = axios.create({\n    // 通用请求的地址前缀\n    baseURL: '/api',\n    timeout: 10000, //超时事件\n})\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    // 2xx 范围内的状态码都会触发该函数。\n    // 对响应数据做点什么\n    \n    return response;\n  }, function (error) {\n    // 超出 2xx 范围的状态码都会触发该函数。\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  });\n\n  export default http"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACtB;EACAC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,KAAK,CAAE;AACpB,CAAC,CAAC;;AAEF;AACAJ,KAAK,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAUD,QAAQ,EAAE;EAChD;EACA;;EAEA,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUE,KAAK,EAAE;EAClB;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeP,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}