{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport SymbolClz from './Symbol';\nimport { isObject } from 'zrender/lib/core/util';\nimport { getLabelStatesModels } from '../../label/labelStyle';\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n  return opt || {};\n}\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  var emphasisModel = seriesModel.getModel('emphasis');\n  return {\n    emphasisItemStyle: emphasisModel.getModel('itemStyle').getItemStyle(),\n    blurItemStyle: seriesModel.getModel(['blur', 'itemStyle']).getItemStyle(),\n    selectItemStyle: seriesModel.getModel(['select', 'itemStyle']).getItemStyle(),\n    focus: emphasisModel.get('focus'),\n    blurScope: emphasisModel.get('blurScope'),\n    hoverScale: emphasisModel.get('scale'),\n    labelStatesModels: getLabelStatesModels(seriesModel),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\nvar SymbolDraw = /** @class */\nfunction () {\n  function SymbolDraw(SymbolCtor) {\n    this.group = new graphic.Group();\n    this._SymbolCtor = SymbolCtor || SymbolClz;\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n  SymbolDraw.prototype.updateData = function (data, opt) {\n    opt = normalizeUpdateOpt(opt);\n    var group = this.group;\n    var seriesModel = data.hostModel;\n    var oldData = this._data;\n    var SymbolCtor = this._SymbolCtor;\n    var disableAnimation = opt.disableAnimation;\n    var seriesScope = makeSeriesScope(data);\n    var symbolUpdateOpt = {\n      disableAnimation: disableAnimation\n    };\n    var getSymbolPoint = opt.getSymbolPoint || function (idx) {\n      return data.getItemLayout(idx);\n    }; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!oldData) {\n      group.removeAll();\n    }\n    data.diff(oldData).add(function (newIdx) {\n      var point = getSymbolPoint(newIdx);\n      if (symbolNeedsDraw(data, point, newIdx, opt)) {\n        var symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\n        symbolEl.setPosition(point);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      var point = getSymbolPoint(newIdx);\n      if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n        group.remove(symbolEl);\n        return;\n      }\n      if (!symbolEl) {\n        symbolEl = new SymbolCtor(data, newIdx);\n        symbolEl.setPosition(point);\n      } else {\n        symbolEl.updateData(data, newIdx, seriesScope, symbolUpdateOpt);\n        var target = {\n          x: point[0],\n          y: point[1]\n        };\n        disableAnimation ? symbolEl.attr(target) : graphic.updateProps(symbolEl, target, seriesModel);\n      } // Add back\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && el.fadeOut(function () {\n        group.remove(el);\n      });\n    }).execute();\n    this._getSymbolPoint = getSymbolPoint;\n    this._data = data;\n  };\n  ;\n  SymbolDraw.prototype.isPersistent = function () {\n    return true;\n  };\n  ;\n  SymbolDraw.prototype.updateLayout = function () {\n    var _this = this;\n    var data = this._data;\n    if (data) {\n      // Not use animation\n      data.eachItemGraphicEl(function (el, idx) {\n        var point = _this._getSymbolPoint(idx);\n        el.setPosition(point);\n        el.markRedraw();\n      });\n    }\n  };\n  ;\n  SymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._seriesScope = makeSeriesScope(data);\n    this._data = null;\n    this.group.removeAll();\n  };\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  SymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    opt = normalizeUpdateOpt(opt);\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var point = data.getItemLayout(idx);\n      if (symbolNeedsDraw(data, point, idx, opt)) {\n        var el = new this._SymbolCtor(data, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        el.setPosition(point);\n        this.group.add(el);\n        data.setItemGraphicEl(idx, el);\n      }\n    }\n  };\n  ;\n  SymbolDraw.prototype.remove = function (enableAnimation) {\n    var group = this.group;\n    var data = this._data; // Incremental model do not have this._data.\n\n    if (data && enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  };\n  ;\n  return SymbolDraw;\n}();\nexport default SymbolDraw;","map":{"version":3,"names":["graphic","SymbolClz","isObject","getLabelStatesModels","symbolNeedsDraw","data","point","idx","opt","isNaN","isIgnore","clipShape","contain","getItemVisual","normalizeUpdateOpt","makeSeriesScope","seriesModel","hostModel","emphasisModel","getModel","emphasisItemStyle","getItemStyle","blurItemStyle","selectItemStyle","focus","get","blurScope","hoverScale","labelStatesModels","cursorStyle","SymbolDraw","SymbolCtor","group","Group","_SymbolCtor","prototype","updateData","oldData","_data","disableAnimation","seriesScope","symbolUpdateOpt","getSymbolPoint","getItemLayout","removeAll","diff","add","newIdx","symbolEl","setPosition","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","target","x","y","attr","updateProps","el","fadeOut","execute","_getSymbolPoint","isPersistent","updateLayout","_this","eachItemGraphicEl","markRedraw","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","ensureState","hoverLayer","start","end","traverse","enableAnimation"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/helper/SymbolDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport SymbolClz from './Symbol';\nimport { isObject } from 'zrender/lib/core/util';\nimport { getLabelStatesModels } from '../../label/labelStyle';\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  var emphasisModel = seriesModel.getModel('emphasis');\n  return {\n    emphasisItemStyle: emphasisModel.getModel('itemStyle').getItemStyle(),\n    blurItemStyle: seriesModel.getModel(['blur', 'itemStyle']).getItemStyle(),\n    selectItemStyle: seriesModel.getModel(['select', 'itemStyle']).getItemStyle(),\n    focus: emphasisModel.get('focus'),\n    blurScope: emphasisModel.get('blurScope'),\n    hoverScale: emphasisModel.get('scale'),\n    labelStatesModels: getLabelStatesModels(seriesModel),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar SymbolDraw =\n/** @class */\nfunction () {\n  function SymbolDraw(SymbolCtor) {\n    this.group = new graphic.Group();\n    this._SymbolCtor = SymbolCtor || SymbolClz;\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  SymbolDraw.prototype.updateData = function (data, opt) {\n    opt = normalizeUpdateOpt(opt);\n    var group = this.group;\n    var seriesModel = data.hostModel;\n    var oldData = this._data;\n    var SymbolCtor = this._SymbolCtor;\n    var disableAnimation = opt.disableAnimation;\n    var seriesScope = makeSeriesScope(data);\n    var symbolUpdateOpt = {\n      disableAnimation: disableAnimation\n    };\n\n    var getSymbolPoint = opt.getSymbolPoint || function (idx) {\n      return data.getItemLayout(idx);\n    }; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n\n    if (!oldData) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      var point = getSymbolPoint(newIdx);\n\n      if (symbolNeedsDraw(data, point, newIdx, opt)) {\n        var symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\n        symbolEl.setPosition(point);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      var point = getSymbolPoint(newIdx);\n\n      if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      if (!symbolEl) {\n        symbolEl = new SymbolCtor(data, newIdx);\n        symbolEl.setPosition(point);\n      } else {\n        symbolEl.updateData(data, newIdx, seriesScope, symbolUpdateOpt);\n        var target = {\n          x: point[0],\n          y: point[1]\n        };\n        disableAnimation ? symbolEl.attr(target) : graphic.updateProps(symbolEl, target, seriesModel);\n      } // Add back\n\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && el.fadeOut(function () {\n        group.remove(el);\n      });\n    }).execute();\n    this._getSymbolPoint = getSymbolPoint;\n    this._data = data;\n  };\n\n  ;\n\n  SymbolDraw.prototype.isPersistent = function () {\n    return true;\n  };\n\n  ;\n\n  SymbolDraw.prototype.updateLayout = function () {\n    var _this = this;\n\n    var data = this._data;\n\n    if (data) {\n      // Not use animation\n      data.eachItemGraphicEl(function (el, idx) {\n        var point = _this._getSymbolPoint(idx);\n\n        el.setPosition(point);\n        el.markRedraw();\n      });\n    }\n  };\n\n  ;\n\n  SymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._seriesScope = makeSeriesScope(data);\n    this._data = null;\n    this.group.removeAll();\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  SymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    opt = normalizeUpdateOpt(opt);\n\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var point = data.getItemLayout(idx);\n\n      if (symbolNeedsDraw(data, point, idx, opt)) {\n        var el = new this._SymbolCtor(data, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        el.setPosition(point);\n        this.group.add(el);\n        data.setItemGraphicEl(idx, el);\n      }\n    }\n  };\n\n  ;\n\n  SymbolDraw.prototype.remove = function (enableAnimation) {\n    var group = this.group;\n    var data = this._data; // Incremental model do not have this._data.\n\n    if (data && enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  };\n\n  ;\n  return SymbolDraw;\n}();\n\nexport default SymbolDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}