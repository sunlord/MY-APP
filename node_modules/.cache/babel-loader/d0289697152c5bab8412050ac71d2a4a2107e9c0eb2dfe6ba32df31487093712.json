{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// These APIs are for more advanced usages\n// For example extend charts and components, creating graphic elements, formatting.\nimport ComponentModel from '../model/Component';\nimport ComponentView from '../view/Component';\nimport SeriesModel from '../model/Series';\nimport ChartView from '../view/Chart';\nimport * as zrender_1 from 'zrender/lib/zrender';\nexport { zrender_1 as zrender };\nimport * as matrix_1 from 'zrender/lib/core/matrix';\nexport { matrix_1 as matrix };\nimport * as vector_1 from 'zrender/lib/core/vector';\nexport { vector_1 as vector };\nimport * as zrUtil_1 from 'zrender/lib/core/util';\nexport { zrUtil_1 as zrUtil };\nimport * as color_1 from 'zrender/lib/tool/color';\nexport { color_1 as color };\nexport { throttle } from '../util/throttle';\nimport * as helper_1 from './api/helper';\nexport { helper_1 as helper };\nexport { use } from '../extension'; //////////////// Helper Methods /////////////////////\n\nexport { default as parseGeoJSON } from '../coord/geo/parseGeoJson';\nexport { default as parseGeoJson } from '../coord/geo/parseGeoJson';\nimport * as number_1 from './api/number';\nexport { number_1 as number };\nimport * as time_1 from './api/time';\nexport { time_1 as time };\nimport * as graphic_1 from './api/graphic';\nexport { graphic_1 as graphic };\nimport * as format_1 from './api/format';\nexport { format_1 as format };\nimport * as util_1 from './api/util';\nexport { util_1 as util };\nexport { default as env } from 'zrender/lib/core/env'; //////////////// Export for Exension Usage ////////////////\n\nexport { default as List } from '../data/List';\nexport { default as Model } from '../model/Model';\nexport { default as Axis } from '../coord/Axis';\nexport { ComponentModel, ComponentView, SeriesModel, ChartView }; // Only for GL\n\nexport { brushSingle as innerDrawElementOnCanvas } from 'zrender/lib/canvas/graphic'; //////////////// Deprecated Extension Methods ////////////////\n// Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\n// Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\n// class Bar3DModel extends ComponentModel {}\n// export function install(registers) { regsiters.registerComponentModel(Bar3DModel); }\n// echarts.use(install);\n\nexport function extendComponentModel(proto) {\n  var Model = ComponentModel.extend(proto);\n  ComponentModel.registerClass(Model);\n  return Model;\n}\nexport function extendComponentView(proto) {\n  var View = ComponentView.extend(proto);\n  ComponentView.registerClass(View);\n  return View;\n}\nexport function extendSeriesModel(proto) {\n  var Model = SeriesModel.extend(proto);\n  SeriesModel.registerClass(Model);\n  return Model;\n}\nexport function extendChartView(proto) {\n  var View = ChartView.extend(proto);\n  ChartView.registerClass(View);\n  return View;\n}","map":{"version":3,"names":["ComponentModel","ComponentView","SeriesModel","ChartView","zrender_1","zrender","matrix_1","matrix","vector_1","vector","zrUtil_1","zrUtil","color_1","color","throttle","helper_1","helper","use","default","parseGeoJSON","parseGeoJson","number_1","number","time_1","time","graphic_1","graphic","format_1","format","util_1","util","env","List","Model","Axis","brushSingle","innerDrawElementOnCanvas","extendComponentModel","proto","extend","registerClass","extendComponentView","View","extendSeriesModel","extendChartView"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/export/api.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// These APIs are for more advanced usages\n// For example extend charts and components, creating graphic elements, formatting.\nimport ComponentModel from '../model/Component';\nimport ComponentView from '../view/Component';\nimport SeriesModel from '../model/Series';\nimport ChartView from '../view/Chart';\nimport * as zrender_1 from 'zrender/lib/zrender';\nexport { zrender_1 as zrender };\nimport * as matrix_1 from 'zrender/lib/core/matrix';\nexport { matrix_1 as matrix };\nimport * as vector_1 from 'zrender/lib/core/vector';\nexport { vector_1 as vector };\nimport * as zrUtil_1 from 'zrender/lib/core/util';\nexport { zrUtil_1 as zrUtil };\nimport * as color_1 from 'zrender/lib/tool/color';\nexport { color_1 as color };\nexport { throttle } from '../util/throttle';\nimport * as helper_1 from './api/helper';\nexport { helper_1 as helper };\nexport { use } from '../extension'; //////////////// Helper Methods /////////////////////\n\nexport { default as parseGeoJSON } from '../coord/geo/parseGeoJson';\nexport { default as parseGeoJson } from '../coord/geo/parseGeoJson';\nimport * as number_1 from './api/number';\nexport { number_1 as number };\nimport * as time_1 from './api/time';\nexport { time_1 as time };\nimport * as graphic_1 from './api/graphic';\nexport { graphic_1 as graphic };\nimport * as format_1 from './api/format';\nexport { format_1 as format };\nimport * as util_1 from './api/util';\nexport { util_1 as util };\nexport { default as env } from 'zrender/lib/core/env'; //////////////// Export for Exension Usage ////////////////\n\nexport { default as List } from '../data/List';\nexport { default as Model } from '../model/Model';\nexport { default as Axis } from '../coord/Axis';\nexport { ComponentModel, ComponentView, SeriesModel, ChartView }; // Only for GL\n\nexport { brushSingle as innerDrawElementOnCanvas } from 'zrender/lib/canvas/graphic'; //////////////// Deprecated Extension Methods ////////////////\n// Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\n// Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\n// class Bar3DModel extends ComponentModel {}\n// export function install(registers) { regsiters.registerComponentModel(Bar3DModel); }\n// echarts.use(install);\n\nexport function extendComponentModel(proto) {\n  var Model = ComponentModel.extend(proto);\n  ComponentModel.registerClass(Model);\n  return Model;\n}\nexport function extendComponentView(proto) {\n  var View = ComponentView.extend(proto);\n  ComponentView.registerClass(View);\n  return View;\n}\nexport function extendSeriesModel(proto) {\n  var Model = SeriesModel.extend(proto);\n  SeriesModel.registerClass(Model);\n  return Model;\n}\nexport function extendChartView(proto) {\n  var View = ChartView.extend(proto);\n  ChartView.registerClass(View);\n  return View;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}