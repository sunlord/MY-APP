{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData } from '../api';\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      tableData: [{\n        name: 'oppo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'vivo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'apple',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'mi',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'huawei',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'sumsung',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'meizu',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }],\n      tableLabel: {\n        name: '课程',\n        todayBuy: '今日购买',\n        monthBuy: '本月购买',\n        totalBuy: '总购买'\n      },\n      countData: [{\n        name: \"今日支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }]\n    };\n  },\n  mounted() {\n    getData().then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        tableData\n      } = data.data;\n      console.log(data.data);\n      this.tableData = tableData;\n      // 基于准备好的dom,初始化echarts实例\n      // this.$refs.echarts1\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      // 指定图标的配置项和数据\n      var echarts1Option = {};\n      // 处理数据xAxis\n      const {\n        orderData\n      } = data.data;\n      const xAxis = Object.keys(orderData.data[0]);\n      const xAxisData = {\n        data: xAxis\n      };\n      echarts1Option.xAxis = xAxisData;\n      echarts1Option.yAxis = {};\n      echarts1Option.legend = xAxisData;\n      echarts1Option.series = [];\n      xAxis.forEach(key => {\n        echarts1Option.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: 'line'\n        });\n      });\n      console.log(echarts1Option);\n      // 使用刚指定的配置项和数据显示图表\n      echarts1.setOption(echarts1Option);\n\n      // 柱状图\n      const echarts2 = echarts.init(this.$refs.echarts2);\n      const echarts2Option = {\n        legends: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          data: [],\n          axisLine: {}\n        }\n      };\n    });\n  }\n};","map":{"version":3,"mappings":";AAwDA;AACA;AAEA;EACAA;IACA;MACAC,YACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,EACA;MACAC;QACAJ;QACAC;QACAC;QACAC;MACA;MACAE,YACA;QACAL;QACAM;QACAC;QACAC;MACA,GACA;QACAR;QACAM;QACAC;QACAC;MACA,GACA;QACAR;QACAM;QACAC;QACAC;MACA,GACA;QACAR;QACAM;QACAC;QACAC;MACA,GACA;QACAR;QACAM;QACAC;QACAC;MACA,GACA;QACAR;QACAM;QACAC;QACAC;MACA;IAGA;EACA;EACAC;IACAC;MAAA;QAAAZ;MAAA;MACA;QAAAC;MAAA;MACAY;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QAAAC;MAAA;MACA;MACA;QACAd;MACA;MACAe;MACAA;MACAA;MACAA;MACAC;QACAD;UACAb;UACAF;UACAiB;QACA;MACA;MACAJ;MACA;MACAK;;MAEA;MACA;MACA;QACAC;UACA;UACAC;YACAV;UACA;QACA;QACAW;UACAC;QACA;QACA;QACAC;UACAC;QACA;QACAR;UACAC;UACAjB;UACAyB,WAEA;QACA;MACA;IACA;EACA;AACA","names":["data","tableData","name","todayBuy","monthBuy","totalBuy","tableLabel","countData","value","icon","color","mounted","getData","console","orderData","echarts1Option","xAxis","type","echarts1","legends","textStyle","grid","left","tooltip","trigger","axisLine"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\n    <el-row>\n        <el-col :span=\"8\" style=\"padding-right: 10px\">\n            <el-card class=\"box-card\">\n                <div class=\"user\">\n                    <img src=\"../assets/images/user.png\" alt=\"\">\n                    <div class=\"userinfo\">\n                        <p class=\"name\">Admin</p>\n                        <p class=\"access\">超级管理员</p>\n                    </div>\n                </div>\n                <div class=\"login-info\">\n                    <p>上次登录时间: <span>2021-7-19</span></p>\n                    <p>上次登陆地点: <span>武汉</span></p>\n                </div>\n            </el-card>\n            <el-card style=\"margin-top: 20px; height: 460px\">\n                <el-table :data=\"tableData\" style=\"width: 100%\">\n                    <!-- <el-table-column prop=\"name\" label=\"课程\">\n                    </el-table-column>\n                    <el-table-column prop=\"todayBuy\" label=\"今日购买\">\n                    </el-table-column>\n                    <el-table-column prop=\"monthBuy\" label=\"本月购买\">\n                    </el-table-column>\n                    <el-table-column prop=\"totalBuy\" label=\"总购买\">\n                    </el-table-column> -->\n                    <el-table-column v-for=\"(val, key) in tableLabel\" :prop=\"key\" :key=\"key\" :label=\"val\"></el-table-column>\n                </el-table>\n            </el-card>\n            <div class=\"grid-content bg-purple\"></div>\n        </el-col>\n        <el-col :span=\"16\" style=\"padding-left: 10px\">\n            <div class=\"num\">\n                <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{ display: 'flex', padding: 0}\">\n                    <i class=\"icon\" :class=\"`el-icon-${item.icon}`\" :style=\"{ background: item.color}\"></i>\n                    <div class=\"detail\">\n                        <p class=\"price\">¥{{ item.value }}</p>\n                        <p class=\"desc\">{{ item.name }}</p>\n                    </div>\n                </el-card>\n            </div>\n            <el-card style=\"height: 280px\">\n                <!-- 折线图 -->\n                <div ref=\"echarts1\" style=\"height: 280px\"></div>\n            </el-card>\n            <div class=\"graph\">\n                <el-card style=\"height: 260px\">\n                    <div ref=\"echarts2\" style=\"height: 260px\"></div>\n                </el-card>\n                <el-card style=\"height: 260px\"></el-card>\n            </div>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\nimport { getData } from '../api'\nimport * as echarts from 'echarts'\n\nexport default {\n    data() {\n        return {\n            tableData: [\n                {\n                    name: 'oppo',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                },\n                {\n                    name: 'vivo',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                },\n                {\n                    name: 'apple',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                },\n                {\n                    name: 'mi',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                },\n                {\n                    name: 'huawei',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                },\n                {\n                    name: 'sumsung',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                },\n                {\n                    name: 'meizu',\n                    todayBuy: 100,\n                    monthBuy: 300,\n                    totalBuy: 800\n                }\n            ],\n            tableLabel: {\n                name: '课程',\n                todayBuy: '今日购买',\n                monthBuy: '本月购买',\n                totalBuy: '总购买'\n            },\n            countData: [\n                {\n                    name: \"今日支付订单\",\n                    value: 1234,\n                    icon: \"success\",\n                    color: \"#2ec7c9\"\n                },\n                {\n                    name: \"今日收藏订单\",\n                    value: 210,\n                    icon: \"star-on\",\n                    color: \"#ffb980\"\n                },\n                {\n                    name: \"今日未支付订单\",\n                    value: 1234,\n                    icon: \"s-goods\",\n                    color: \"#5ab1ef\"\n                },\n                {\n                    name: \"本月支付订单\",\n                    value: 1234,\n                    icon: \"success\",\n                    color: \"#2ec7c9\"\n                },\n                {\n                    name: \"本月收藏订单\",\n                    value: 210,\n                    icon: \"star-on\",\n                    color: \"#ffb980\"\n                },\n                {\n                    name: \"本月未支付订单\",\n                    value: 1234,\n                    icon: \"s-goods\",\n                    color: \"#5ab1ef\"\n                }\n\n            ]\n        };\n    },\n    mounted() {\n        getData().then(({ data }) => {\n            const { tableData } = data.data;\n            console.log(data.data);\n            this.tableData = tableData;\n        // 基于准备好的dom,初始化echarts实例\n        // this.$refs.echarts1\n        const echarts1 = echarts.init(this.$refs.echarts1);\n        // 指定图标的配置项和数据\n        var echarts1Option = {};\n        // 处理数据xAxis\n        const { orderData } = data.data;\n        const xAxis = Object.keys(orderData.data[0]);\n        const xAxisData = {\n            data:xAxis\n        };\n        echarts1Option.xAxis = xAxisData;\n        echarts1Option.yAxis = {};\n        echarts1Option.legend = xAxisData;\n        echarts1Option.series = [];\n        xAxis.forEach(key => {\n            echarts1Option.series.push ({\n                name: key,\n                data: orderData.data.map(item => item[key]),\n                type: 'line'\n            })\n        })\n        console.log(echarts1Option);\n        // 使用刚指定的配置项和数据显示图表\n        echarts1.setOption(echarts1Option);\n\n        // 柱状图\n        const echarts2 = echarts.init(this.$refs.echarts2)\n        const echarts2Option = {\n            legends: {\n                // 图例文字颜色\n                textStyle: {\n                    color: \"#333\"\n                }\n            },\n            grid: {\n                left: \"20%\"\n            },\n            // 提示框\n            tooltip: {\n                trigger: \"axis\"\n            },\n            xAxis: {\n                type: \"category\",\n                data: [],\n                axisLine: {\n                    \n                }\n            }\n        }\n        });\n    }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.user {\n    padding-bottom: 20px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #ccc;\n    display: flex;\n    align-items: center;\n    img {\n        margin-right: 40px;\n        width: 150px;\n        height: 150px;\n        border-radius: 50%;\n    }\n}\n.userinfo {\n    .name {\n        font-size: 32px;\n        margin-bottom: 10px;\n    }\n    .access {\n        color: #999999;\n    }\n}\n.login-info {\n    p {\n        line-height: 28px;\n        font-size: 14px;\n        color: #999999;\n        span {\n            color: #666666;\n            margin-left: 60px;\n        }\n    }\n}\n\n.num {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    .icon {\n        width: 80px;\n        height: 80px;\n        font-size: 30px;\n        text-align: center;\n        line-height: 80px;\n        color: #fff;\n    }\n    .detail {\n        margin-left: 15px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        .price {\n            font-size: 30px;\n            margin-bottom: 10px;    \n            line-height: 30px;\n            height: 30px;\n        }\n        .desc {\n            font-size: 14px;\n            color: #999;\n            text-align: center;\n        }\n    }\n    .el-card {\n        width: 32%;\n        margin-bottom: 20px;\n    }\n}\n\n.graph {\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-between;\n    .el-card {\n        width: 48%;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}