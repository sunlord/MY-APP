{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\nimport { getECData } from '../../util/innerStore';\nvar LargeLinesPathShape = /** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n  return LargeLinesPathShape;\n}();\nvar LargeLinesPath = /** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n  function LargeLinesPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n  };\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n    if (shape.polyline) {\n      var dataIndex = 0;\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n        dataIndex++;\n      }\n    }\n    return -1;\n  };\n  return LargeLinesPath;\n}(graphic.Path);\nvar LargeLineDraw = /** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n  LargeLineDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this.group.removeAll();\n    var lineEl = new LargeLinesPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n    this._setCommon(lineEl, data); // Add back\n\n    this.group.add(lineEl);\n    this._incremental = null;\n  };\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n    this._clearIncremental();\n    if (data.count() > 5e5) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lineEl = new LargeLinesPath();\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n    this._setCommon(lineEl, data, !!this._incremental);\n    if (!this._incremental) {\n      lineEl.rectHover = true;\n      lineEl.cursor = 'default';\n      lineEl.__startIndex = taskParams.start;\n      this.group.add(lineEl);\n    } else {\n      this._incremental.addDisplayable(lineEl, true);\n    }\n  };\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clearIncremental();\n    this._incremental = null;\n    this.group.removeAll();\n  };\n  ;\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n    lineEl.setStyle('fill', null);\n    if (!isIncremental) {\n      var ecData_1 = getECData(lineEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      lineEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n        if (dataIndex > 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\n        }\n      });\n    }\n  };\n  ;\n  LargeLineDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n  ;\n  return LargeLineDraw;\n}();\nexport default LargeLineDraw;","map":{"version":3,"names":["__extends","graphic","IncrementalDisplayable","lineContain","quadraticContain","getECData","LargeLinesPathShape","polyline","curveness","segs","LargeLinesPath","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","i","length","count","moveTo","k","lineTo","x0","y0","x1","y1","x2","y2","quadraticCurveTo","findDataIndex","x","y","lineWidth","style","dataIndex","containStroke","Path","LargeLineDraw","group","Group","isPersistent","_incremental","updateData","data","removeAll","lineEl","rectHover","cursor","setShape","getLayout","_setCommon","add","incrementalPrepareUpdate","_clearIncremental","silent","incrementalUpdate","taskParams","__startIndex","start","addDisplayable","remove","isIncremental","hostModel","get","useStyle","getModel","getLineStyle","strokeNoScale","getVisual","setStyle","ecData_1","seriesIndex","on","e","offsetX","offsetY","incremental","clearDisplaybles"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/helper/LargeLineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\nimport { getECData } from '../../util/innerStore';\n\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeLineDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this.group.removeAll();\n    var lineEl = new LargeLinesPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data); // Add back\n\n\n    this.group.add(lineEl);\n    this._incremental = null;\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental();\n\n    if (data.count() > 5e5) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lineEl = new LargeLinesPath();\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data, !!this._incremental);\n\n    if (!this._incremental) {\n      lineEl.rectHover = true;\n      lineEl.cursor = 'default';\n      lineEl.__startIndex = taskParams.start;\n      this.group.add(lineEl);\n    } else {\n      this._incremental.addDisplayable(lineEl, true);\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(lineEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      lineEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex > 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\n        }\n      });\n    }\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nexport default LargeLineDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}