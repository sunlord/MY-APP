{"ast":null,"code":"import { getUser, addUser, editUser, delUser } from \"../api\";\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      form: {\n        name: \"\",\n        age: \"\",\n        sex: \"\",\n        birth: \"\",\n        addr: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入姓名\"\n        }],\n        age: [{\n          required: true,\n          message: \"请输入年龄\"\n        }],\n        sex: [{\n          required: true,\n          message: \"请选择性别\"\n        }],\n        birth: [{\n          required: true,\n          message: \"请选择出生日期\"\n        }],\n        addr: [{\n          required: true,\n          message: \"请输入地址\"\n        }]\n      },\n      tableData: [],\n      modelType: 0 // 0 表示新增的弹窗, 1 表示编辑\n    };\n  },\n\n  methods: {\n    // 提交的时候\n    submit() {\n      this.$refs.form.validate(valid => {\n        // console.log(valid,'valid');\n        if (valid) {\n          // 后续对表单数据的处理\n          if (this.modelType === 0) {\n            addUser(this.form).then(() => {\n              // 重新获取列表的接口\n              this.getList();\n            });\n          } else {\n            editUser(this.form).then(() => {\n              // 重新获取列表的接口\n              this.getList();\n            });\n          }\n\n          // console.log(this.form, \"form\");\n\n          // 清空表单的数据\n          this.$refs.form.resetFields();\n\n          // 关闭弹窗\n          this.dialogVisible = false;\n        }\n      });\n    },\n    // 弹窗关闭的时候\n    handleClose() {\n      // console.log(this.$refs.form);\n\n      // 清空表单的数据\n      this.$refs.form.resetFields();\n\n      // 关闭弹窗\n      this.dialogVisible = false;\n    },\n    // 取消按钮的时候\n    cancel() {\n      this.handleClose();\n    },\n    // 编辑\n    handleEdit(row) {\n      this.modelType = 1;\n      this.dialogVisible = true;\n      // 注意需要对当前行数据进行深拷贝,否则会出错\n      this.form = JSON.parse(JSON.stringify(row));\n    },\n    handleDelete(row) {\n      this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        delUser;\n        this.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleAdd() {\n      this.modelType = 0;\n      this.dialogVisible = true;\n    },\n    getList() {\n      // 获取的列表数据\n      getUser().then(_ref => {\n        let {\n          data\n        } = _ref;\n        // console.log(data);\n        this.tableData = data.list;\n      });\n    }\n  },\n  mounted() {\n    this.getList();\n  }\n};","map":{"version":3,"mappings":"AA+DA;AAEA;EACAA;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAL;UAAAM;UAAAC;QAAA;QACAN;UAAAK;UAAAC;QAAA;QACAL;UAAAI;UAAAC;QAAA;QACAJ;UAAAG;UAAAC;QAAA;QACAH;UAAAE;UAAAC;QAAA;MACA;MACAC;MACAC;IACA;EACA;;EACAC;IACA;IACAC;MACA;QACA;QACA;UACA;UACA;YACAC;cACA;cACA;YACA;UACA;YACAC;cACA;cACA;YACA;UACA;;UAEA;;UAEA;UACA;;UAEA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;;MAEA;MACA;;MAEA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;MACA,GACAC;QACAC;QACA;UACAF;UACAb;QACA;MACA,GACAgB;QACA;UACAH;UACAb;QACA;MACA;IACA;IACAiB;MACA;MACA;IACA;IACAC;MACA;MACAC;QAAA;UAAA7B;QAAA;QACA;QACA;MACA;IACA;EACA;EACA8B;IACA;EACA;AACA","names":["data","dialogVisible","form","name","age","sex","birth","addr","rules","required","message","tableData","modelType","methods","submit","addUser","editUser","handleClose","cancel","handleEdit","handleDelete","confirmButtonText","cancelButtonText","type","then","delUser","catch","handleAdd","getList","getUser","mounted"],"sourceRoot":"src/views","sources":["User.vue"],"sourcesContent":["<template>\n    <div class=\"manage\">\n        <el-dialog title=\"新增用户\" :visible.sync=\"dialogVisible\" width=\"50%\" :before-close=\"handleClose\">\n            <!-- 用户的表单信息 -->\n            <el-form ref=\"form\" :rules=\"rules\" :inline=\"true\" :model=\"form\" label-width=\"150px\">\n                <el-form-item label=\"姓名\" prop=\"name\">\n                    <el-input v-model=\"form.name\" placeholder=\"请输入姓名\">\n                    </el-input>\n                </el-form-item>\n                <el-form-item label=\"年龄\" prop=\"age\">\n                    <el-input v-model=\"form.age\" placeholder=\"请输入年龄\">\n                    </el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" prop=\"sex\">\n                    <el-select v-model=\"form.sex\" placeholder=\"请选择\">\n                        <el-option label=\"男\" :value=\"1\"></el-option>\n                        <el-option label=\"女\" :value=\"0\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"出生日期\" prop=\"birth\">\n                    <el-date-picker v-model=\"form.birth\" type=\"date\" placeholder=\"选择日期\" value-format=\"yyyy-MM-dd\">\n                    </el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"地址\" prop=\"addr\">\n                    <el-input placeholder=\"请输入地址\" v-model=\"form.addr\">\n                    </el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancel\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\n            </span>\n        </el-dialog>\n        <div class=\"manage-header\">\n            <el-button @click=\"handleAdd\" type=\"primary\">\n                + 新增\n            </el-button>\n            <el-table :data=\"tableData\" style=\"width: 100%\">\n                <el-table-column prop=\"name\" label=\"姓名\">\n                </el-table-column>\n                <el-table-column prop=\"sexLabel\" label=\"性别\">\n                    <template slot-scope=\"scope\">\n                        <span style=\"margin-left: 10px\">{{ scope.row.sex == 1 ? '男' : '女' }}</span>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"age\" label=\"年龄\">\n                </el-table-column>\n                <el-table-column prop=\"birth\" label=\"出生日期\">\n                </el-table-column>\n                <el-table-column prop=\"addr\" label=\"地址\">\n                </el-table-column>\n                <el-table-column label=\"操作\">\n                    <template slot-scope=\"scope\">\n                        <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n                        <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { getUser, addUser, editUser,delUser } from \"../api\";\n\nexport default {\n    data() {\n        return {\n            dialogVisible: false,\n            form: {\n                name: \"\",\n                age: \"\",\n                sex: \"\",\n                birth: \"\",\n                addr: \"\",\n            },\n            rules: {\n                name: [{ required: true, message: \"请输入姓名\" }],\n                age: [{ required: true, message: \"请输入年龄\" }],\n                sex: [{ required: true, message: \"请选择性别\" }],\n                birth: [{ required: true, message: \"请选择出生日期\" }],\n                addr: [{ required: true, message: \"请输入地址\" }],\n            },\n            tableData: [],\n            modelType: 0, // 0 表示新增的弹窗, 1 表示编辑\n        };\n    },\n    methods: {\n        // 提交的时候\n        submit() {\n            this.$refs.form.validate((valid) => {\n                // console.log(valid,'valid');\n                if (valid) {\n                    // 后续对表单数据的处理\n                    if (this.modelType === 0) {\n                        addUser(this.form).then(() => {\n                            // 重新获取列表的接口\n                            this.getList();\n                        });\n                    } else {\n                        editUser(this.form).then(() => {\n                            // 重新获取列表的接口\n                            this.getList();\n                        });\n                    }\n\n                    // console.log(this.form, \"form\");\n\n                    // 清空表单的数据\n                    this.$refs.form.resetFields();\n\n                    // 关闭弹窗\n                    this.dialogVisible = false;\n                }\n            });\n        },\n        // 弹窗关闭的时候\n        handleClose() {\n            // console.log(this.$refs.form);\n\n            // 清空表单的数据\n            this.$refs.form.resetFields();\n\n            // 关闭弹窗\n            this.dialogVisible = false;\n        },\n        // 取消按钮的时候\n        cancel() {\n            this.handleClose();\n        },\n        // 编辑\n        handleEdit(row) {\n            this.modelType = 1;\n            this.dialogVisible = true;\n            // 注意需要对当前行数据进行深拷贝,否则会出错\n            this.form = JSON.parse(JSON.stringify(row));\n        },\n        handleDelete(row) {\n            this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            })\n                .then(() => {\n                    delUser\n                    this.$message({\n                        type: \"success\",\n                        message: \"删除成功!\",\n                    });\n                })\n                .catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\",\n                    });\n                });\n        },\n        handleAdd() {\n            this.modelType = 0;\n            this.dialogVisible = true;\n        },\n        getList() {\n            // 获取的列表数据\n            getUser().then(({ data }) => {\n                // console.log(data);\n                this.tableData = data.list;\n            });\n        },\n    },\n    mounted() {\n        this.getList();\n    },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}