{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport WeakMap from 'zrender/lib/core/WeakMap';\nimport LRU from 'zrender/lib/core/LRU';\nimport { defaults, createCanvas, map, isArray } from 'zrender/lib/core/util';\nimport { getLeastCommonMultiple } from './number';\nimport { createSymbol } from './symbol';\nimport { brushSingle } from 'zrender/lib/canvas/graphic';\nvar decalMap = new WeakMap();\nvar decalCache = new LRU(100);\nvar decalKeys = ['symbol', 'symbolSize', 'symbolKeepAspect', 'color', 'backgroundColor', 'dashArrayX', 'dashArrayY', 'maxTileWidth', 'maxTileHeight'];\n/**\n * Create or update pattern image from decal options\n *\n * @param {InnerDecalObject | 'none'} decalObject decal options, 'none' if no decal\n * @return {Pattern} pattern with generated image, null if no decal\n */\n\nexport function createOrUpdatePatternFromDecal(decalObject, api) {\n  if (decalObject === 'none') {\n    return null;\n  }\n  var dpr = api.getDevicePixelRatio();\n  var zr = api.getZr();\n  var isSVG = zr.painter.type === 'svg';\n  if (decalObject.dirty) {\n    decalMap[\"delete\"](decalObject);\n  }\n  var oldPattern = decalMap.get(decalObject);\n  if (oldPattern) {\n    return oldPattern;\n  }\n  var decalOpt = defaults(decalObject, {\n    symbol: 'rect',\n    symbolSize: 1,\n    symbolKeepAspect: true,\n    color: 'rgba(0, 0, 0, 0.2)',\n    backgroundColor: null,\n    dashArrayX: 5,\n    dashArrayY: 5,\n    rotation: 0,\n    maxTileWidth: 512,\n    maxTileHeight: 512\n  });\n  if (decalOpt.backgroundColor === 'none') {\n    decalOpt.backgroundColor = null;\n  }\n  var pattern = {\n    repeat: 'repeat'\n  };\n  setPatternnSource(pattern);\n  pattern.rotation = decalOpt.rotation;\n  pattern.scaleX = pattern.scaleY = isSVG ? 1 : 1 / dpr;\n  decalMap.set(decalObject, pattern);\n  decalObject.dirty = false;\n  return pattern;\n  function setPatternnSource(pattern) {\n    var keys = [dpr];\n    var isValidKey = true;\n    for (var i = 0; i < decalKeys.length; ++i) {\n      var value = decalOpt[decalKeys[i]];\n      var valueType = typeof value;\n      if (value != null && !isArray(value) && valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') {\n        isValidKey = false;\n        break;\n      }\n      keys.push(value);\n    }\n    var cacheKey;\n    if (isValidKey) {\n      cacheKey = keys.join(',') + (isSVG ? '-svg' : '');\n      var cache = decalCache.get(cacheKey);\n      if (cache) {\n        isSVG ? pattern.svgElement = cache : pattern.image = cache;\n      }\n    }\n    var dashArrayX = normalizeDashArrayX(decalOpt.dashArrayX);\n    var dashArrayY = normalizeDashArrayY(decalOpt.dashArrayY);\n    var symbolArray = normalizeSymbolArray(decalOpt.symbol);\n    var lineBlockLengthsX = getLineBlockLengthX(dashArrayX);\n    var lineBlockLengthY = getLineBlockLengthY(dashArrayY);\n    var canvas = !isSVG && createCanvas();\n    var svgRoot = isSVG && zr.painter.createSVGElement('g');\n    var pSize = getPatternSize();\n    var ctx;\n    if (canvas) {\n      canvas.width = pSize.width * dpr;\n      canvas.height = pSize.height * dpr;\n      ctx = canvas.getContext('2d');\n    }\n    brushDecal();\n    if (isValidKey) {\n      decalCache.put(cacheKey, canvas || svgRoot);\n    }\n    pattern.image = canvas;\n    pattern.svgElement = svgRoot;\n    pattern.svgWidth = pSize.width;\n    pattern.svgHeight = pSize.height;\n    /**\n     * Get minumum length that can make a repeatable pattern.\n     *\n     * @return {Object} pattern width and height\n     */\n\n    function getPatternSize() {\n      /**\n       * For example, if dash is [[3, 2], [2, 1]] for X, it looks like\n       * |---  ---  ---  ---  --- ...\n       * |-- -- -- -- -- -- -- -- ...\n       * |---  ---  ---  ---  --- ...\n       * |-- -- -- -- -- -- -- -- ...\n       * So the minumum length of X is 15,\n       * which is the least common multiple of `3 + 2` and `2 + 1`\n       * |---  ---  ---  |---  --- ...\n       * |-- -- -- -- -- |-- -- -- ...\n       */\n      var width = 1;\n      for (var i = 0, xlen = lineBlockLengthsX.length; i < xlen; ++i) {\n        width = getLeastCommonMultiple(width, lineBlockLengthsX[i]);\n      }\n      var symbolRepeats = 1;\n      for (var i = 0, xlen = symbolArray.length; i < xlen; ++i) {\n        symbolRepeats = getLeastCommonMultiple(symbolRepeats, symbolArray[i].length);\n      }\n      width *= symbolRepeats;\n      var height = lineBlockLengthY * lineBlockLengthsX.length * symbolArray.length;\n      if (process.env.NODE_ENV !== 'production') {\n        var warn = function (attrName) {\n          /* eslint-disable-next-line */\n          console.warn(\"Calculated decal size is greater than \" + attrName + \" due to decal option settings so \" + attrName + \" is used for the decal size. Please consider changing the decal option to make a smaller decal or set \" + attrName + \" to be larger to avoid incontinuity.\");\n        };\n        if (width > decalOpt.maxTileWidth) {\n          warn('maxTileWidth');\n        }\n        if (height > decalOpt.maxTileHeight) {\n          warn('maxTileHeight');\n        }\n      }\n      return {\n        width: Math.max(1, Math.min(width, decalOpt.maxTileWidth)),\n        height: Math.max(1, Math.min(height, decalOpt.maxTileHeight))\n      };\n    }\n    function brushDecal() {\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        if (decalOpt.backgroundColor) {\n          ctx.fillStyle = decalOpt.backgroundColor;\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n        }\n      }\n      var ySum = 0;\n      for (var i = 0; i < dashArrayY.length; ++i) {\n        ySum += dashArrayY[i];\n      }\n      if (ySum <= 0) {\n        // dashArrayY is 0, draw nothing\n        return;\n      }\n      var y = -lineBlockLengthY;\n      var yId = 0;\n      var yIdTotal = 0;\n      var xId0 = 0;\n      while (y < pSize.height) {\n        if (yId % 2 === 0) {\n          var symbolYId = yIdTotal / 2 % symbolArray.length;\n          var x = 0;\n          var xId1 = 0;\n          var xId1Total = 0;\n          while (x < pSize.width * 2) {\n            var xSum = 0;\n            for (var i = 0; i < dashArrayX[xId0].length; ++i) {\n              xSum += dashArrayX[xId0][i];\n            }\n            if (xSum <= 0) {\n              // Skip empty line\n              break;\n            } // E.g., [15, 5, 20, 5] draws only for 15 and 20\n\n            if (xId1 % 2 === 0) {\n              var size = (1 - decalOpt.symbolSize) * 0.5;\n              var left = x + dashArrayX[xId0][xId1] * size;\n              var top_1 = y + dashArrayY[yId] * size;\n              var width = dashArrayX[xId0][xId1] * decalOpt.symbolSize;\n              var height = dashArrayY[yId] * decalOpt.symbolSize;\n              var symbolXId = xId1Total / 2 % symbolArray[symbolYId].length;\n              brushSymbol(left, top_1, width, height, symbolArray[symbolYId][symbolXId]);\n            }\n            x += dashArrayX[xId0][xId1];\n            ++xId1Total;\n            ++xId1;\n            if (xId1 === dashArrayX[xId0].length) {\n              xId1 = 0;\n            }\n          }\n          ++xId0;\n          if (xId0 === dashArrayX.length) {\n            xId0 = 0;\n          }\n        }\n        y += dashArrayY[yId];\n        ++yIdTotal;\n        ++yId;\n        if (yId === dashArrayY.length) {\n          yId = 0;\n        }\n      }\n      function brushSymbol(x, y, width, height, symbolType) {\n        var scale = isSVG ? 1 : dpr;\n        var symbol = createSymbol(symbolType, x * scale, y * scale, width * scale, height * scale, decalOpt.color, decalOpt.symbolKeepAspect);\n        if (isSVG) {\n          svgRoot.appendChild(zr.painter.paintOne(symbol));\n        } else {\n          // Paint to canvas for all other renderers.\n          brushSingle(ctx, symbol);\n        }\n      }\n    }\n  }\n}\n/**\n * Convert symbol array into normalized array\n *\n * @param {string | (string | string[])[]} symbol symbol input\n * @return {string[][]} normolized symbol array\n */\n\nfunction normalizeSymbolArray(symbol) {\n  if (!symbol || symbol.length === 0) {\n    return [['rect']];\n  }\n  if (typeof symbol === 'string') {\n    return [[symbol]];\n  }\n  var isAllString = true;\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] !== 'string') {\n      isAllString = false;\n      break;\n    }\n  }\n  if (isAllString) {\n    return normalizeSymbolArray([symbol]);\n  }\n  var result = [];\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] === 'string') {\n      result.push([symbol[i]]);\n    } else {\n      result.push(symbol[i]);\n    }\n  }\n  return result;\n}\n/**\n * Convert dash input into dashArray\n *\n * @param {DecalDashArrayX} dash dash input\n * @return {number[][]} normolized dash array\n */\n\nfunction normalizeDashArrayX(dash) {\n  if (!dash || dash.length === 0) {\n    return [[0, 0]];\n  }\n  if (typeof dash === 'number') {\n    var dashValue = Math.ceil(dash);\n    return [[dashValue, dashValue]];\n  }\n  /**\n   * [20, 5] should be normalized into [[20, 5]],\n   * while [20, [5, 10]] should be normalized into [[20, 20], [5, 10]]\n   */\n\n  var isAllNumber = true;\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] !== 'number') {\n      isAllNumber = false;\n      break;\n    }\n  }\n  if (isAllNumber) {\n    return normalizeDashArrayX([dash]);\n  }\n  var result = [];\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] === 'number') {\n      var dashValue = Math.ceil(dash[i]);\n      result.push([dashValue, dashValue]);\n    } else {\n      var dashValue = map(dash[i], function (n) {\n        return Math.ceil(n);\n      });\n      if (dashValue.length % 2 === 1) {\n        // [4, 2, 1] means |----  -    -- |----  -    -- |\n        // so normalize it to be [4, 2, 1, 4, 2, 1]\n        result.push(dashValue.concat(dashValue));\n      } else {\n        result.push(dashValue);\n      }\n    }\n  }\n  return result;\n}\n/**\n * Convert dash input into dashArray\n *\n * @param {DecalDashArrayY} dash dash input\n * @return {number[]} normolized dash array\n */\n\nfunction normalizeDashArrayY(dash) {\n  if (!dash || typeof dash === 'object' && dash.length === 0) {\n    return [0, 0];\n  }\n  if (typeof dash === 'number') {\n    var dashValue_1 = Math.ceil(dash);\n    return [dashValue_1, dashValue_1];\n  }\n  var dashValue = map(dash, function (n) {\n    return Math.ceil(n);\n  });\n  return dash.length % 2 ? dashValue.concat(dashValue) : dashValue;\n}\n/**\n * Get block length of each line. A block is the length of dash line and space.\n * For example, a line with [4, 1] has a dash line of 4 and a space of 1 after\n * that, so the block length of this line is 5.\n *\n * @param {number[][]} dash dash arrary of X or Y\n * @return {number[]} block length of each line\n */\n\nfunction getLineBlockLengthX(dash) {\n  return map(dash, function (line) {\n    return getLineBlockLengthY(line);\n  });\n}\nfunction getLineBlockLengthY(dash) {\n  var blockLength = 0;\n  for (var i = 0; i < dash.length; ++i) {\n    blockLength += dash[i];\n  }\n  if (dash.length % 2 === 1) {\n    // [4, 2, 1] means |----  -    -- |----  -    -- |\n    // So total length is (4 + 2 + 1) * 2\n    return blockLength * 2;\n  }\n  return blockLength;\n}","map":{"version":3,"names":["WeakMap","LRU","defaults","createCanvas","map","isArray","getLeastCommonMultiple","createSymbol","brushSingle","decalMap","decalCache","decalKeys","createOrUpdatePatternFromDecal","decalObject","api","dpr","getDevicePixelRatio","zr","getZr","isSVG","painter","type","dirty","oldPattern","get","decalOpt","symbol","symbolSize","symbolKeepAspect","color","backgroundColor","dashArrayX","dashArrayY","rotation","maxTileWidth","maxTileHeight","pattern","repeat","setPatternnSource","scaleX","scaleY","set","keys","isValidKey","i","length","value","valueType","push","cacheKey","join","cache","svgElement","image","normalizeDashArrayX","normalizeDashArrayY","symbolArray","normalizeSymbolArray","lineBlockLengthsX","getLineBlockLengthX","lineBlockLengthY","getLineBlockLengthY","canvas","svgRoot","createSVGElement","pSize","getPatternSize","ctx","width","height","getContext","brushDecal","put","svgWidth","svgHeight","xlen","symbolRepeats","process","env","NODE_ENV","warn","attrName","console","Math","max","min","clearRect","fillStyle","fillRect","ySum","y","yId","yIdTotal","xId0","symbolYId","x","xId1","xId1Total","xSum","size","left","top_1","symbolXId","brushSymbol","symbolType","scale","appendChild","paintOne","isAllString","result","dash","dashValue","ceil","isAllNumber","n","concat","dashValue_1","line","blockLength"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/util/decal.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport WeakMap from 'zrender/lib/core/WeakMap';\nimport LRU from 'zrender/lib/core/LRU';\nimport { defaults, createCanvas, map, isArray } from 'zrender/lib/core/util';\nimport { getLeastCommonMultiple } from './number';\nimport { createSymbol } from './symbol';\nimport { brushSingle } from 'zrender/lib/canvas/graphic';\nvar decalMap = new WeakMap();\nvar decalCache = new LRU(100);\nvar decalKeys = ['symbol', 'symbolSize', 'symbolKeepAspect', 'color', 'backgroundColor', 'dashArrayX', 'dashArrayY', 'maxTileWidth', 'maxTileHeight'];\n/**\n * Create or update pattern image from decal options\n *\n * @param {InnerDecalObject | 'none'} decalObject decal options, 'none' if no decal\n * @return {Pattern} pattern with generated image, null if no decal\n */\n\nexport function createOrUpdatePatternFromDecal(decalObject, api) {\n  if (decalObject === 'none') {\n    return null;\n  }\n\n  var dpr = api.getDevicePixelRatio();\n  var zr = api.getZr();\n  var isSVG = zr.painter.type === 'svg';\n\n  if (decalObject.dirty) {\n    decalMap[\"delete\"](decalObject);\n  }\n\n  var oldPattern = decalMap.get(decalObject);\n\n  if (oldPattern) {\n    return oldPattern;\n  }\n\n  var decalOpt = defaults(decalObject, {\n    symbol: 'rect',\n    symbolSize: 1,\n    symbolKeepAspect: true,\n    color: 'rgba(0, 0, 0, 0.2)',\n    backgroundColor: null,\n    dashArrayX: 5,\n    dashArrayY: 5,\n    rotation: 0,\n    maxTileWidth: 512,\n    maxTileHeight: 512\n  });\n\n  if (decalOpt.backgroundColor === 'none') {\n    decalOpt.backgroundColor = null;\n  }\n\n  var pattern = {\n    repeat: 'repeat'\n  };\n  setPatternnSource(pattern);\n  pattern.rotation = decalOpt.rotation;\n  pattern.scaleX = pattern.scaleY = isSVG ? 1 : 1 / dpr;\n  decalMap.set(decalObject, pattern);\n  decalObject.dirty = false;\n  return pattern;\n\n  function setPatternnSource(pattern) {\n    var keys = [dpr];\n    var isValidKey = true;\n\n    for (var i = 0; i < decalKeys.length; ++i) {\n      var value = decalOpt[decalKeys[i]];\n      var valueType = typeof value;\n\n      if (value != null && !isArray(value) && valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') {\n        isValidKey = false;\n        break;\n      }\n\n      keys.push(value);\n    }\n\n    var cacheKey;\n\n    if (isValidKey) {\n      cacheKey = keys.join(',') + (isSVG ? '-svg' : '');\n      var cache = decalCache.get(cacheKey);\n\n      if (cache) {\n        isSVG ? pattern.svgElement = cache : pattern.image = cache;\n      }\n    }\n\n    var dashArrayX = normalizeDashArrayX(decalOpt.dashArrayX);\n    var dashArrayY = normalizeDashArrayY(decalOpt.dashArrayY);\n    var symbolArray = normalizeSymbolArray(decalOpt.symbol);\n    var lineBlockLengthsX = getLineBlockLengthX(dashArrayX);\n    var lineBlockLengthY = getLineBlockLengthY(dashArrayY);\n    var canvas = !isSVG && createCanvas();\n    var svgRoot = isSVG && zr.painter.createSVGElement('g');\n    var pSize = getPatternSize();\n    var ctx;\n\n    if (canvas) {\n      canvas.width = pSize.width * dpr;\n      canvas.height = pSize.height * dpr;\n      ctx = canvas.getContext('2d');\n    }\n\n    brushDecal();\n\n    if (isValidKey) {\n      decalCache.put(cacheKey, canvas || svgRoot);\n    }\n\n    pattern.image = canvas;\n    pattern.svgElement = svgRoot;\n    pattern.svgWidth = pSize.width;\n    pattern.svgHeight = pSize.height;\n    /**\n     * Get minumum length that can make a repeatable pattern.\n     *\n     * @return {Object} pattern width and height\n     */\n\n    function getPatternSize() {\n      /**\n       * For example, if dash is [[3, 2], [2, 1]] for X, it looks like\n       * |---  ---  ---  ---  --- ...\n       * |-- -- -- -- -- -- -- -- ...\n       * |---  ---  ---  ---  --- ...\n       * |-- -- -- -- -- -- -- -- ...\n       * So the minumum length of X is 15,\n       * which is the least common multiple of `3 + 2` and `2 + 1`\n       * |---  ---  ---  |---  --- ...\n       * |-- -- -- -- -- |-- -- -- ...\n       */\n      var width = 1;\n\n      for (var i = 0, xlen = lineBlockLengthsX.length; i < xlen; ++i) {\n        width = getLeastCommonMultiple(width, lineBlockLengthsX[i]);\n      }\n\n      var symbolRepeats = 1;\n\n      for (var i = 0, xlen = symbolArray.length; i < xlen; ++i) {\n        symbolRepeats = getLeastCommonMultiple(symbolRepeats, symbolArray[i].length);\n      }\n\n      width *= symbolRepeats;\n      var height = lineBlockLengthY * lineBlockLengthsX.length * symbolArray.length;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var warn = function (attrName) {\n          /* eslint-disable-next-line */\n          console.warn(\"Calculated decal size is greater than \" + attrName + \" due to decal option settings so \" + attrName + \" is used for the decal size. Please consider changing the decal option to make a smaller decal or set \" + attrName + \" to be larger to avoid incontinuity.\");\n        };\n\n        if (width > decalOpt.maxTileWidth) {\n          warn('maxTileWidth');\n        }\n\n        if (height > decalOpt.maxTileHeight) {\n          warn('maxTileHeight');\n        }\n      }\n\n      return {\n        width: Math.max(1, Math.min(width, decalOpt.maxTileWidth)),\n        height: Math.max(1, Math.min(height, decalOpt.maxTileHeight))\n      };\n    }\n\n    function brushDecal() {\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (decalOpt.backgroundColor) {\n          ctx.fillStyle = decalOpt.backgroundColor;\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n        }\n      }\n\n      var ySum = 0;\n\n      for (var i = 0; i < dashArrayY.length; ++i) {\n        ySum += dashArrayY[i];\n      }\n\n      if (ySum <= 0) {\n        // dashArrayY is 0, draw nothing\n        return;\n      }\n\n      var y = -lineBlockLengthY;\n      var yId = 0;\n      var yIdTotal = 0;\n      var xId0 = 0;\n\n      while (y < pSize.height) {\n        if (yId % 2 === 0) {\n          var symbolYId = yIdTotal / 2 % symbolArray.length;\n          var x = 0;\n          var xId1 = 0;\n          var xId1Total = 0;\n\n          while (x < pSize.width * 2) {\n            var xSum = 0;\n\n            for (var i = 0; i < dashArrayX[xId0].length; ++i) {\n              xSum += dashArrayX[xId0][i];\n            }\n\n            if (xSum <= 0) {\n              // Skip empty line\n              break;\n            } // E.g., [15, 5, 20, 5] draws only for 15 and 20\n\n\n            if (xId1 % 2 === 0) {\n              var size = (1 - decalOpt.symbolSize) * 0.5;\n              var left = x + dashArrayX[xId0][xId1] * size;\n              var top_1 = y + dashArrayY[yId] * size;\n              var width = dashArrayX[xId0][xId1] * decalOpt.symbolSize;\n              var height = dashArrayY[yId] * decalOpt.symbolSize;\n              var symbolXId = xId1Total / 2 % symbolArray[symbolYId].length;\n              brushSymbol(left, top_1, width, height, symbolArray[symbolYId][symbolXId]);\n            }\n\n            x += dashArrayX[xId0][xId1];\n            ++xId1Total;\n            ++xId1;\n\n            if (xId1 === dashArrayX[xId0].length) {\n              xId1 = 0;\n            }\n          }\n\n          ++xId0;\n\n          if (xId0 === dashArrayX.length) {\n            xId0 = 0;\n          }\n        }\n\n        y += dashArrayY[yId];\n        ++yIdTotal;\n        ++yId;\n\n        if (yId === dashArrayY.length) {\n          yId = 0;\n        }\n      }\n\n      function brushSymbol(x, y, width, height, symbolType) {\n        var scale = isSVG ? 1 : dpr;\n        var symbol = createSymbol(symbolType, x * scale, y * scale, width * scale, height * scale, decalOpt.color, decalOpt.symbolKeepAspect);\n\n        if (isSVG) {\n          svgRoot.appendChild(zr.painter.paintOne(symbol));\n        } else {\n          // Paint to canvas for all other renderers.\n          brushSingle(ctx, symbol);\n        }\n      }\n    }\n  }\n}\n/**\n * Convert symbol array into normalized array\n *\n * @param {string | (string | string[])[]} symbol symbol input\n * @return {string[][]} normolized symbol array\n */\n\nfunction normalizeSymbolArray(symbol) {\n  if (!symbol || symbol.length === 0) {\n    return [['rect']];\n  }\n\n  if (typeof symbol === 'string') {\n    return [[symbol]];\n  }\n\n  var isAllString = true;\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] !== 'string') {\n      isAllString = false;\n      break;\n    }\n  }\n\n  if (isAllString) {\n    return normalizeSymbolArray([symbol]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] === 'string') {\n      result.push([symbol[i]]);\n    } else {\n      result.push(symbol[i]);\n    }\n  }\n\n  return result;\n}\n/**\n * Convert dash input into dashArray\n *\n * @param {DecalDashArrayX} dash dash input\n * @return {number[][]} normolized dash array\n */\n\n\nfunction normalizeDashArrayX(dash) {\n  if (!dash || dash.length === 0) {\n    return [[0, 0]];\n  }\n\n  if (typeof dash === 'number') {\n    var dashValue = Math.ceil(dash);\n    return [[dashValue, dashValue]];\n  }\n  /**\n   * [20, 5] should be normalized into [[20, 5]],\n   * while [20, [5, 10]] should be normalized into [[20, 20], [5, 10]]\n   */\n\n\n  var isAllNumber = true;\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] !== 'number') {\n      isAllNumber = false;\n      break;\n    }\n  }\n\n  if (isAllNumber) {\n    return normalizeDashArrayX([dash]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] === 'number') {\n      var dashValue = Math.ceil(dash[i]);\n      result.push([dashValue, dashValue]);\n    } else {\n      var dashValue = map(dash[i], function (n) {\n        return Math.ceil(n);\n      });\n\n      if (dashValue.length % 2 === 1) {\n        // [4, 2, 1] means |----  -    -- |----  -    -- |\n        // so normalize it to be [4, 2, 1, 4, 2, 1]\n        result.push(dashValue.concat(dashValue));\n      } else {\n        result.push(dashValue);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * Convert dash input into dashArray\n *\n * @param {DecalDashArrayY} dash dash input\n * @return {number[]} normolized dash array\n */\n\n\nfunction normalizeDashArrayY(dash) {\n  if (!dash || typeof dash === 'object' && dash.length === 0) {\n    return [0, 0];\n  }\n\n  if (typeof dash === 'number') {\n    var dashValue_1 = Math.ceil(dash);\n    return [dashValue_1, dashValue_1];\n  }\n\n  var dashValue = map(dash, function (n) {\n    return Math.ceil(n);\n  });\n  return dash.length % 2 ? dashValue.concat(dashValue) : dashValue;\n}\n/**\n * Get block length of each line. A block is the length of dash line and space.\n * For example, a line with [4, 1] has a dash line of 4 and a space of 1 after\n * that, so the block length of this line is 5.\n *\n * @param {number[][]} dash dash arrary of X or Y\n * @return {number[]} block length of each line\n */\n\n\nfunction getLineBlockLengthX(dash) {\n  return map(dash, function (line) {\n    return getLineBlockLengthY(line);\n  });\n}\n\nfunction getLineBlockLengthY(dash) {\n  var blockLength = 0;\n\n  for (var i = 0; i < dash.length; ++i) {\n    blockLength += dash[i];\n  }\n\n  if (dash.length % 2 === 1) {\n    // [4, 2, 1] means |----  -    -- |----  -    -- |\n    // So total length is (4 + 2 + 1) * 2\n    return blockLength * 2;\n  }\n\n  return blockLength;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}