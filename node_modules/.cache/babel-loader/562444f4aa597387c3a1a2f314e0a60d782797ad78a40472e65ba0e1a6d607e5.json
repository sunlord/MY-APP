{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport * as graphicUtil from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport { parsePercent } from '../../util/number';\nimport ComponentModel from '../../model/Component';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\nvar TRANSFORM_PROPS = {\n  x: 1,\n  y: 1,\n  scaleX: 1,\n  scaleY: 1,\n  originX: 1,\n  originY: 1,\n  rotation: 1\n};\n;\nvar inner = modelUtil.makeInner();\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // ------------------------\n// Preprocessor\n// ------------------------\n\nvar preprocessor = function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n};\n;\nvar GraphicComponentModel = /** @class */\nfunction (_super) {\n  __extends(GraphicComponentModel, _super);\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GraphicComponentModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    _super.prototype.mergeOption.call(this, option, ecModel);\n    this.option.elements = elements;\n  };\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n    this._flatten(newList, flattenedList, null);\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge'); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n      if (!newElOption) {\n        return;\n      }\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  };\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   */\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n      result.push(option);\n      var children = option.children;\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n      delete option.children;\n    }, this);\n  }; // FIXME\n  // Pass to view using payload? setOption has a payload?\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: [] // parentId: null\n  };\n\n  return GraphicComponentModel;\n}(ComponentModel); // ------------------------\n// View\n// ------------------------\n\nvar GraphicComponentView = /** @class */\nfunction (_super) {\n  __extends(GraphicComponentView, _super);\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n    this._lastGraphicModel = graphicModel;\n    this._updateElements(graphicModel);\n    this._relocate(graphicModel, api);\n  };\n  /**\n   * Update graphic elements.\n   */\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n    if (!elOptionsToUpdate) {\n      return;\n    }\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n      if (elType === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      } // Remove unnecessary props to avoid potential problems.\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n      var $action = elOption.$action || 'merge';\n      if ($action === 'merge') {\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(elExisting, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(elExisting, elMap);\n      }\n      var el = elMap.get(id);\n      if (el && textContentOption) {\n        if ($action === 'merge') {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if ($action === 'replace') {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n      if (el) {\n        var elInner = inner(el);\n        elInner.__ecGraphicWidthOption = elOption.width;\n        elInner.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n        graphicUtil.setTooltipConfig({\n          el: el,\n          componentModel: graphicModel,\n          itemName: el.name,\n          itemTooltipOption: elOption.tooltip\n        });\n      }\n    });\n  };\n  /**\n   * Locate graphic elements.\n   */\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n      if (!el || !el.isGroup) {\n        continue;\n      }\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n      if (!el) {\n        continue;\n      }\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.__ecGraphicWidth,\n        height: parentElInner.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  };\n  /**\n   * Clear all elements.\n   */\n\n  GraphicComponentView.prototype._clear = function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, 'graphic type can not be found');\n  }\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).__ecGraphicId = id;\n}\nfunction removeEl(elExisting, elMap) {\n  var existElParent = elExisting && elExisting.parent;\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\n    existElParent.remove(elExisting);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n  newElOption.parentOption = null;\n}\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      } // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n  existItem.hv = newElOption.hv = [\n  // Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']),\n  // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(preprocessor);\n}","map":{"version":3,"names":["__extends","zrUtil","modelUtil","graphicUtil","layoutUtil","parsePercent","ComponentModel","ComponentView","getECData","isEC4CompatibleStyle","convertFromEC4CompatibleStyle","TRANSFORM_PROPS","x","y","scaleX","scaleY","originX","originY","rotation","inner","makeInner","_nonShapeGraphicElements","path","compoundPath","group","Group","image","Image","text","Text","preprocessor","option","graphicOption","graphic","isArray","elements","GraphicComponentModel","_super","_this","apply","arguments","type","preventAutoZ","prototype","mergeOption","ecModel","call","optionUpdated","newOption","isInit","thisOption","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","elOptionsToUpdate","_elOptionsToUpdate","each","resultItem","index","newElOption","process","env","NODE_ENV","assert","isObject","existing","push","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","i","length","splice","$action","optionList","result","parentOption","children","useElOptionsToUpdate","els","defaultOption","GraphicComponentView","init","_elMap","createHashMap","render","graphicModel","api","_lastGraphicModel","_clear","_updateElements","_relocate","elMap","rootGroup","elOption","id","convertOptionIdName","elExisting","get","parentId","targetElParent","elType","elOptionStyle","style","hv","textVerticalAlign","textBaseline","verticalAlign","align","textContentOption","textContent","textConfig","convertResult","elOptionCleaned","getCleanedElOption","parent","attr","createEl","removeEl","el","textContentExisting","getTextContent","setTextContent","elInner","__ecGraphicWidthOption","width","__ecGraphicHeightOption","height","setEventData","setTooltipConfig","componentModel","itemName","name","itemTooltipOption","tooltip","elOptions","apiWidth","getWidth","apiHeight","getHeight","isGroup","parentEl","isParentRoot","parentElInner","__ecGraphicWidth","__ecGraphicHeight","containerInfo","positionElement","boundingMode","bounding","dispose","graphicType","Clz","hasOwn","getShapeClass","add","set","__ecGraphicId","existElParent","traverse","removeKey","remove","extend","concat","LOCATION_PARAMS","isSetLoc","obj","props","isSet","prop","existElOption","keyInfo","newElParentOption","newElOptCopy","newType","merge","mergeLayoutParam","ignoreSize","copyLayoutParams","existItem","existingGroupOpt","newGroupOpt","eventData","silent","ignore","componentType","componentIndex","info","install","registers","registerComponentModel","registerComponentView","registerPreprocessor"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/component/graphic/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport * as graphicUtil from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport { parsePercent } from '../../util/number';\nimport ComponentModel from '../../model/Component';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\nvar TRANSFORM_PROPS = {\n  x: 1,\n  y: 1,\n  scaleX: 1,\n  scaleY: 1,\n  originX: 1,\n  originY: 1,\n  rotation: 1\n};\n;\nvar inner = modelUtil.makeInner();\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // ------------------------\n// Preprocessor\n// ------------------------\n\nvar preprocessor = function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n};\n\n;\n\nvar GraphicComponentModel =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentModel, _super);\n\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this.option.elements = elements;\n  };\n\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList, null);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge'); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  };\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   */\n\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  }; // FIXME\n  // Pass to view using payload? setOption has a payload?\n\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: [] // parentId: null\n\n  };\n  return GraphicComponentModel;\n}(ComponentModel); // ------------------------\n// View\n// ------------------------\n\n\nvar GraphicComponentView =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentView, _super);\n\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  };\n  /**\n   * Update graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n\n      if (elType === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n\n      var $action = elOption.$action || 'merge';\n\n      if ($action === 'merge') {\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(elExisting, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(elExisting, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el && textContentOption) {\n        if ($action === 'merge') {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if ($action === 'replace') {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n\n      if (el) {\n        var elInner = inner(el);\n        elInner.__ecGraphicWidthOption = elOption.width;\n        elInner.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n        graphicUtil.setTooltipConfig({\n          el: el,\n          componentModel: graphicModel,\n          itemName: el.name,\n          itemTooltipOption: elOption.tooltip\n        });\n      }\n    });\n  };\n  /**\n   * Locate graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.__ecGraphicWidth,\n        height: parentElInner.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  };\n  /**\n   * Clear all elements.\n   */\n\n\n  GraphicComponentView.prototype._clear = function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, 'graphic type can not be found');\n  }\n\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).__ecGraphicId = id;\n}\n\nfunction removeEl(elExisting, elMap) {\n  var existElParent = elExisting && elExisting.parent;\n\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\n    existElParent.remove(elExisting);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      } // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n\n\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(preprocessor);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}