{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { parsePercent, linearMap } from '../../util/number';\nimport * as layout from '../../util/layout';\nimport * as zrUtil from 'zrender/lib/core/util';\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\nexport default function pieLayout(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n    var width = parsePercent(viewRect.width, api.getWidth());\n    var height = parsePercent(viewRect.height, api.getHeight());\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width) + viewRect.x;\n    var cy = parsePercent(center[1], height) + viewRect.y;\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.setLayout({\n      viewRect: viewRect,\n      r: r\n    });\n    data.each(valueDim, function (value, idx) {\n      var angle;\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle_1 = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_1 = data.getItemLayout(idx);\n            layout_1.angle = angle_1;\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_2 = data.getItemLayout(idx);\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\n            layout_2.startAngle = currentAngle;\n            layout_2.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n  });\n}","map":{"version":3,"names":["parsePercent","linearMap","layout","zrUtil","PI2","Math","PI","RADIAN","getViewRect","seriesModel","api","getLayoutRect","getBoxLayoutParams","width","getWidth","height","getHeight","pieLayout","seriesType","ecModel","eachSeriesByType","data","getData","valueDim","mapDimension","viewRect","center","get","radius","isArray","size","min","cx","x","cy","y","r0","r","startAngle","minAngle","validDataCount","each","value","isNaN","sum","getSum","unitRadian","clockwise","roseType","stillShowZeroSum","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","setLayout","idx","angle","setItemLayout","NaN","endAngle","angle_1","layout_1","getItemLayout","layout_2"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/pie/pieLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { parsePercent, linearMap } from '../../util/number';\nimport * as layout from '../../util/layout';\nimport * as zrUtil from 'zrender/lib/core/util';\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nexport default function pieLayout(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = parsePercent(viewRect.width, api.getWidth());\n    var height = parsePercent(viewRect.height, api.getHeight());\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width) + viewRect.x;\n    var cy = parsePercent(center[1], height) + viewRect.y;\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.setLayout({\n      viewRect: viewRect,\n      r: r\n    });\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle_1 = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_1 = data.getItemLayout(idx);\n            layout_1.angle = angle_1;\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_2 = data.getItemLayout(idx);\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\n            layout_2.startAngle = currentAngle;\n            layout_2.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n  });\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,SAAS,QAAQ,mBAAmB;AAC3D,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,uBAAuB;AAC/C,IAAIC,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;AACrB,IAAIC,MAAM,GAAGF,IAAI,CAACC,EAAE,GAAG,GAAG;AAE1B,SAASE,WAAW,CAACC,WAAW,EAAEC,GAAG,EAAE;EACrC,OAAOR,MAAM,CAACS,aAAa,CAACF,WAAW,CAACG,kBAAkB,EAAE,EAAE;IAC5DC,KAAK,EAAEH,GAAG,CAACI,QAAQ,EAAE;IACrBC,MAAM,EAAEL,GAAG,CAACM,SAAS;EACvB,CAAC,CAAC;AACJ;AAEA,eAAe,SAASC,SAAS,CAACC,UAAU,EAAEC,OAAO,EAAET,GAAG,EAAE;EAC1DS,OAAO,CAACC,gBAAgB,CAACF,UAAU,EAAE,UAAUT,WAAW,EAAE;IAC1D,IAAIY,IAAI,GAAGZ,WAAW,CAACa,OAAO,EAAE;IAChC,IAAIC,QAAQ,GAAGF,IAAI,CAACG,YAAY,CAAC,OAAO,CAAC;IACzC,IAAIC,QAAQ,GAAGjB,WAAW,CAACC,WAAW,EAAEC,GAAG,CAAC;IAC5C,IAAIgB,MAAM,GAAGjB,WAAW,CAACkB,GAAG,CAAC,QAAQ,CAAC;IACtC,IAAIC,MAAM,GAAGnB,WAAW,CAACkB,GAAG,CAAC,QAAQ,CAAC;IAEtC,IAAI,CAACxB,MAAM,CAAC0B,OAAO,CAACD,MAAM,CAAC,EAAE;MAC3BA,MAAM,GAAG,CAAC,CAAC,EAAEA,MAAM,CAAC;IACtB;IAEA,IAAI,CAACzB,MAAM,CAAC0B,OAAO,CAACH,MAAM,CAAC,EAAE;MAC3BA,MAAM,GAAG,CAACA,MAAM,EAAEA,MAAM,CAAC;IAC3B;IAEA,IAAIb,KAAK,GAAGb,YAAY,CAACyB,QAAQ,CAACZ,KAAK,EAAEH,GAAG,CAACI,QAAQ,EAAE,CAAC;IACxD,IAAIC,MAAM,GAAGf,YAAY,CAACyB,QAAQ,CAACV,MAAM,EAAEL,GAAG,CAACM,SAAS,EAAE,CAAC;IAC3D,IAAIc,IAAI,GAAGzB,IAAI,CAAC0B,GAAG,CAAClB,KAAK,EAAEE,MAAM,CAAC;IAClC,IAAIiB,EAAE,GAAGhC,YAAY,CAAC0B,MAAM,CAAC,CAAC,CAAC,EAAEb,KAAK,CAAC,GAAGY,QAAQ,CAACQ,CAAC;IACpD,IAAIC,EAAE,GAAGlC,YAAY,CAAC0B,MAAM,CAAC,CAAC,CAAC,EAAEX,MAAM,CAAC,GAAGU,QAAQ,CAACU,CAAC;IACrD,IAAIC,EAAE,GAAGpC,YAAY,CAAC4B,MAAM,CAAC,CAAC,CAAC,EAAEE,IAAI,GAAG,CAAC,CAAC;IAC1C,IAAIO,CAAC,GAAGrC,YAAY,CAAC4B,MAAM,CAAC,CAAC,CAAC,EAAEE,IAAI,GAAG,CAAC,CAAC;IACzC,IAAIQ,UAAU,GAAG,CAAC7B,WAAW,CAACkB,GAAG,CAAC,YAAY,CAAC,GAAGpB,MAAM;IACxD,IAAIgC,QAAQ,GAAG9B,WAAW,CAACkB,GAAG,CAAC,UAAU,CAAC,GAAGpB,MAAM;IACnD,IAAIiC,cAAc,GAAG,CAAC;IACtBnB,IAAI,CAACoB,IAAI,CAAClB,QAAQ,EAAE,UAAUmB,KAAK,EAAE;MACnC,CAACC,KAAK,CAACD,KAAK,CAAC,IAAIF,cAAc,EAAE;IACnC,CAAC,CAAC;IACF,IAAII,GAAG,GAAGvB,IAAI,CAACwB,MAAM,CAACtB,QAAQ,CAAC,CAAC,CAAC;;IAEjC,IAAIuB,UAAU,GAAGzC,IAAI,CAACC,EAAE,IAAIsC,GAAG,IAAIJ,cAAc,CAAC,GAAG,CAAC;IACtD,IAAIO,SAAS,GAAGtC,WAAW,CAACkB,GAAG,CAAC,WAAW,CAAC;IAC5C,IAAIqB,QAAQ,GAAGvC,WAAW,CAACkB,GAAG,CAAC,UAAU,CAAC;IAC1C,IAAIsB,gBAAgB,GAAGxC,WAAW,CAACkB,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;;IAE5D,IAAIuB,MAAM,GAAG7B,IAAI,CAAC8B,aAAa,CAAC5B,QAAQ,CAAC;IACzC2B,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEf,IAAIE,SAAS,GAAGhD,GAAG;IACnB,IAAIiD,0BAA0B,GAAG,CAAC;IAClC,IAAIC,YAAY,GAAGhB,UAAU;IAC7B,IAAIiB,GAAG,GAAGR,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B1B,IAAI,CAACmC,SAAS,CAAC;MACb/B,QAAQ,EAAEA,QAAQ;MAClBY,CAAC,EAAEA;IACL,CAAC,CAAC;IACFhB,IAAI,CAACoB,IAAI,CAAClB,QAAQ,EAAE,UAAUmB,KAAK,EAAEe,GAAG,EAAE;MACxC,IAAIC,KAAK;MAET,IAAIf,KAAK,CAACD,KAAK,CAAC,EAAE;QAChBrB,IAAI,CAACsC,aAAa,CAACF,GAAG,EAAE;UACtBC,KAAK,EAAEE,GAAG;UACVtB,UAAU,EAAEsB,GAAG;UACfC,QAAQ,EAAED,GAAG;UACbb,SAAS,EAAEA,SAAS;UACpBf,EAAE,EAAEA,EAAE;UACNE,EAAE,EAAEA,EAAE;UACNE,EAAE,EAAEA,EAAE;UACNC,CAAC,EAAEW,QAAQ,GAAGY,GAAG,GAAGvB;QACtB,CAAC,CAAC;QACF;MACF,CAAC,CAAC;;MAGF,IAAIW,QAAQ,KAAK,MAAM,EAAE;QACvBU,KAAK,GAAGd,GAAG,KAAK,CAAC,IAAIK,gBAAgB,GAAGH,UAAU,GAAGJ,KAAK,GAAGI,UAAU;MACzE,CAAC,MAAM;QACLY,KAAK,GAAGtD,GAAG,GAAGoC,cAAc;MAC9B;MAEA,IAAIkB,KAAK,GAAGnB,QAAQ,EAAE;QACpBmB,KAAK,GAAGnB,QAAQ;QAChBa,SAAS,IAAIb,QAAQ;MACvB,CAAC,MAAM;QACLc,0BAA0B,IAAIX,KAAK;MACrC;MAEA,IAAImB,QAAQ,GAAGP,YAAY,GAAGC,GAAG,GAAGG,KAAK;MACzCrC,IAAI,CAACsC,aAAa,CAACF,GAAG,EAAE;QACtBC,KAAK,EAAEA,KAAK;QACZpB,UAAU,EAAEgB,YAAY;QACxBO,QAAQ,EAAEA,QAAQ;QAClBd,SAAS,EAAEA,SAAS;QACpBf,EAAE,EAAEA,EAAE;QACNE,EAAE,EAAEA,EAAE;QACNE,EAAE,EAAEA,EAAE;QACNC,CAAC,EAAEW,QAAQ,GAAG/C,SAAS,CAACyC,KAAK,EAAEQ,MAAM,EAAE,CAACd,EAAE,EAAEC,CAAC,CAAC,CAAC,GAAGA;MACpD,CAAC,CAAC;MACFiB,YAAY,GAAGO,QAAQ;IACzB,CAAC,CAAC,CAAC,CAAC;IACJ;;IAEA,IAAIT,SAAS,GAAGhD,GAAG,IAAIoC,cAAc,EAAE;MACrC;MACA;MACA,IAAIY,SAAS,IAAI,IAAI,EAAE;QACrB,IAAIU,OAAO,GAAG1D,GAAG,GAAGoC,cAAc;QAClCnB,IAAI,CAACoB,IAAI,CAAClB,QAAQ,EAAE,UAAUmB,KAAK,EAAEe,GAAG,EAAE;UACxC,IAAI,CAACd,KAAK,CAACD,KAAK,CAAC,EAAE;YACjB,IAAIqB,QAAQ,GAAG1C,IAAI,CAAC2C,aAAa,CAACP,GAAG,CAAC;YACtCM,QAAQ,CAACL,KAAK,GAAGI,OAAO;YACxBC,QAAQ,CAACzB,UAAU,GAAGA,UAAU,GAAGiB,GAAG,GAAGE,GAAG,GAAGK,OAAO;YACtDC,QAAQ,CAACF,QAAQ,GAAGvB,UAAU,GAAGiB,GAAG,IAAIE,GAAG,GAAG,CAAC,CAAC,GAAGK,OAAO;UAC5D;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLhB,UAAU,GAAGM,SAAS,GAAGC,0BAA0B;QACnDC,YAAY,GAAGhB,UAAU;QACzBjB,IAAI,CAACoB,IAAI,CAAClB,QAAQ,EAAE,UAAUmB,KAAK,EAAEe,GAAG,EAAE;UACxC,IAAI,CAACd,KAAK,CAACD,KAAK,CAAC,EAAE;YACjB,IAAIuB,QAAQ,GAAG5C,IAAI,CAAC2C,aAAa,CAACP,GAAG,CAAC;YACtC,IAAIC,KAAK,GAAGO,QAAQ,CAACP,KAAK,KAAKnB,QAAQ,GAAGA,QAAQ,GAAGG,KAAK,GAAGI,UAAU;YACvEmB,QAAQ,CAAC3B,UAAU,GAAGgB,YAAY;YAClCW,QAAQ,CAACJ,QAAQ,GAAGP,YAAY,GAAGC,GAAG,GAAGG,KAAK;YAC9CJ,YAAY,IAAIC,GAAG,GAAGG,KAAK;UAC7B;QACF,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}