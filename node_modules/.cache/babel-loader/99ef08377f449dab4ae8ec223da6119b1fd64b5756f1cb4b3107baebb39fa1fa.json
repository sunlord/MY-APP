{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { retrieveRawValue } from '../data/helper/dataProvider';\nimport { makeInner } from '../util/model';\nimport { getDecalFromPalette } from '../model/mixin/palette';\nvar DEFAULT_OPTION = {\n  label: {\n    enabled: true\n  },\n  decal: {\n    show: false\n  }\n};\nvar inner = makeInner();\nvar decalPaletteScope = {};\nexport default function ariaVisual(ecModel, api) {\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\n\n  if (!ariaModel.get('enabled')) {\n    return;\n  }\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\n  zrUtil.merge(ariaModel.option, defaultOption, false);\n  setDecal();\n  setLabel();\n  function setDecal() {\n    var decalModel = ariaModel.getModel('decal');\n    var useDecal = decalModel.get('show');\n    if (useDecal) {\n      // Each type of series use one scope.\n      // Pie and funnel are using diferrent scopes\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\n      ecModel.eachSeries(function (seriesModel) {\n        if (!seriesModel.useColorPaletteOnData) {\n          return;\n        }\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\n        if (!decalScope) {\n          decalScope = {};\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\n        }\n        inner(seriesModel).scope = decalScope;\n      });\n      ecModel.eachRawSeries(function (seriesModel) {\n        if (ecModel.isSeriesFiltered(seriesModel)) {\n          return;\n        }\n        if (typeof seriesModel.enableAriaDecal === 'function') {\n          // Let series define how to use decal palette on data\n          seriesModel.enableAriaDecal();\n          return;\n        }\n        var data = seriesModel.getData();\n        if (seriesModel.useColorPaletteOnData) {\n          var dataAll_1 = seriesModel.getRawData();\n          var idxMap_1 = {};\n          var decalScope_1 = inner(seriesModel).scope;\n          data.each(function (idx) {\n            var rawIdx = data.getRawIndex(idx);\n            idxMap_1[rawIdx] = idx;\n          });\n          var dataCount_1 = dataAll_1.count();\n          dataAll_1.each(function (rawIdx) {\n            var idx = idxMap_1[rawIdx];\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\n          });\n        } else {\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\n          var specifiedDecal = data.getVisual('decal');\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\n        }\n        function mergeDecal(specifiedDecal, paletteDecal) {\n          // Merge decal from palette to decal from itemStyle.\n          // User do not need to specify all of the decal props.\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\n          resultDecal.dirty = true;\n          return resultDecal;\n        }\n      });\n    }\n  }\n  function setLabel() {\n    var labelLocale = ecModel.getLocaleModel().get('aria');\n    var labelModel = ariaModel.getModel('label');\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\n    if (!labelModel.get('enabled')) {\n      return;\n    }\n    var dom = api.getZr().dom;\n    if (labelModel.get('description')) {\n      dom.setAttribute('aria-label', labelModel.get('description'));\n      return;\n    }\n    var seriesCnt = ecModel.getSeriesCount();\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n    var ariaLabel;\n    if (seriesCnt < 1) {\n      // No series, no aria label\n      return;\n    } else {\n      var title = getTitle();\n      if (title) {\n        var withTitle = labelModel.get(['general', 'withTitle']);\n        ariaLabel = replace(withTitle, {\n          title: title\n        });\n      } else {\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\n      }\n      var seriesLabels_1 = [];\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\n      ariaLabel += replace(prefix, {\n        seriesCount: seriesCnt\n      });\n      ecModel.eachSeries(function (seriesModel, idx) {\n        if (idx < displaySeriesCnt) {\n          var seriesLabel = void 0;\n          var seriesName = seriesModel.get('name');\n          var withName = seriesName ? 'withName' : 'withoutName';\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\n          seriesLabel = replace(seriesLabel, {\n            seriesId: seriesModel.seriesIndex,\n            seriesName: seriesModel.get('name'),\n            seriesType: getSeriesTypeName(seriesModel.subType)\n          });\n          var data = seriesModel.getData();\n          if (data.count() > maxDataCnt) {\n            // Show part of data\n            var partialLabel = labelModel.get(['data', 'partialData']);\n            seriesLabel += replace(partialLabel, {\n              displayCnt: maxDataCnt\n            });\n          } else {\n            seriesLabel += labelModel.get(['data', 'allData']);\n          }\n          var dataLabels = [];\n          for (var i = 0; i < data.count(); i++) {\n            if (i < maxDataCnt) {\n              var name_1 = data.getName(i);\n              var value = retrieveRawValue(data, i);\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\n              dataLabels.push(replace(dataLabel, {\n                name: name_1,\n                value: value\n              }));\n            }\n          }\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\n          seriesLabels_1.push(seriesLabel);\n        }\n      });\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\n      var middleSeparator = separatorModel.get('middle');\n      var endSeparator = separatorModel.get('end');\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\n      dom.setAttribute('aria-label', ariaLabel);\n    }\n  }\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n  function getTitle() {\n    var title = ecModel.get('title');\n    if (title && title.length) {\n      title = title[0];\n    }\n    return title && title.text;\n  }\n  function getSeriesTypeName(type) {\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '自定义图';\n  }\n}","map":{"version":3,"names":["zrUtil","retrieveRawValue","makeInner","getDecalFromPalette","DEFAULT_OPTION","label","enabled","decal","show","inner","decalPaletteScope","ariaVisual","ecModel","api","ariaModel","getModel","get","defaultOption","clone","merge","getLocaleModel","option","setDecal","setLabel","decalModel","useDecal","paletteScopeGroupByType_1","createHashMap","eachSeries","seriesModel","useColorPaletteOnData","decalScope","type","set","scope","eachRawSeries","isSeriesFiltered","enableAriaDecal","data","getData","dataAll_1","getRawData","idxMap_1","decalScope_1","each","idx","rawIdx","getRawIndex","dataCount_1","count","name","getName","paletteDecal","specifiedDecal","getItemVisual","setItemVisual","mergeDecal","getSeriesCount","getVisual","setVisual","resultDecal","extend","dirty","labelLocale","labelModel","defaults","dom","getZr","setAttribute","seriesCnt","maxDataCnt","maxSeriesCnt","displaySeriesCnt","Math","min","ariaLabel","title","getTitle","withTitle","replace","seriesLabels_1","prefix","seriesCount","seriesLabel","seriesName","withName","seriesId","seriesIndex","seriesType","getSeriesTypeName","subType","partialLabel","displayCnt","dataLabels","i","name_1","value","dataLabel","push","middleSeparator_1","endSeparator_1","join","separatorModel","middleSeparator","endSeparator","str","keyValues","result","key","RegExp","length","text"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/visual/aria.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { retrieveRawValue } from '../data/helper/dataProvider';\nimport { makeInner } from '../util/model';\nimport { getDecalFromPalette } from '../model/mixin/palette';\nvar DEFAULT_OPTION = {\n  label: {\n    enabled: true\n  },\n  decal: {\n    show: false\n  }\n};\nvar inner = makeInner();\nvar decalPaletteScope = {};\nexport default function ariaVisual(ecModel, api) {\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\n\n  if (!ariaModel.get('enabled')) {\n    return;\n  }\n\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\n  zrUtil.merge(ariaModel.option, defaultOption, false);\n  setDecal();\n  setLabel();\n\n  function setDecal() {\n    var decalModel = ariaModel.getModel('decal');\n    var useDecal = decalModel.get('show');\n\n    if (useDecal) {\n      // Each type of series use one scope.\n      // Pie and funnel are using diferrent scopes\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\n      ecModel.eachSeries(function (seriesModel) {\n        if (!seriesModel.useColorPaletteOnData) {\n          return;\n        }\n\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\n\n        if (!decalScope) {\n          decalScope = {};\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\n        }\n\n        inner(seriesModel).scope = decalScope;\n      });\n      ecModel.eachRawSeries(function (seriesModel) {\n        if (ecModel.isSeriesFiltered(seriesModel)) {\n          return;\n        }\n\n        if (typeof seriesModel.enableAriaDecal === 'function') {\n          // Let series define how to use decal palette on data\n          seriesModel.enableAriaDecal();\n          return;\n        }\n\n        var data = seriesModel.getData();\n\n        if (seriesModel.useColorPaletteOnData) {\n          var dataAll_1 = seriesModel.getRawData();\n          var idxMap_1 = {};\n          var decalScope_1 = inner(seriesModel).scope;\n          data.each(function (idx) {\n            var rawIdx = data.getRawIndex(idx);\n            idxMap_1[rawIdx] = idx;\n          });\n          var dataCount_1 = dataAll_1.count();\n          dataAll_1.each(function (rawIdx) {\n            var idx = idxMap_1[rawIdx];\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\n          });\n        } else {\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\n          var specifiedDecal = data.getVisual('decal');\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\n        }\n\n        function mergeDecal(specifiedDecal, paletteDecal) {\n          // Merge decal from palette to decal from itemStyle.\n          // User do not need to specify all of the decal props.\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\n          resultDecal.dirty = true;\n          return resultDecal;\n        }\n      });\n    }\n  }\n\n  function setLabel() {\n    var labelLocale = ecModel.getLocaleModel().get('aria');\n    var labelModel = ariaModel.getModel('label');\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\n\n    if (!labelModel.get('enabled')) {\n      return;\n    }\n\n    var dom = api.getZr().dom;\n\n    if (labelModel.get('description')) {\n      dom.setAttribute('aria-label', labelModel.get('description'));\n      return;\n    }\n\n    var seriesCnt = ecModel.getSeriesCount();\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n    var ariaLabel;\n\n    if (seriesCnt < 1) {\n      // No series, no aria label\n      return;\n    } else {\n      var title = getTitle();\n\n      if (title) {\n        var withTitle = labelModel.get(['general', 'withTitle']);\n        ariaLabel = replace(withTitle, {\n          title: title\n        });\n      } else {\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\n      }\n\n      var seriesLabels_1 = [];\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\n      ariaLabel += replace(prefix, {\n        seriesCount: seriesCnt\n      });\n      ecModel.eachSeries(function (seriesModel, idx) {\n        if (idx < displaySeriesCnt) {\n          var seriesLabel = void 0;\n          var seriesName = seriesModel.get('name');\n          var withName = seriesName ? 'withName' : 'withoutName';\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\n          seriesLabel = replace(seriesLabel, {\n            seriesId: seriesModel.seriesIndex,\n            seriesName: seriesModel.get('name'),\n            seriesType: getSeriesTypeName(seriesModel.subType)\n          });\n          var data = seriesModel.getData();\n\n          if (data.count() > maxDataCnt) {\n            // Show part of data\n            var partialLabel = labelModel.get(['data', 'partialData']);\n            seriesLabel += replace(partialLabel, {\n              displayCnt: maxDataCnt\n            });\n          } else {\n            seriesLabel += labelModel.get(['data', 'allData']);\n          }\n\n          var dataLabels = [];\n\n          for (var i = 0; i < data.count(); i++) {\n            if (i < maxDataCnt) {\n              var name_1 = data.getName(i);\n              var value = retrieveRawValue(data, i);\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\n              dataLabels.push(replace(dataLabel, {\n                name: name_1,\n                value: value\n              }));\n            }\n          }\n\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\n          seriesLabels_1.push(seriesLabel);\n        }\n      });\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\n      var middleSeparator = separatorModel.get('middle');\n      var endSeparator = separatorModel.get('end');\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\n      dom.setAttribute('aria-label', ariaLabel);\n    }\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getTitle() {\n    var title = ecModel.get('title');\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '自定义图';\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}