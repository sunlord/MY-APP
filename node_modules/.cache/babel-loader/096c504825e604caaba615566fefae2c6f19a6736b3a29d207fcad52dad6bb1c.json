{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport SymbolDraw from '../helper/SymbolDraw';\nimport SymbolClz from '../helper/Symbol';\nimport lineAnimationDiff from './lineAnimationDiff';\nimport * as graphic from '../../util/graphic';\nimport * as modelUtil from '../../util/model';\nimport { ECPolyline, ECPolygon } from './poly';\nimport ChartView from '../../view/Chart';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { getECData } from '../../util/innerStore';\nimport { createFloat32Array } from '../../util/vendor';\nimport { convertToColorString } from '../../util/format';\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n  return true;\n}\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n  return [[minX, minY], [maxX, maxY]];\n}\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n    min1 = _a[0],\n    max1 = _a[1];\n  var _b = bboxFromPoints(points2),\n    min2 = _b[0],\n    max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n  return points;\n}\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  for (; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n    return;\n  }\n  var coordDim;\n  var visualMeta;\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      offset: 0,\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value, true)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n  return len - 1;\n}\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n    prevIndex = i;\n    a = b;\n  }\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var showEndLabel = endLabelModel_1.get('show');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = showEndLabel ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n    if (during) {\n      during(1, clipPath);\n    }\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\nvar LineView = /** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n        }\n      }\n      polyline = this._newPolyline(points);\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // NOTE: Must update _endLabel before setClipPath.\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n            }\n          }\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n    var focus = seriesModel.get(['emphasis', 'focus']);\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\n    polyline.useStyle(zrUtil.defaults(\n    // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    enableHoverEmphasis(polyline, focus, blurScope);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    var connectNulls = seriesModel.get('connectNulls');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      enableHoverEmphasis(polygon, focus, blurScope);\n    }\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  };\n  LineView.prototype.dispose = function () {};\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n    this._changePolyState('emphasis');\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n    this._changePolyState('normal');\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n    this._lineGroup.add(polyline);\n    this._polyline = polyline;\n    return polyline;\n  };\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n    this._lineGroup.add(polygon);\n    this._polygon = polygon;\n    return polygon;\n  };\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n    if (typeof seriesDuration === 'function') {\n      seriesDuration = seriesDuration(null);\n    }\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          delay: delay\n        });\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n    if (endLabelModel.get('show')) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      var endLabel = this._endLabel;\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n        });\n\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n      this._endLabel = null;\n    }\n  };\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n      return;\n    }\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n    this._lineGroup.removeAll();\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\nexport default LineView;","map":{"version":3,"names":["__extends","zrUtil","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","ECPolyline","ECPolygon","ChartView","prepareDataCoordInfo","getStackedOnPoint","createGridClipPath","createPolarClipPath","isCoordinateSystemType","setStatesStylesFromModel","setStatesFlag","enableHoverEmphasis","setLabelStyle","getLabelStatesModels","labelInner","getDefaultLabel","getDefaultInterpolatedLabel","getECData","createFloat32Array","convertToColorString","isPointsSame","points1","points2","length","i","bboxFromPoints","points","minX","Infinity","minY","maxX","maxY","x","y","isNaN","Math","min","max","getBoundingDiff","_a","min1","max1","_b","min2","max2","abs","getSmooth","smooth","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","len","count","idx","pt","turnPointsIntoStep","stepTurnAt","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","stepPt","nextPt","push","middle","stepPt2","getVisualGradient","visualMetaList","getVisual","type","process","env","NODE_ENV","console","warn","coordDim","visualMeta","dimIndex","dimension","dimName","dimensions","dimInfo","getDimensionInfo","axis","getAxis","colorStops","map","stops","stop","offset","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","slice","reverse","tinyExtent","minCoord","maxCoord","coordSpan","each","unshift","gradient","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","ordinalNumber","scale","getRawOrdinalNumber","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","dataLen","step","round","getSymbolSize","isHorizontal","isPointNull","getLastIndexNotNull","getPointAtIndex","getIndexRange","xOrY","dimIdx","a","b","prevIndex","nextIndex","range","t","createLineClipPath","lineView","hasAnimation","endLabelModel_1","getModel","showEndLabel","valueAnimation_1","data_1","getData","labelAnimationRecord_1","lastFrameIndex","during","percent","clipRect","_endLabelOnDuring","clipPath","endLabel","_endLabel","originalX","attr","originalY","rectShape","shape","expandSize","width","height","getEndLabelStateSpecified","endLabelModel","isBaseInversed","inverse","align","verticalAlign","normal","LineView","_super","apply","arguments","prototype","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","api","_this","coordinateSystem","lineStyleModel","areaStyleModel","getLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r","_clipShapeForSymbol","visualColor","_step","updateData","isIgnore","clipShape","disableAnimation","getSymbolPoint","_initSymbolLabelAnimation","_newPolyline","_newPolygon","_initOrUpdateEndLabel","setClipPath","_stackedOnPoints","_points","_doUpdateAnimation","setShape","focus","blurScope","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","style","lineWidth","emphasisLineStyle","getState","seriesIndex","smoothMonotone","connectNulls","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","decal","changePolyState","toState","_changePolyState","onHoverStateChange","_valueOrigin","dispose","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","contain","zlevel","z","setZ","symbolLabel","getSymbolPath","getTextContent","z2","stopSymbolAnimation","call","downplay","segmentIgnoreThreshold","isHorizontalOrRadial","isAxisInverse","hostModel","seriesDuration","seriesDalay","seriesDalayValue","point","start","end","current","polarClip","pointToCoord","startAngle","endAngle","PI","gridClip","ratio","delay","symbolPath","text","scaleX","scaleY","animateTo","duration","animateFrom","disableLabelAnimation","inheritColor","data_2","Text","ignoreClip","setTextContent","labelFetcher","labelDataIndex","defaultText","opt","interpolatedValue","enableTextSetter","textConfig","position","removeTextContent","animationRecord","valueAnimation","precision","distance","distanceX","distanceY","dataIndexRange","indices","diff","getRawValue","getPointOn","startValue","endValue","interpolateRawValues","setLabelText","stackedOnCurrent","next","stackedOnNext","__points","target","stopAnimation","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","dirtyShape","markRedraw","removeAll"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport SymbolDraw from '../helper/SymbolDraw';\nimport SymbolClz from '../helper/Symbol';\nimport lineAnimationDiff from './lineAnimationDiff';\nimport * as graphic from '../../util/graphic';\nimport * as modelUtil from '../../util/model';\nimport { ECPolyline, ECPolygon } from './poly';\nimport ChartView from '../../view/Chart';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { getECData } from '../../util/innerStore';\nimport { createFloat32Array } from '../../util/vendor';\nimport { convertToColorString } from '../../util/format';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n\n  for (; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      offset: 0,\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value, true)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var showEndLabel = endLabelModel_1.get('show');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = showEndLabel ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var focus = seriesModel.get(['emphasis', 'focus']);\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    enableHoverEmphasis(polyline, focus, blurScope);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    var connectNulls = seriesModel.get('connectNulls');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      enableHoverEmphasis(polygon, focus, blurScope);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  };\n\n  LineView.prototype.dispose = function () {};\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (typeof seriesDuration === 'function') {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (endLabelModel.get('show')) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}