{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElement } from './core';\nimport * as util from '../core/util';\nimport Path from '../graphic/Path';\nimport ZRImage from '../graphic/Image';\nimport TSpan from '../graphic/TSpan';\nimport arrayDiff from '../core/arrayDiff';\nimport GradientManager from './helper/GradientManager';\nimport PatternManager from './helper/PatternManager';\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\nimport ShadowManager from './helper/ShadowManager';\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZRImage) {\n    return svgImage;\n  } else if (el instanceof TSpan) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\nfunction removeFromMyParent(child) {\n  if (child && child.parentNode) {\n    child.parentNode.removeChild(child);\n  }\n}\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\nvar SVGPainter = function () {\n  function SVGPainter(root, storage, opts, zrId) {\n    this.type = 'svg';\n    this.refreshHover = createMethodNotSupport('refreshHover');\n    this.pathToImage = createMethodNotSupport('pathToImage');\n    this.configLayer = createMethodNotSupport('configLayer');\n    this.root = root;\n    this.storage = storage;\n    this._opts = opts = util.extend({}, opts || {});\n    var svgDom = createElement('svg');\n    svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n    svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svgDom.setAttribute('version', '1.1');\n    svgDom.setAttribute('baseProfile', 'full');\n    svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n    var bgRoot = createElement('g');\n    svgDom.appendChild(bgRoot);\n    var svgRoot = createElement('g');\n    svgDom.appendChild(svgRoot);\n    this._gradientManager = new GradientManager(zrId, svgRoot);\n    this._patternManager = new PatternManager(zrId, svgRoot);\n    this._clipPathManager = new ClippathManager(zrId, svgRoot);\n    this._shadowManager = new ShadowManager(zrId, svgRoot);\n    var viewport = document.createElement('div');\n    viewport.style.cssText = 'overflow:hidden;position:relative';\n    this._svgDom = svgDom;\n    this._svgRoot = svgRoot;\n    this._backgroundRoot = bgRoot;\n    this._viewport = viewport;\n    root.appendChild(viewport);\n    viewport.appendChild(svgDom);\n    this.resize(opts.width, opts.height);\n    this._visibleList = [];\n  }\n  SVGPainter.prototype.getType = function () {\n    return 'svg';\n  };\n  SVGPainter.prototype.getViewportRoot = function () {\n    return this._viewport;\n  };\n  SVGPainter.prototype.getSvgDom = function () {\n    return this._svgDom;\n  };\n  SVGPainter.prototype.getSvgRoot = function () {\n    return this._svgRoot;\n  };\n  SVGPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n  SVGPainter.prototype.refresh = function () {\n    var list = this.storage.getDisplayList(true);\n    this._paintList(list);\n  };\n  SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    if (this._backgroundRoot && this._backgroundNode) {\n      this._backgroundRoot.removeChild(this._backgroundNode);\n    }\n    var bgNode = createElement('rect');\n    bgNode.setAttribute('width', this.getWidth());\n    bgNode.setAttribute('height', this.getHeight());\n    bgNode.setAttribute('x', 0);\n    bgNode.setAttribute('y', 0);\n    bgNode.setAttribute('id', 0);\n    bgNode.style.fill = backgroundColor;\n    this._backgroundRoot.appendChild(bgNode);\n    this._backgroundNode = bgNode;\n  };\n  SVGPainter.prototype.createSVGElement = function (tag) {\n    return createElement(tag);\n  };\n  SVGPainter.prototype.paintOne = function (el) {\n    var svgProxy = getSvgProxy(el);\n    svgProxy && svgProxy.brush(el);\n    return getSvgElement(el);\n  };\n  SVGPainter.prototype._paintList = function (list) {\n    var gradientManager = this._gradientManager;\n    var patternManager = this._patternManager;\n    var clipPathManager = this._clipPathManager;\n    var shadowManager = this._shadowManager;\n    gradientManager.markAllUnused();\n    patternManager.markAllUnused();\n    clipPathManager.markAllUnused();\n    shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    for (var i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable);\n      if (!displayable.invisible) {\n        if (displayable.__dirty || !svgElement) {\n          svgProxy && svgProxy.brush(displayable);\n          svgElement = getSvgElement(displayable);\n          if (svgElement && displayable.style) {\n            gradientManager.update(displayable.style.fill);\n            gradientManager.update(displayable.style.stroke);\n            patternManager.update(displayable.style.fill);\n            patternManager.update(displayable.style.stroke);\n            shadowManager.update(svgElement, displayable);\n          }\n          displayable.__dirty = 0;\n        }\n        if (svgElement) {\n          newVisibleList.push(displayable);\n        }\n      }\n    }\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement;\n    var topPrevSvgElement;\n    for (var i = 0; i < diff.length; i++) {\n      var item = diff[i];\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          hasClipPath(displayable) ? removeFromMyParent(svgElement) : remove(svgRoot, svgElement);\n        }\n      }\n    }\n    var prevDisplayable;\n    var currentClipGroup;\n    for (var i = 0; i < diff.length; i++) {\n      var item = diff[i];\n      if (item.removed) {\n        continue;\n      }\n      for (var k = 0; k < item.count; k++) {\n        var displayable = newVisibleList[item.indices[k]];\n        var clipGroup = clipPathManager.update(displayable, prevDisplayable);\n        if (clipGroup !== currentClipGroup) {\n          prevSvgElement = topPrevSvgElement;\n          if (clipGroup) {\n            prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement) : prepend(svgRoot, clipGroup);\n            topPrevSvgElement = clipGroup;\n            prevSvgElement = null;\n          }\n          currentClipGroup = clipGroup;\n        }\n        var svgElement = getSvgElement(displayable);\n        prevSvgElement ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement) : prepend(currentClipGroup || svgRoot, svgElement);\n        prevSvgElement = svgElement || prevSvgElement;\n        if (!currentClipGroup) {\n          topPrevSvgElement = prevSvgElement;\n        }\n        gradientManager.markUsed(displayable);\n        gradientManager.addWithoutUpdate(svgElement, displayable);\n        patternManager.markUsed(displayable);\n        patternManager.addWithoutUpdate(svgElement, displayable);\n        clipPathManager.markUsed(displayable);\n        prevDisplayable = displayable;\n      }\n    }\n    gradientManager.removeUnused();\n    patternManager.removeUnused();\n    clipPathManager.removeUnused();\n    shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  };\n  SVGPainter.prototype.resize = function (width, height) {\n    var viewport = this._viewport;\n    viewport.style.display = 'none';\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgDom;\n      svgRoot.setAttribute('width', width + '');\n      svgRoot.setAttribute('height', height + '');\n    }\n    if (this._backgroundNode) {\n      this._backgroundNode.setAttribute('width', width);\n      this._backgroundNode.setAttribute('height', height);\n    }\n  };\n  SVGPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n  SVGPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n  SVGPainter.prototype._getSize = function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  };\n  SVGPainter.prototype.dispose = function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\n  };\n  SVGPainter.prototype.clear = function () {\n    var viewportNode = this._viewport;\n    if (viewportNode && viewportNode.parentNode) {\n      viewportNode.parentNode.removeChild(viewportNode);\n    }\n  };\n  SVGPainter.prototype.toDataURL = function () {\n    this.refresh();\n    var svgDom = this._svgDom;\n    var outerHTML = svgDom.outerHTML || (svgDom.parentNode && svgDom.parentNode).innerHTML;\n    var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  };\n  return SVGPainter;\n}();\nfunction createMethodNotSupport(method) {\n  return function () {\n    util.logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n}\nexport default SVGPainter;","map":{"version":3,"names":["createElement","util","Path","ZRImage","TSpan","arrayDiff","GradientManager","PatternManager","ClippathManager","hasClipPath","ShadowManager","path","svgPath","image","svgImage","text","svgText","parseInt10","val","parseInt","getSvgProxy","el","checkParentAvailable","parent","child","parentNode","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","remove","removeChild","removeFromMyParent","getSvgElement","displayable","__svgEl","SVGPainter","root","storage","opts","zrId","type","refreshHover","createMethodNotSupport","pathToImage","configLayer","_opts","extend","svgDom","setAttributeNS","setAttribute","style","cssText","bgRoot","svgRoot","_gradientManager","_patternManager","_clipPathManager","_shadowManager","viewport","document","_svgDom","_svgRoot","_backgroundRoot","_viewport","resize","width","height","_visibleList","prototype","getType","getViewportRoot","getSvgDom","getSvgRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","setBackgroundColor","backgroundColor","_backgroundNode","bgNode","getWidth","getHeight","fill","createSVGElement","tag","paintOne","svgProxy","brush","gradientManager","patternManager","clipPathManager","shadowManager","markAllUnused","visibleList","listLen","length","newVisibleList","i","svgElement","invisible","__dirty","update","stroke","push","diff","prevSvgElement","topPrevSvgElement","item","removed","k","count","indices","prevDisplayable","currentClipGroup","clipGroup","markUsed","addWithoutUpdate","removeUnused","display","_getSize","_width","_height","viewportStyle","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","innerHTML","clear","viewportNode","toDataURL","outerHTML","html","encodeURIComponent","replace","method","logError"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/svg/Painter.js"],"sourcesContent":["import { createElement } from './core';\nimport * as util from '../core/util';\nimport Path from '../graphic/Path';\nimport ZRImage from '../graphic/Image';\nimport TSpan from '../graphic/TSpan';\nimport arrayDiff from '../core/arrayDiff';\nimport GradientManager from './helper/GradientManager';\nimport PatternManager from './helper/PatternManager';\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\nimport ShadowManager from './helper/ShadowManager';\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction getSvgProxy(el) {\n    if (el instanceof Path) {\n        return svgPath;\n    }\n    else if (el instanceof ZRImage) {\n        return svgImage;\n    }\n    else if (el instanceof TSpan) {\n        return svgText;\n    }\n    else {\n        return svgPath;\n    }\n}\nfunction checkParentAvailable(parent, child) {\n    return child && parent && child.parentNode !== parent;\n}\nfunction insertAfter(parent, child, prevSibling) {\n    if (checkParentAvailable(parent, child) && prevSibling) {\n        var nextSibling = prevSibling.nextSibling;\n        nextSibling ? parent.insertBefore(child, nextSibling)\n            : parent.appendChild(child);\n    }\n}\nfunction prepend(parent, child) {\n    if (checkParentAvailable(parent, child)) {\n        var firstChild = parent.firstChild;\n        firstChild ? parent.insertBefore(child, firstChild)\n            : parent.appendChild(child);\n    }\n}\nfunction remove(parent, child) {\n    if (child && parent && child.parentNode === parent) {\n        parent.removeChild(child);\n    }\n}\nfunction removeFromMyParent(child) {\n    if (child && child.parentNode) {\n        child.parentNode.removeChild(child);\n    }\n}\nfunction getSvgElement(displayable) {\n    return displayable.__svgEl;\n}\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts, zrId) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.pathToImage = createMethodNotSupport('pathToImage');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.root = root;\n        this.storage = storage;\n        this._opts = opts = util.extend({}, opts || {});\n        var svgDom = createElement('svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svgDom.setAttribute('version', '1.1');\n        svgDom.setAttribute('baseProfile', 'full');\n        svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n        var bgRoot = createElement('g');\n        svgDom.appendChild(bgRoot);\n        var svgRoot = createElement('g');\n        svgDom.appendChild(svgRoot);\n        this._gradientManager = new GradientManager(zrId, svgRoot);\n        this._patternManager = new PatternManager(zrId, svgRoot);\n        this._clipPathManager = new ClippathManager(zrId, svgRoot);\n        this._shadowManager = new ShadowManager(zrId, svgRoot);\n        var viewport = document.createElement('div');\n        viewport.style.cssText = 'overflow:hidden;position:relative';\n        this._svgDom = svgDom;\n        this._svgRoot = svgRoot;\n        this._backgroundRoot = bgRoot;\n        this._viewport = viewport;\n        root.appendChild(viewport);\n        viewport.appendChild(svgDom);\n        this.resize(opts.width, opts.height);\n        this._visibleList = [];\n    }\n    SVGPainter.prototype.getType = function () {\n        return 'svg';\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._svgRoot;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.refresh = function () {\n        var list = this.storage.getDisplayList(true);\n        this._paintList(list);\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        if (this._backgroundRoot && this._backgroundNode) {\n            this._backgroundRoot.removeChild(this._backgroundNode);\n        }\n        var bgNode = createElement('rect');\n        bgNode.setAttribute('width', this.getWidth());\n        bgNode.setAttribute('height', this.getHeight());\n        bgNode.setAttribute('x', 0);\n        bgNode.setAttribute('y', 0);\n        bgNode.setAttribute('id', 0);\n        bgNode.style.fill = backgroundColor;\n        this._backgroundRoot.appendChild(bgNode);\n        this._backgroundNode = bgNode;\n    };\n    SVGPainter.prototype.createSVGElement = function (tag) {\n        return createElement(tag);\n    };\n    SVGPainter.prototype.paintOne = function (el) {\n        var svgProxy = getSvgProxy(el);\n        svgProxy && svgProxy.brush(el);\n        return getSvgElement(el);\n    };\n    SVGPainter.prototype._paintList = function (list) {\n        var gradientManager = this._gradientManager;\n        var patternManager = this._patternManager;\n        var clipPathManager = this._clipPathManager;\n        var shadowManager = this._shadowManager;\n        gradientManager.markAllUnused();\n        patternManager.markAllUnused();\n        clipPathManager.markAllUnused();\n        shadowManager.markAllUnused();\n        var svgRoot = this._svgRoot;\n        var visibleList = this._visibleList;\n        var listLen = list.length;\n        var newVisibleList = [];\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            var svgProxy = getSvgProxy(displayable);\n            var svgElement = getSvgElement(displayable);\n            if (!displayable.invisible) {\n                if (displayable.__dirty || !svgElement) {\n                    svgProxy && svgProxy.brush(displayable);\n                    svgElement = getSvgElement(displayable);\n                    if (svgElement && displayable.style) {\n                        gradientManager.update(displayable.style.fill);\n                        gradientManager.update(displayable.style.stroke);\n                        patternManager.update(displayable.style.fill);\n                        patternManager.update(displayable.style.stroke);\n                        shadowManager.update(svgElement, displayable);\n                    }\n                    displayable.__dirty = 0;\n                }\n                if (svgElement) {\n                    newVisibleList.push(displayable);\n                }\n            }\n        }\n        var diff = arrayDiff(visibleList, newVisibleList);\n        var prevSvgElement;\n        var topPrevSvgElement;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                for (var k = 0; k < item.count; k++) {\n                    var displayable = visibleList[item.indices[k]];\n                    var svgElement = getSvgElement(displayable);\n                    hasClipPath(displayable) ? removeFromMyParent(svgElement)\n                        : remove(svgRoot, svgElement);\n                }\n            }\n        }\n        var prevDisplayable;\n        var currentClipGroup;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                continue;\n            }\n            for (var k = 0; k < item.count; k++) {\n                var displayable = newVisibleList[item.indices[k]];\n                var clipGroup = clipPathManager.update(displayable, prevDisplayable);\n                if (clipGroup !== currentClipGroup) {\n                    prevSvgElement = topPrevSvgElement;\n                    if (clipGroup) {\n                        prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement)\n                            : prepend(svgRoot, clipGroup);\n                        topPrevSvgElement = clipGroup;\n                        prevSvgElement = null;\n                    }\n                    currentClipGroup = clipGroup;\n                }\n                var svgElement = getSvgElement(displayable);\n                prevSvgElement\n                    ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement)\n                    : prepend(currentClipGroup || svgRoot, svgElement);\n                prevSvgElement = svgElement || prevSvgElement;\n                if (!currentClipGroup) {\n                    topPrevSvgElement = prevSvgElement;\n                }\n                gradientManager.markUsed(displayable);\n                gradientManager.addWithoutUpdate(svgElement, displayable);\n                patternManager.markUsed(displayable);\n                patternManager.addWithoutUpdate(svgElement, displayable);\n                clipPathManager.markUsed(displayable);\n                prevDisplayable = displayable;\n            }\n        }\n        gradientManager.removeUnused();\n        patternManager.removeUnused();\n        clipPathManager.removeUnused();\n        shadowManager.removeUnused();\n        this._visibleList = newVisibleList;\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var viewport = this._viewport;\n        viewport.style.display = 'none';\n        var opts = this._opts;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        width = this._getSize(0);\n        height = this._getSize(1);\n        viewport.style.display = '';\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            var viewportStyle = viewport.style;\n            viewportStyle.width = width + 'px';\n            viewportStyle.height = height + 'px';\n            var svgRoot = this._svgDom;\n            svgRoot.setAttribute('width', width + '');\n            svgRoot.setAttribute('height', height + '');\n        }\n        if (this._backgroundNode) {\n            this._backgroundNode.setAttribute('width', width);\n            this._backgroundNode.setAttribute('height', height);\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    SVGPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this._svgRoot\n            = this._backgroundRoot\n                = this._svgDom\n                    = this._backgroundNode\n                        = this._viewport\n                            = this.storage\n                                = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        var viewportNode = this._viewport;\n        if (viewportNode && viewportNode.parentNode) {\n            viewportNode.parentNode.removeChild(viewportNode);\n        }\n    };\n    SVGPainter.prototype.toDataURL = function () {\n        this.refresh();\n        var svgDom = this._svgDom;\n        var outerHTML = svgDom.outerHTML\n            || (svgDom.parentNode && svgDom.parentNode).innerHTML;\n        var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\n        return 'data:image/svg+xml;charset=UTF-8,' + html;\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        util.logError('In SVG mode painter not support method \"' + method + '\"');\n    };\n}\nexport default SVGPainter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}