{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport TooltipHTMLContent from './TooltipHTMLContent';\nimport TooltipRichContent from './TooltipRichContent';\nimport * as formatUtil from '../../util/format';\nimport * as numberUtil from '../../util/number';\nimport * as graphic from '../../util/graphic';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\nimport * as layoutUtil from '../../util/layout';\nimport Model from '../../model/Model';\nimport * as globalListener from '../axisPointer/globalListener';\nimport * as axisHelper from '../../coord/axisHelper';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model';\nimport ComponentView from '../../view/Component';\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\n\nimport { getECData } from '../../util/innerStore';\nimport { shouldTooltipConfine } from './helper';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\nimport { findEventDispatcher } from '../../util/event';\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\nvar TooltipView = /** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = TooltipView.type;\n    return _this;\n  }\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    this._initGlobalListener();\n    this._keepShow();\n  };\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (!seriesModel) {\n      return;\n    }\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n      this._hide(dispatchAction);\n    }\n  };\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !zrUtil.trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex);\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          if (seriesTooltipResult.markupFragment) {\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\n          }\n          if (seriesTooltipResult.markupText) {\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\n          }\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n    if (zrUtil.isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n    var tooltipModelCascade = [tooltipOpt];\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = zrUtil.clone(subTooltipModel.get('formatterParams') || {});\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n  TooltipView.prototype._showTooltipContent = function (\n  // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n    var nearPointColor = nearPoint.color;\n    if (formatter && zrUtil.isString(formatter)) {\n      var useUTC = tooltipModel.ecModel.get('useUTC');\n      var params0 = zrUtil.isArray(params) ? params[0] : params;\n      var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n      html = formatter;\n      if (isTimeAxis) {\n        html = timeFormat(params0.axisValue, html, useUTC);\n      }\n      html = formatUtil.formatTpl(html, params, true);\n    } else if (zrUtil.isFunction(formatter)) {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n    if (!zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x,\n  // Mouse x\n  y,\n  // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n    var viewHeight = this._api.getHeight();\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n    if (zrUtil.isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (zrUtil.isString(positionExpr) && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  };\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n    this._tooltipContent.dispose();\n    globalListener.unregister('itemTooltip', api);\n  };\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n      if (zrUtil.isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n  return resultModel;\n}\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n  return [x, y];\n}\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 10;\n  var offset = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n    case 'left':\n      x = rect.x - domWidth - gap - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'right':\n      x = rect.x + rectWidth + gap + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n  return [x, y];\n}\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n  if (!model) {\n    return;\n  }\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\nexport default TooltipView;","map":{"version":3,"names":["__extends","zrUtil","env","TooltipHTMLContent","TooltipRichContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","getTooltipRenderMode","preParseFinder","queryReferringComponents","ComponentView","format","timeFormat","getECData","shouldTooltipConfine","normalizeTooltipFormatResult","createTooltipMarkup","buildTooltipMarkup","TooltipMarkupStyleCreator","findEventDispatcher","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","TooltipView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","node","tooltipModel","getComponent","renderMode","get","_renderMode","_tooltipContent","getDom","appendToBody","render","group","removeAll","_tooltipModel","_ecModel","_api","_alwaysShowContent","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","cmptRef","findComponentReference","rect","el","getBoundingRect","clone","applyTransform","transform","offsetX","offsetY","target","position","positionDefault","tooltip","tooltipConfig","name","option","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","tooltipCascadedModel","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","seriesDispatcher_1","cmptDispatcher_1","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","trim","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","getAxisRawValue","marker","makeTooltipMarker","convertToColorString","color","seriesTooltipResult","formatTooltip","markupFragment","markupText","reverse","positionExpr","orderMode","builtMarkupText","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","ecData","dataModel","dataType","tooltipTrigger","params","asyncTicket","getRawIndex","tooltipOpt","isString","content","formatter","tooltipModelCascade","cmpt","componentMainType","componentIndex","subTooltipModel","defaultHtml","formatterParams","html","nearPoint","_getNearestPoint","nearPointColor","useUTC","params0","isArray","isTimeAxis","formatTpl","isFunction","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","viewSize","slice","isObject","boxLayoutPosition","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","dispose","unregister","modelCascade","defaultTooltipOption","resultModel","i","gapH","gapV","size","getOuterSize","min","max","domWidth","domHeight","gap","offset","rectWidth","rectHeight","queryOptionMap","keys","queryResult","useDefault","enableAll","enableNone","models","view","getViewOfComponentModel","traverse","subEl"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport TooltipHTMLContent from './TooltipHTMLContent';\nimport TooltipRichContent from './TooltipRichContent';\nimport * as formatUtil from '../../util/format';\nimport * as numberUtil from '../../util/number';\nimport * as graphic from '../../util/graphic';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\nimport * as layoutUtil from '../../util/layout';\nimport Model from '../../model/Model';\nimport * as globalListener from '../axisPointer/globalListener';\nimport * as axisHelper from '../../coord/axisHelper';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model';\nimport ComponentView from '../../view/Component';\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\n\nimport { getECData } from '../../util/innerStore';\nimport { shouldTooltipConfine } from './helper';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\nimport { findEventDispatcher } from '../../util/event';\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !zrUtil.trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex);\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n\n          if (seriesTooltipResult.markupFragment) {\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\n          }\n\n          if (seriesTooltipResult.markupText) {\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (zrUtil.isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = zrUtil.clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter && zrUtil.isString(formatter)) {\n      var useUTC = tooltipModel.ecModel.get('useUTC');\n      var params0 = zrUtil.isArray(params) ? params[0] : params;\n      var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n      html = formatter;\n\n      if (isTimeAxis) {\n        html = timeFormat(params0.axisValue, html, useUTC);\n      }\n\n      html = formatUtil.formatTpl(html, params, true);\n    } else if (zrUtil.isFunction(formatter)) {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (zrUtil.isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (zrUtil.isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (zrUtil.isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 10;\n  var offset = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKC,MAAM,MAAM,uBAAuB;AAC/C,OAAOC,GAAG,MAAM,sBAAsB;AACtC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,KAAKC,UAAU,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,UAAU,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAC7C,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,OAAO,KAAKC,UAAU,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,KAAKC,cAAc,MAAM,+BAA+B;AAC/D,OAAO,KAAKC,UAAU,MAAM,wBAAwB;AACpD,OAAO,KAAKC,qBAAqB,MAAM,2BAA2B;AAClE,SAASC,oBAAoB,EAAEC,cAAc,EAAEC,wBAAwB,QAAQ,kBAAkB;AACjG,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,MAAM,IAAIC,UAAU,QAAQ,iBAAiB,CAAC,CAAC;;AAExD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,oBAAoB,QAAQ,UAAU;AAC/C,SAASC,4BAA4B,QAAQ,8BAA8B;AAC3E,SAASC,mBAAmB,EAAEC,kBAAkB,EAAEC,yBAAyB,QAAQ,iBAAiB;AACpG,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,IAAIC,IAAI,GAAG1B,MAAM,CAAC0B,IAAI;AACtB,IAAIC,IAAI,GAAG3B,MAAM,CAAC2B,IAAI;AACtB,IAAIC,YAAY,GAAGvB,UAAU,CAACuB,YAAY;AAC1C,IAAIC,SAAS,GAAG,IAAIvB,OAAO,CAACwB,IAAI,CAAC;EAC/BC,KAAK,EAAE;IACLC,CAAC,EAAE,CAAC,CAAC;IACLC,CAAC,EAAE,CAAC,CAAC;IACLC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,IAAIC,WAAW,GACf;AACA,UAAUC,MAAM,EAAE;EAChBtC,SAAS,CAACqC,WAAW,EAAEC,MAAM,CAAC;EAE9B,SAASD,WAAW,GAAG;IACrB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IAEpEF,KAAK,CAACG,IAAI,GAAGL,WAAW,CAACK,IAAI;IAC7B,OAAOH,KAAK;EACd;EAEAF,WAAW,CAACM,SAAS,CAACC,IAAI,GAAG,UAAUC,OAAO,EAAEC,GAAG,EAAE;IACnD,IAAI5C,GAAG,CAAC6C,IAAI,EAAE;MACZ;IACF;IAEA,IAAIC,YAAY,GAAGH,OAAO,CAACI,YAAY,CAAC,SAAS,CAAC;IAClD,IAAIC,UAAU,GAAGF,YAAY,CAACG,GAAG,CAAC,YAAY,CAAC;IAC/C,IAAI,CAACC,WAAW,GAAGtC,oBAAoB,CAACoC,UAAU,CAAC;IACnD,IAAI,CAACG,eAAe,GAAG,IAAI,CAACD,WAAW,KAAK,UAAU,GAAG,IAAIhD,kBAAkB,CAAC0C,GAAG,CAAC,GAAG,IAAI3C,kBAAkB,CAAC2C,GAAG,CAACQ,MAAM,EAAE,EAAER,GAAG,EAAE;MAC/HS,YAAY,EAAEP,YAAY,CAACG,GAAG,CAAC,cAAc,EAAE,IAAI;IACrD,CAAC,CAAC;EACJ,CAAC;EAEDd,WAAW,CAACM,SAAS,CAACa,MAAM,GAAG,UAAUR,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAE;IACnE,IAAI5C,GAAG,CAAC6C,IAAI,EAAE;MACZ;IACF,CAAC,CAAC;;IAGF,IAAI,CAACU,KAAK,CAACC,SAAS,EAAE;IACtB,IAAI,CAACC,aAAa,GAAGX,YAAY;IACjC,IAAI,CAACY,QAAQ,GAAGf,OAAO;IACvB,IAAI,CAACgB,IAAI,GAAGf,GAAG;IACf;AACJ;AACA;AACA;;IAEI,IAAI,CAACgB,kBAAkB,GAAGd,YAAY,CAACG,GAAG,CAAC,mBAAmB,CAAC;IAC/D,IAAIY,cAAc,GAAG,IAAI,CAACV,eAAe;IACzCU,cAAc,CAACC,MAAM,CAAChB,YAAY,CAAC;IACnCe,cAAc,CAACE,YAAY,CAACjB,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC,CAAC;IAE1D,IAAI,CAACe,mBAAmB,EAAE;IAE1B,IAAI,CAACC,SAAS,EAAE;EAClB,CAAC;EAED9B,WAAW,CAACM,SAAS,CAACuB,mBAAmB,GAAG,YAAY;IACtD,IAAIlB,YAAY,GAAG,IAAI,CAACW,aAAa;IACrC,IAAIS,SAAS,GAAGpB,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC;IAC7CxC,cAAc,CAAC0D,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACR,IAAI,EAAElC,IAAI,CAAC,UAAU2C,WAAW,EAAEC,CAAC,EAAEC,cAAc,EAAE;MAC/F;MACA,IAAIJ,SAAS,KAAK,MAAM,EAAE;QACxB,IAAIA,SAAS,CAACK,OAAO,CAACH,WAAW,CAAC,IAAI,CAAC,EAAE;UACvC,IAAI,CAACI,QAAQ,CAACH,CAAC,EAAEC,cAAc,CAAC;QAClC,CAAC,MAAM,IAAIF,WAAW,KAAK,OAAO,EAAE;UAClC,IAAI,CAACK,KAAK,CAACH,cAAc,CAAC;QAC5B;MACF;IACF,CAAC,EAAE,IAAI,CAAC,CAAC;EACX,CAAC;EAEDnC,WAAW,CAACM,SAAS,CAACwB,SAAS,GAAG,YAAY;IAC5C,IAAInB,YAAY,GAAG,IAAI,CAACW,aAAa;IACrC,IAAId,OAAO,GAAG,IAAI,CAACe,QAAQ;IAC3B,IAAId,GAAG,GAAG,IAAI,CAACe,IAAI,CAAC,CAAC;;IAErB,IAAI,IAAI,CAACe,MAAM,IAAI,IAAI,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAAC;IAC/C;IACA;IAAA,GACG7B,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC,KAAK,MAAM,EAAE;MAC3C,IAAI2B,MAAM,GAAG,IAAI;MACjBC,YAAY,CAAC,IAAI,CAACC,qBAAqB,CAAC;MACxC,IAAI,CAACA,qBAAqB,GAAGC,UAAU,CAAC,YAAY;QAClD;QACA;QACA;QACA,CAACnC,GAAG,CAACoC,UAAU,EAAE,IAAIJ,MAAM,CAACK,eAAe,CAACnC,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAE;UACtEb,CAAC,EAAE6C,MAAM,CAACF,MAAM;UAChB1C,CAAC,EAAE4C,MAAM,CAACD,MAAM;UAChBO,cAAc,EAAEN,MAAM,CAACO;QACzB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEhD,WAAW,CAACM,SAAS,CAACwC,eAAe,GAAG,UAAUnC,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,EAAE;IACrF,IAAIA,OAAO,CAACC,IAAI,KAAK,IAAI,CAACC,GAAG,IAAItF,GAAG,CAAC6C,IAAI,EAAE;MACzC;IACF;IAEA,IAAIyB,cAAc,GAAGiB,kBAAkB,CAACH,OAAO,EAAExC,GAAG,CAAC,CAAC,CAAC;;IAEvD,IAAI,CAAC4C,OAAO,GAAG,EAAE,CAAC,CAAC;;IAEnB,IAAIN,cAAc,GAAGE,OAAO,CAACF,cAAc;IAC3C,IAAIO,OAAO,GAAGC,sBAAsB,CAACN,OAAO,EAAEzC,OAAO,EAAEC,GAAG,CAAC;IAE3D,IAAI6C,OAAO,EAAE;MACX,IAAIE,IAAI,GAAGF,OAAO,CAACG,EAAE,CAACC,eAAe,EAAE,CAACC,KAAK,EAAE;MAC/CH,IAAI,CAACI,cAAc,CAACN,OAAO,CAACG,EAAE,CAACI,SAAS,CAAC;MAEzC,IAAI,CAACxB,QAAQ,CAAC;QACZyB,OAAO,EAAEN,IAAI,CAAC5D,CAAC,GAAG4D,IAAI,CAAC1D,KAAK,GAAG,CAAC;QAChCiE,OAAO,EAAEP,IAAI,CAAC3D,CAAC,GAAG2D,IAAI,CAACzD,MAAM,GAAG,CAAC;QACjCiE,MAAM,EAAEV,OAAO,CAACG,EAAE;QAClBQ,QAAQ,EAAEhB,OAAO,CAACgB,QAAQ;QAC1B;QACA;QACAC,eAAe,EAAE;MACnB,CAAC,EAAE/B,cAAc,CAAC;IACpB,CAAC,MAAM,IAAIc,OAAO,CAACkB,OAAO,IAAIlB,OAAO,CAACrD,CAAC,IAAI,IAAI,IAAIqD,OAAO,CAACpD,CAAC,IAAI,IAAI,EAAE;MACpE,IAAI4D,EAAE,GAAGhE,SAAS;MAClBgE,EAAE,CAAC7D,CAAC,GAAGqD,OAAO,CAACrD,CAAC;MAChB6D,EAAE,CAAC5D,CAAC,GAAGoD,OAAO,CAACpD,CAAC;MAChB4D,EAAE,CAAC9B,MAAM,EAAE;MACX5C,SAAS,CAAC0E,EAAE,CAAC,CAACW,aAAa,GAAG;QAC5BC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAErB,OAAO,CAACkB;MAClB,CAAC,CAAC,CAAC;;MAEH,IAAI,CAAC9B,QAAQ,CAAC;QACZyB,OAAO,EAAEb,OAAO,CAACrD,CAAC;QAClBmE,OAAO,EAAEd,OAAO,CAACpD,CAAC;QAClBmE,MAAM,EAAEP;MACV,CAAC,EAAEtB,cAAc,CAAC;IACpB,CAAC,MAAM,IAAIY,cAAc,EAAE;MACzB,IAAI,CAACV,QAAQ,CAAC;QACZyB,OAAO,EAAEb,OAAO,CAACrD,CAAC;QAClBmE,OAAO,EAAEd,OAAO,CAACpD,CAAC;QAClBoE,QAAQ,EAAEhB,OAAO,CAACgB,QAAQ;QAC1BlB,cAAc,EAAEA,cAAc;QAC9BwB,aAAa,EAAEtB,OAAO,CAACsB;MACzB,CAAC,EAAEpC,cAAc,CAAC;IACpB,CAAC,MAAM,IAAIc,OAAO,CAACuB,WAAW,IAAI,IAAI,EAAE;MACtC,IAAI,IAAI,CAACC,oBAAoB,CAAC9D,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,CAAC,EAAE;QAClE;MACF;MAEA,IAAIyB,SAAS,GAAGvG,mBAAmB,CAAC8E,OAAO,EAAEzC,OAAO,CAAC;MACrD,IAAImE,EAAE,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;MAC3B,IAAIC,EAAE,GAAGH,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;MAE3B,IAAID,EAAE,IAAI,IAAI,IAAIE,EAAE,IAAI,IAAI,EAAE;QAC5B,IAAI,CAACxC,QAAQ,CAAC;UACZyB,OAAO,EAAEa,EAAE;UACXZ,OAAO,EAAEc,EAAE;UACXb,MAAM,EAAEU,SAAS,CAACjB,EAAE;UACpBQ,QAAQ,EAAEhB,OAAO,CAACgB,QAAQ;UAC1B;UACA;UACAC,eAAe,EAAE;QACnB,CAAC,EAAE/B,cAAc,CAAC;MACpB;IACF,CAAC,MAAM,IAAIc,OAAO,CAACrD,CAAC,IAAI,IAAI,IAAIqD,OAAO,CAACpD,CAAC,IAAI,IAAI,EAAE;MACjD;MACA;MACAY,GAAG,CAAC0B,cAAc,CAAC;QACjB9B,IAAI,EAAE,mBAAmB;QACzBT,CAAC,EAAEqD,OAAO,CAACrD,CAAC;QACZC,CAAC,EAAEoD,OAAO,CAACpD;MACb,CAAC,CAAC;MAEF,IAAI,CAACwC,QAAQ,CAAC;QACZyB,OAAO,EAAEb,OAAO,CAACrD,CAAC;QAClBmE,OAAO,EAAEd,OAAO,CAACpD,CAAC;QAClBoE,QAAQ,EAAEhB,OAAO,CAACgB,QAAQ;QAC1BD,MAAM,EAAEvD,GAAG,CAACqE,KAAK,EAAE,CAACC,SAAS,CAAC9B,OAAO,CAACrD,CAAC,EAAEqD,OAAO,CAACpD,CAAC,CAAC,CAACmE;MACtD,CAAC,EAAE7B,cAAc,CAAC;IACpB;EACF,CAAC;EAEDnC,WAAW,CAACM,SAAS,CAAC0E,eAAe,GAAG,UAAUrE,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,EAAE;IACrF,IAAIvB,cAAc,GAAG,IAAI,CAACV,eAAe;IAEzC,IAAI,CAAC,IAAI,CAACS,kBAAkB,IAAI,IAAI,CAACH,aAAa,EAAE;MAClDI,cAAc,CAACuD,SAAS,CAAC,IAAI,CAAC3D,aAAa,CAACR,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/D;IAEA,IAAI,CAACyB,MAAM,GAAG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACQ,mBAAmB,GAAG,IAAI;IAE3D,IAAIC,OAAO,CAACC,IAAI,KAAK,IAAI,CAACC,GAAG,EAAE;MAC7B,IAAI,CAACb,KAAK,CAACc,kBAAkB,CAACH,OAAO,EAAExC,GAAG,CAAC,CAAC;IAC9C;EACF,CAAC,CAAC,CAAC;EACH;EACA;;EAGAT,WAAW,CAACM,SAAS,CAACmE,oBAAoB,GAAG,UAAU9D,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,EAAE;IAC1F,IAAIuB,WAAW,GAAGvB,OAAO,CAACuB,WAAW;IACrC,IAAIU,SAAS,GAAGjC,OAAO,CAACiC,SAAS,CAAC,CAAC;;IAEnC,IAAIC,gBAAgB,GAAG3E,OAAO,CAACI,YAAY,CAAC,aAAa,CAAC,CAACuE,gBAAgB;IAE3E,IAAIX,WAAW,IAAI,IAAI,IAAIU,SAAS,IAAI,IAAI,IAAIC,gBAAgB,IAAI,IAAI,EAAE;MACxE;IACF;IAEA,IAAIC,WAAW,GAAG5E,OAAO,CAAC6E,gBAAgB,CAACb,WAAW,CAAC;IAEvD,IAAI,CAACY,WAAW,EAAE;MAChB;IACF;IAEA,IAAIE,IAAI,GAAGF,WAAW,CAACG,OAAO,EAAE;IAChC,IAAIC,oBAAoB,GAAGC,iBAAiB,CAAC,CAACH,IAAI,CAACI,YAAY,CAACR,SAAS,CAAC,EAAEE,WAAW,EAAE,CAACA,WAAW,CAACO,gBAAgB,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,EAAE,IAAI,CAACtE,aAAa,CAAC;IAEzJ,IAAIkE,oBAAoB,CAAC1E,GAAG,CAAC,SAAS,CAAC,KAAK,MAAM,EAAE;MAClD;IACF;IAEAL,GAAG,CAAC0B,cAAc,CAAC;MACjB9B,IAAI,EAAE,mBAAmB;MACzBmE,WAAW,EAAEA,WAAW;MACxBU,SAAS,EAAEA,SAAS;MACpBjB,QAAQ,EAAEhB,OAAO,CAACgB;IACpB,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC;EAEDjE,WAAW,CAACM,SAAS,CAAC+B,QAAQ,GAAG,UAAUH,CAAC,EAAEC,cAAc,EAAE;IAC5D,IAAIsB,EAAE,GAAGvB,CAAC,CAAC8B,MAAM;IACjB,IAAIrD,YAAY,GAAG,IAAI,CAACW,aAAa;IAErC,IAAI,CAACX,YAAY,EAAE;MACjB;IACF,CAAC,CAAC;;IAGF,IAAI,CAAC4B,MAAM,GAAGL,CAAC,CAAC4B,OAAO;IACvB,IAAI,CAACtB,MAAM,GAAGN,CAAC,CAAC6B,OAAO;IACvB,IAAIhB,cAAc,GAAGb,CAAC,CAACa,cAAc;IAErC,IAAIA,cAAc,IAAIA,cAAc,CAAC8C,MAAM,EAAE;MAC3C,IAAI,CAACC,gBAAgB,CAAC/C,cAAc,EAAEb,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAIuB,EAAE,EAAE;MACb,IAAI,CAACT,mBAAmB,GAAG,IAAI;MAC/B,IAAI+C,kBAAkB;MACtB,IAAIC,gBAAgB;MACpB3G,mBAAmB,CAACoE,EAAE,EAAE,UAAUO,MAAM,EAAE;QACxC;QACA,IAAIjF,SAAS,CAACiF,MAAM,CAAC,CAACkB,SAAS,IAAI,IAAI,EAAE;UACvCa,kBAAkB,GAAG/B,MAAM;UAC3B,OAAO,IAAI;QACb,CAAC,CAAC;;QAGF,IAAIjF,SAAS,CAACiF,MAAM,CAAC,CAACI,aAAa,IAAI,IAAI,EAAE;UAC3C4B,gBAAgB,GAAGhC,MAAM;UACzB,OAAO,IAAI;QACb;MACF,CAAC,EAAE,IAAI,CAAC;MAER,IAAI+B,kBAAkB,EAAE;QACtB,IAAI,CAACE,sBAAsB,CAAC/D,CAAC,EAAE6D,kBAAkB,EAAE5D,cAAc,CAAC;MACpE,CAAC,MAAM,IAAI6D,gBAAgB,EAAE;QAC3B,IAAI,CAACE,yBAAyB,CAAChE,CAAC,EAAE8D,gBAAgB,EAAE7D,cAAc,CAAC;MACrE,CAAC,MAAM;QACL,IAAI,CAACG,KAAK,CAACH,cAAc,CAAC;MAC5B;IACF,CAAC,MAAM;MACL,IAAI,CAACa,mBAAmB,GAAG,IAAI;MAE/B,IAAI,CAACV,KAAK,CAACH,cAAc,CAAC;IAC5B;EACF,CAAC;EAEDnC,WAAW,CAACM,SAAS,CAAC6F,WAAW,GAAG,UAAUxF,YAAY,EAAEyF,EAAE,EAAE;IAC9D;IACA;IACA;IACA;IACA,IAAIC,KAAK,GAAG1F,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC;IACzCsF,EAAE,GAAGxI,MAAM,CAAC0B,IAAI,CAAC8G,EAAE,EAAE,IAAI,CAAC;IAC1B1D,YAAY,CAAC,IAAI,CAAC4D,WAAW,CAAC;IAC9BD,KAAK,GAAG,CAAC,GAAG,IAAI,CAACC,WAAW,GAAG1D,UAAU,CAACwD,EAAE,EAAEC,KAAK,CAAC,GAAGD,EAAE,EAAE;EAC7D,CAAC;EAEDpG,WAAW,CAACM,SAAS,CAACwF,gBAAgB,GAAG,UAAU/C,cAAc,EAAEb,CAAC,EAAE;IACpE,IAAI1B,OAAO,GAAG,IAAI,CAACe,QAAQ;IAC3B,IAAIgF,kBAAkB,GAAG,IAAI,CAACjF,aAAa;IAC3C,IAAIsD,KAAK,GAAG,CAAC1C,CAAC,CAAC4B,OAAO,EAAE5B,CAAC,CAAC6B,OAAO,CAAC;IAClC,IAAIyC,kBAAkB,GAAGf,iBAAiB,CAAC,CAACvD,CAAC,CAACqC,aAAa,CAAC,EAAEgC,kBAAkB,CAAC;IACjF,IAAI1F,UAAU,GAAG,IAAI,CAACE,WAAW;IACjC,IAAI0F,YAAY,GAAG,EAAE;IACrB,IAAIC,aAAa,GAAGxH,mBAAmB,CAAC,SAAS,EAAE;MACjDyH,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIC,mBAAmB,GAAG,EAAE;IAC5B,IAAIC,kBAAkB,GAAG,IAAI1H,yBAAyB,EAAE;IACxDG,IAAI,CAACwD,cAAc,EAAE,UAAUgE,YAAY,EAAE;MAC3CxH,IAAI,CAACwH,YAAY,CAACC,UAAU,EAAE,UAAUC,QAAQ,EAAE;QAChD,IAAIC,SAAS,GAAG1G,OAAO,CAACI,YAAY,CAACqG,QAAQ,CAACE,OAAO,GAAG,MAAM,EAAEF,QAAQ,CAACG,SAAS,CAAC;QACnF,IAAIC,SAAS,GAAGJ,QAAQ,CAACK,KAAK;QAE9B,IAAI,CAACJ,SAAS,IAAIG,SAAS,IAAI,IAAI,EAAE;UACnC;QACF;QAEA,IAAIE,cAAc,GAAG/I,qBAAqB,CAACgJ,aAAa,CAACH,SAAS,EAAEH,SAAS,CAACO,IAAI,EAAEjH,OAAO,EAAEyG,QAAQ,CAACS,iBAAiB,EAAET,QAAQ,CAACU,aAAa,CAAC;QAChJ,IAAIC,iBAAiB,GAAG1I,mBAAmB,CAAC,SAAS,EAAE;UACrD2I,MAAM,EAAEN,cAAc;UACtBX,QAAQ,EAAE,CAAChJ,MAAM,CAACkK,IAAI,CAACP,cAAc,CAAC;UACtCQ,UAAU,EAAE,IAAI;UAChBpB,MAAM,EAAE;QACV,CAAC,CAAC;QACFD,aAAa,CAACC,MAAM,CAACqB,IAAI,CAACJ,iBAAiB,CAAC;QAC5ChK,MAAM,CAAC2B,IAAI,CAAC0H,QAAQ,CAACS,iBAAiB,EAAE,UAAUO,OAAO,EAAE;UACzD,IAAIC,MAAM,GAAG1H,OAAO,CAAC6E,gBAAgB,CAAC4C,OAAO,CAACzD,WAAW,CAAC;UAC1D,IAAIU,SAAS,GAAG+C,OAAO,CAACE,eAAe;UACvC,IAAIC,QAAQ,GAAGF,MAAM,CAACG,aAAa,CAACnD,SAAS,CAAC;UAC9CkD,QAAQ,CAACjB,OAAO,GAAGF,QAAQ,CAACE,OAAO;UACnCiB,QAAQ,CAAChB,SAAS,GAAGH,QAAQ,CAACG,SAAS;UACvCgB,QAAQ,CAACE,QAAQ,GAAGrB,QAAQ,CAACqB,QAAQ;UACrCF,QAAQ,CAACG,MAAM,GAAGtB,QAAQ,CAACsB,MAAM;UACjCH,QAAQ,CAACf,SAAS,GAAG9I,UAAU,CAACiK,eAAe,CAACtB,SAAS,CAACO,IAAI,EAAE;YAC9DH,KAAK,EAAED;UACT,CAAC,CAAC;UACFe,QAAQ,CAACb,cAAc,GAAGA,cAAc,CAAC,CAAC;UAC1C;;UAEAa,QAAQ,CAACK,MAAM,GAAG3B,kBAAkB,CAAC4B,iBAAiB,CAAC,MAAM,EAAE1K,UAAU,CAAC2K,oBAAoB,CAACP,QAAQ,CAACQ,KAAK,CAAC,EAAE/H,UAAU,CAAC;UAC3H,IAAIgI,mBAAmB,GAAG5J,4BAA4B,CAACiJ,MAAM,CAACY,aAAa,CAAC5D,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;UAEnG,IAAI2D,mBAAmB,CAACE,cAAc,EAAE;YACtCnB,iBAAiB,CAACjB,MAAM,CAACqB,IAAI,CAACa,mBAAmB,CAACE,cAAc,CAAC;UACnE;UAEA,IAAIF,mBAAmB,CAACG,UAAU,EAAE;YAClCnC,mBAAmB,CAACmB,IAAI,CAACa,mBAAmB,CAACG,UAAU,CAAC;UAC1D;UAEAvC,YAAY,CAACuB,IAAI,CAACI,QAAQ,CAAC;QAC7B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,CAAC;IACJ;;IAEA1B,aAAa,CAACC,MAAM,CAACsC,OAAO,EAAE;IAC9BpC,mBAAmB,CAACoC,OAAO,EAAE;IAC7B,IAAIC,YAAY,GAAGhH,CAAC,CAAC+B,QAAQ;IAC7B,IAAIkF,SAAS,GAAG3C,kBAAkB,CAAC1F,GAAG,CAAC,OAAO,CAAC;IAC/C,IAAIsI,eAAe,GAAGjK,kBAAkB,CAACuH,aAAa,EAAEI,kBAAkB,EAAEjG,UAAU,EAAEsI,SAAS,EAAE3I,OAAO,CAACM,GAAG,CAAC,QAAQ,CAAC,EAAE0F,kBAAkB,CAAC1F,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9JsI,eAAe,IAAIvC,mBAAmB,CAACwC,OAAO,CAACD,eAAe,CAAC;IAC/D,IAAIE,UAAU,GAAGzI,UAAU,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO;IAC7D,IAAI0I,aAAa,GAAG1C,mBAAmB,CAAC2C,IAAI,CAACF,UAAU,CAAC;IAExD,IAAI,CAACnD,WAAW,CAACK,kBAAkB,EAAE,YAAY;MAC/C,IAAI,IAAI,CAACiD,8BAA8B,CAAC1G,cAAc,CAAC,EAAE;QACvD,IAAI,CAAC2G,eAAe,CAAClD,kBAAkB,EAAE0C,YAAY,EAAEtE,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC5D,eAAe,EAAEyF,YAAY,CAAC;MAChH,CAAC,MAAM;QACL,IAAI,CAACkD,mBAAmB,CAACnD,kBAAkB,EAAE+C,aAAa,EAAE9C,YAAY,EAAEmD,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,EAAEjF,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEsE,YAAY,EAAE,IAAI,EAAEpC,kBAAkB,CAAC;MAC3J;IACF,CAAC,CAAC,CAAC,CAAC;IACJ;EAEF,CAAC;;EAED9G,WAAW,CAACM,SAAS,CAAC2F,sBAAsB,GAAG,UAAU/D,CAAC,EAAE4H,UAAU,EAAE3H,cAAc,EAAE;IACtF,IAAI3B,OAAO,GAAG,IAAI,CAACe,QAAQ;IAC3B,IAAIwI,MAAM,GAAGhL,SAAS,CAAC+K,UAAU,CAAC,CAAC,CAAC;IACpC;IACA;;IAEA,IAAItF,WAAW,GAAGuF,MAAM,CAACvF,WAAW;IACpC,IAAIY,WAAW,GAAG5E,OAAO,CAAC6E,gBAAgB,CAACb,WAAW,CAAC,CAAC,CAAC;;IAEzD,IAAIwF,SAAS,GAAGD,MAAM,CAACC,SAAS,IAAI5E,WAAW;IAC/C,IAAIF,SAAS,GAAG6E,MAAM,CAAC7E,SAAS;IAChC,IAAI+E,QAAQ,GAAGF,MAAM,CAACE,QAAQ;IAC9B,IAAI3E,IAAI,GAAG0E,SAAS,CAACzE,OAAO,CAAC0E,QAAQ,CAAC;IACtC,IAAIpJ,UAAU,GAAG,IAAI,CAACE,WAAW;IACjC,IAAImD,eAAe,GAAGhC,CAAC,CAACgC,eAAe;IACvC,IAAIvD,YAAY,GAAG8E,iBAAiB,CAAC,CAACH,IAAI,CAACI,YAAY,CAACR,SAAS,CAAC,EAAE8E,SAAS,EAAE5E,WAAW,IAAI,CAACA,WAAW,CAACO,gBAAgB,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,EAAE,IAAI,CAACtE,aAAa,EAAE4C,eAAe,GAAG;MAC/KD,QAAQ,EAAEC;IACZ,CAAC,GAAG,IAAI,CAAC;IACT,IAAIgG,cAAc,GAAGvJ,YAAY,CAACG,GAAG,CAAC,SAAS,CAAC;IAEhD,IAAIoJ,cAAc,IAAI,IAAI,IAAIA,cAAc,KAAK,MAAM,EAAE;MACvD;IACF;IAEA,IAAIC,MAAM,GAAGH,SAAS,CAAC3B,aAAa,CAACnD,SAAS,EAAE+E,QAAQ,CAAC;IACzD,IAAInD,kBAAkB,GAAG,IAAI1H,yBAAyB,EAAE,CAAC,CAAC;IAC1D;;IAEA+K,MAAM,CAAC1B,MAAM,GAAG3B,kBAAkB,CAAC4B,iBAAiB,CAAC,MAAM,EAAE1K,UAAU,CAAC2K,oBAAoB,CAACwB,MAAM,CAACvB,KAAK,CAAC,EAAE/H,UAAU,CAAC;IACvH,IAAIgI,mBAAmB,GAAG5J,4BAA4B,CAAC+K,SAAS,CAAClB,aAAa,CAAC5D,SAAS,EAAE,KAAK,EAAE+E,QAAQ,CAAC,CAAC;IAC3G,IAAId,SAAS,GAAGxI,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;IACzC,IAAIkI,UAAU,GAAGH,mBAAmB,CAACE,cAAc,GAAG5J,kBAAkB,CAAC0J,mBAAmB,CAACE,cAAc,EAAEjC,kBAAkB,EAAEjG,UAAU,EAAEsI,SAAS,EAAE3I,OAAO,CAACM,GAAG,CAAC,QAAQ,CAAC,EAAEH,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG+H,mBAAmB,CAACG,UAAU;IAC9O,IAAIoB,WAAW,GAAG,OAAO,GAAGJ,SAAS,CAAC3F,IAAI,GAAG,GAAG,GAAGa,SAAS;IAE5D,IAAI,CAACiB,WAAW,CAACxF,YAAY,EAAE,YAAY;MACzC,IAAI,CAACgJ,mBAAmB,CAAChJ,YAAY,EAAEqI,UAAU,EAAEmB,MAAM,EAAEC,WAAW,EAAElI,CAAC,CAAC4B,OAAO,EAAE5B,CAAC,CAAC6B,OAAO,EAAE7B,CAAC,CAAC+B,QAAQ,EAAE/B,CAAC,CAAC8B,MAAM,EAAE8C,kBAAkB,CAAC;IACzI,CAAC,CAAC,CAAC,CAAC;IACJ;;IAGA3E,cAAc,CAAC;MACb9B,IAAI,EAAE,SAAS;MACf8H,eAAe,EAAEjD,SAAS;MAC1BA,SAAS,EAAEI,IAAI,CAAC+E,WAAW,CAACnF,SAAS,CAAC;MACtCV,WAAW,EAAEA,WAAW;MACxBtB,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ,CAAC;EAEDnD,WAAW,CAACM,SAAS,CAAC4F,yBAAyB,GAAG,UAAUhE,CAAC,EAAEuB,EAAE,EAAEtB,cAAc,EAAE;IACjF,IAAI4H,MAAM,GAAGhL,SAAS,CAAC0E,EAAE,CAAC;IAC1B,IAAIW,aAAa,GAAG2F,MAAM,CAAC3F,aAAa;IACxC,IAAIkG,UAAU,GAAGlG,aAAa,CAACE,MAAM,IAAI,CAAC,CAAC;IAE3C,IAAI1G,MAAM,CAAC2M,QAAQ,CAACD,UAAU,CAAC,EAAE;MAC/B,IAAIE,OAAO,GAAGF,UAAU;MACxBA,UAAU,GAAG;QACXE,OAAO,EAAEA,OAAO;QAChB;QACAC,SAAS,EAAED;MACb,CAAC;IACH;IAEA,IAAIE,mBAAmB,GAAG,CAACJ,UAAU,CAAC;IAEtC,IAAIK,IAAI,GAAG,IAAI,CAACpJ,QAAQ,CAACX,YAAY,CAACmJ,MAAM,CAACa,iBAAiB,EAAEb,MAAM,CAACc,cAAc,CAAC;IAEtF,IAAIF,IAAI,EAAE;MACRD,mBAAmB,CAAC1C,IAAI,CAAC2C,IAAI,CAAC;IAChC,CAAC,CAAC;IACF;IACA;;IAGAD,mBAAmB,CAAC1C,IAAI,CAAC;MACvByC,SAAS,EAAEH,UAAU,CAACE;IACxB,CAAC,CAAC;IACF,IAAItG,eAAe,GAAGhC,CAAC,CAACgC,eAAe;IACvC,IAAI4G,eAAe,GAAGrF,iBAAiB,CAACiF,mBAAmB,EAAE,IAAI,CAACpJ,aAAa,EAAE4C,eAAe,GAAG;MACjGD,QAAQ,EAAEC;IACZ,CAAC,GAAG,IAAI,CAAC;IACT,IAAI6G,WAAW,GAAGD,eAAe,CAAChK,GAAG,CAAC,SAAS,CAAC;IAChD,IAAIsJ,WAAW,GAAGR,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;;IAEtC,IAAI/C,kBAAkB,GAAG,IAAI1H,yBAAyB,EAAE,CAAC,CAAC;IAC1D;IACA;;IAEA,IAAI,CAAC+G,WAAW,CAAC2E,eAAe,EAAE,YAAY;MAC5C;MACA;MACA,IAAIE,eAAe,GAAGpN,MAAM,CAAC+F,KAAK,CAACmH,eAAe,CAAChK,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;MAEhF,IAAI,CAAC6I,mBAAmB,CAACmB,eAAe,EAAEC,WAAW,EAAEC,eAAe,EAAEZ,WAAW,EAAElI,CAAC,CAAC4B,OAAO,EAAE5B,CAAC,CAAC6B,OAAO,EAAE7B,CAAC,CAAC+B,QAAQ,EAAER,EAAE,EAAEqD,kBAAkB,CAAC;IAChJ,CAAC,CAAC,CAAC,CAAC;;IAGJ3E,cAAc,CAAC;MACb9B,IAAI,EAAE,SAAS;MACf6C,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ,CAAC;EAEDnD,WAAW,CAACM,SAAS,CAACqJ,mBAAmB,GAAG;EAAW;EACvD;EACAhJ,YAAY,EAAEoK,WAAW,EAAEZ,MAAM,EAAEC,WAAW,EAAExK,CAAC,EAAEC,CAAC,EAAEqJ,YAAY,EAAEzF,EAAE,EAAEqD,kBAAkB,EAAE;IAC1F;IACA,IAAI,CAACzD,OAAO,GAAG,EAAE;IAEjB,IAAI,CAAC1C,YAAY,CAACG,GAAG,CAAC,aAAa,CAAC,IAAI,CAACH,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,EAAE;MACjE;IACF;IAEA,IAAIY,cAAc,GAAG,IAAI,CAACV,eAAe;IACzC,IAAIyJ,SAAS,GAAG9J,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC;IAC7CoI,YAAY,GAAGA,YAAY,IAAIvI,YAAY,CAACG,GAAG,CAAC,UAAU,CAAC;IAC3D,IAAImK,IAAI,GAAGF,WAAW;IAEtB,IAAIG,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAACvL,CAAC,EAAEC,CAAC,CAAC,EAAEsK,MAAM,EAAExJ,YAAY,CAACG,GAAG,CAAC,SAAS,CAAC,EAAEH,YAAY,CAACG,GAAG,CAAC,aAAa,CAAC,CAAC;IAEnH,IAAIsK,cAAc,GAAGF,SAAS,CAACtC,KAAK;IAEpC,IAAI6B,SAAS,IAAI7M,MAAM,CAAC2M,QAAQ,CAACE,SAAS,CAAC,EAAE;MAC3C,IAAIY,MAAM,GAAG1K,YAAY,CAACH,OAAO,CAACM,GAAG,CAAC,QAAQ,CAAC;MAC/C,IAAIwK,OAAO,GAAG1N,MAAM,CAAC2N,OAAO,CAACpB,MAAM,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;MACzD,IAAIqB,UAAU,GAAGF,OAAO,IAAIA,OAAO,CAAChD,QAAQ,IAAIgD,OAAO,CAAChD,QAAQ,CAAClG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;MACrF6I,IAAI,GAAGR,SAAS;MAEhB,IAAIe,UAAU,EAAE;QACdP,IAAI,GAAGnM,UAAU,CAACwM,OAAO,CAACjE,SAAS,EAAE4D,IAAI,EAAEI,MAAM,CAAC;MACpD;MAEAJ,IAAI,GAAGjN,UAAU,CAACyN,SAAS,CAACR,IAAI,EAAEd,MAAM,EAAE,IAAI,CAAC;IACjD,CAAC,MAAM,IAAIvM,MAAM,CAAC8N,UAAU,CAACjB,SAAS,CAAC,EAAE;MACvC,IAAIkB,QAAQ,GAAGrM,IAAI,CAAC,UAAUsM,QAAQ,EAAEX,IAAI,EAAE;QAC5C,IAAIW,QAAQ,KAAK,IAAI,CAACvI,OAAO,EAAE;UAC7B3B,cAAc,CAACmK,UAAU,CAACZ,IAAI,EAAEnE,kBAAkB,EAAEnG,YAAY,EAAEyK,cAAc,EAAElC,YAAY,CAAC;UAE/F,IAAI,CAACQ,eAAe,CAAC/I,YAAY,EAAEuI,YAAY,EAAEtJ,CAAC,EAAEC,CAAC,EAAE6B,cAAc,EAAEyI,MAAM,EAAE1G,EAAE,CAAC;QACpF;MACF,CAAC,EAAE,IAAI,CAAC;MACR,IAAI,CAACJ,OAAO,GAAG+G,WAAW;MAC1Ba,IAAI,GAAGR,SAAS,CAACN,MAAM,EAAEC,WAAW,EAAEuB,QAAQ,CAAC;IACjD;IAEAjK,cAAc,CAACmK,UAAU,CAACZ,IAAI,EAAEnE,kBAAkB,EAAEnG,YAAY,EAAEyK,cAAc,EAAElC,YAAY,CAAC;IAC/FxH,cAAc,CAACoK,IAAI,CAACnL,YAAY,EAAEyK,cAAc,CAAC;IAEjD,IAAI,CAAC1B,eAAe,CAAC/I,YAAY,EAAEuI,YAAY,EAAEtJ,CAAC,EAAEC,CAAC,EAAE6B,cAAc,EAAEyI,MAAM,EAAE1G,EAAE,CAAC;EACpF,CAAC;EAEDzD,WAAW,CAACM,SAAS,CAAC6K,gBAAgB,GAAG,UAAUvG,KAAK,EAAEmH,iBAAiB,EAAEC,OAAO,EAAEC,WAAW,EAAE;IACjG,IAAID,OAAO,KAAK,MAAM,IAAIpO,MAAM,CAAC2N,OAAO,CAACQ,iBAAiB,CAAC,EAAE;MAC3D,OAAO;QACLnD,KAAK,EAAEqD,WAAW,KAAK,IAAI,CAAClL,WAAW,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;MACtE,CAAC;IACH;IAEA,IAAI,CAACnD,MAAM,CAAC2N,OAAO,CAACQ,iBAAiB,CAAC,EAAE;MACtC,OAAO;QACLnD,KAAK,EAAEqD,WAAW,IAAIF,iBAAiB,CAACnD,KAAK,IAAImD,iBAAiB,CAACE;MACrE,CAAC;IACH;EACF,CAAC;EAEDjM,WAAW,CAACM,SAAS,CAACoJ,eAAe,GAAG,UAAU/I,YAAY,EAAEuI,YAAY,EAAEtJ,CAAC;EAAE;EACjFC,CAAC;EAAE;EACH2K,OAAO,EAAEL,MAAM,EAAE1G,EAAE,EAAE;IACnB,IAAIyI,SAAS,GAAG,IAAI,CAAC1K,IAAI,CAAC2K,QAAQ,EAAE;IAEpC,IAAIC,UAAU,GAAG,IAAI,CAAC5K,IAAI,CAAC6K,SAAS,EAAE;IAEtCnD,YAAY,GAAGA,YAAY,IAAIvI,YAAY,CAACG,GAAG,CAAC,UAAU,CAAC;IAC3D,IAAIwL,WAAW,GAAG9B,OAAO,CAAC+B,OAAO,EAAE;IACnC,IAAIC,KAAK,GAAG7L,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;IACrC,IAAI2L,MAAM,GAAG9L,YAAY,CAACG,GAAG,CAAC,eAAe,CAAC;IAC9C,IAAI0C,IAAI,GAAGC,EAAE,IAAIA,EAAE,CAACC,eAAe,EAAE,CAACC,KAAK,EAAE;IAC7CF,EAAE,IAAID,IAAI,CAACI,cAAc,CAACH,EAAE,CAACI,SAAS,CAAC;IAEvC,IAAIjG,MAAM,CAAC8N,UAAU,CAACxC,YAAY,CAAC,EAAE;MACnC;MACAA,YAAY,GAAGA,YAAY,CAAC,CAACtJ,CAAC,EAAEC,CAAC,CAAC,EAAEsK,MAAM,EAAEK,OAAO,CAAC/G,EAAE,EAAED,IAAI,EAAE;QAC5DkJ,QAAQ,EAAE,CAACR,SAAS,EAAEE,UAAU,CAAC;QACjCE,WAAW,EAAEA,WAAW,CAACK,KAAK;MAChC,CAAC,CAAC;IACJ;IAEA,IAAI/O,MAAM,CAAC2N,OAAO,CAACrC,YAAY,CAAC,EAAE;MAChCtJ,CAAC,GAAGJ,YAAY,CAAC0J,YAAY,CAAC,CAAC,CAAC,EAAEgD,SAAS,CAAC;MAC5CrM,CAAC,GAAGL,YAAY,CAAC0J,YAAY,CAAC,CAAC,CAAC,EAAEkD,UAAU,CAAC;IAC/C,CAAC,MAAM,IAAIxO,MAAM,CAACgP,QAAQ,CAAC1D,YAAY,CAAC,EAAE;MACxC,IAAI2D,iBAAiB,GAAG3D,YAAY;MACpC2D,iBAAiB,CAAC/M,KAAK,GAAGwM,WAAW,CAAC,CAAC,CAAC;MACxCO,iBAAiB,CAAC9M,MAAM,GAAGuM,WAAW,CAAC,CAAC,CAAC;MACzC,IAAIQ,UAAU,GAAG1O,UAAU,CAAC2O,aAAa,CAACF,iBAAiB,EAAE;QAC3D/M,KAAK,EAAEoM,SAAS;QAChBnM,MAAM,EAAEqM;MACV,CAAC,CAAC;MACFxM,CAAC,GAAGkN,UAAU,CAAClN,CAAC;MAChBC,CAAC,GAAGiN,UAAU,CAACjN,CAAC;MAChB2M,KAAK,GAAG,IAAI,CAAC,CAAC;MACd;;MAEAC,MAAM,GAAG,IAAI;IACf,CAAC,CAAC;IAAA,KACG,IAAI7O,MAAM,CAAC2M,QAAQ,CAACrB,YAAY,CAAC,IAAIzF,EAAE,EAAE;MAC1C,IAAIuJ,GAAG,GAAGC,mBAAmB,CAAC/D,YAAY,EAAE1F,IAAI,EAAE8I,WAAW,CAAC;MAC9D1M,CAAC,GAAGoN,GAAG,CAAC,CAAC,CAAC;MACVnN,CAAC,GAAGmN,GAAG,CAAC,CAAC,CAAC;IACZ,CAAC,MAAM;MACL,IAAIA,GAAG,GAAGE,oBAAoB,CAACtN,CAAC,EAAEC,CAAC,EAAE2K,OAAO,EAAE0B,SAAS,EAAEE,UAAU,EAAEI,KAAK,GAAG,IAAI,GAAG,EAAE,EAAEC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;MAC3G7M,CAAC,GAAGoN,GAAG,CAAC,CAAC,CAAC;MACVnN,CAAC,GAAGmN,GAAG,CAAC,CAAC,CAAC;IACZ;IAEFR,KAAK,KAAK5M,CAAC,IAAIuN,aAAa,CAACX,KAAK,CAAC,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGE,KAAK,KAAK,OAAO,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAClGG,MAAM,KAAK5M,CAAC,IAAIsN,aAAa,CAACV,MAAM,CAAC,GAAGH,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGG,MAAM,KAAK,QAAQ,GAAGH,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEtG,IAAItN,oBAAoB,CAAC2B,YAAY,CAAC,EAAE;MACtC,IAAIqM,GAAG,GAAGI,sBAAsB,CAACxN,CAAC,EAAEC,CAAC,EAAE2K,OAAO,EAAE0B,SAAS,EAAEE,UAAU,CAAC;MACtExM,CAAC,GAAGoN,GAAG,CAAC,CAAC,CAAC;MACVnN,CAAC,GAAGmN,GAAG,CAAC,CAAC,CAAC;IACZ;IAEAxC,OAAO,CAAC6C,MAAM,CAACzN,CAAC,EAAEC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC;EACH;;EAGAG,WAAW,CAACM,SAAS,CAACmJ,8BAA8B,GAAG,UAAU1G,cAAc,EAAE;IAC/E,IAAIuK,YAAY,GAAG,IAAI,CAACtK,mBAAmB;IAC3C,IAAIuK,iBAAiB,GAAG,CAAC,CAACD,YAAY,IAAIA,YAAY,CAACzH,MAAM,KAAK9C,cAAc,CAAC8C,MAAM;IACvF0H,iBAAiB,IAAIhO,IAAI,CAAC+N,YAAY,EAAE,UAAUE,gBAAgB,EAAEC,aAAa,EAAE;MACjF,IAAIC,cAAc,GAAGF,gBAAgB,CAACxG,UAAU,IAAI,EAAE;MACtD,IAAI2G,gBAAgB,GAAG5K,cAAc,CAAC0K,aAAa,CAAC,IAAI,CAAC,CAAC;MAC1D,IAAIG,cAAc,GAAGD,gBAAgB,CAAC3G,UAAU,IAAI,EAAE;MACtDuG,iBAAiB,GAAGA,iBAAiB,IAAIG,cAAc,CAAC7H,MAAM,KAAK+H,cAAc,CAAC/H,MAAM;MACxF0H,iBAAiB,IAAIhO,IAAI,CAACmO,cAAc,EAAE,UAAUG,QAAQ,EAAEC,SAAS,EAAE;QACvE,IAAIC,QAAQ,GAAGH,cAAc,CAACE,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAIE,WAAW,GAAGH,QAAQ,CAACnG,iBAAiB,IAAI,EAAE;QAClD,IAAIuG,UAAU,GAAGF,QAAQ,CAACrG,iBAAiB,IAAI,EAAE;QACjD6F,iBAAiB,GAAGA,iBAAiB,IAAIM,QAAQ,CAACvG,KAAK,KAAKyG,QAAQ,CAACzG,KAAK,IAAIuG,QAAQ,CAACvF,QAAQ,KAAKyF,QAAQ,CAACzF,QAAQ,IAAIuF,QAAQ,CAACtF,MAAM,KAAKwF,QAAQ,CAACxF,MAAM,IAAIyF,WAAW,CAACnI,MAAM,KAAKoI,UAAU,CAACpI,MAAM;QACxM0H,iBAAiB,IAAIhO,IAAI,CAACyO,WAAW,EAAE,UAAUE,WAAW,EAAEC,CAAC,EAAE;UAC/D,IAAIC,UAAU,GAAGH,UAAU,CAACE,CAAC,CAAC;UAC9BZ,iBAAiB,GAAGA,iBAAiB,IAAIW,WAAW,CAAC1J,WAAW,KAAK4J,UAAU,CAAC5J,WAAW,IAAI0J,WAAW,CAAChJ,SAAS,KAAKkJ,UAAU,CAAClJ,SAAS;QAC/I,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAAClC,mBAAmB,GAAGD,cAAc;IACzC,OAAO,CAAC,CAACwK,iBAAiB;EAC5B,CAAC;EAEDvN,WAAW,CAACM,SAAS,CAACgC,KAAK,GAAG,UAAUH,cAAc,EAAE;IACtD;IACA;IACA;IACA;IACA,IAAI,CAACa,mBAAmB,GAAG,IAAI;IAC/Bb,cAAc,CAAC;MACb9B,IAAI,EAAE,SAAS;MACf6C,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ,CAAC;EAEDnD,WAAW,CAACM,SAAS,CAAC+N,OAAO,GAAG,UAAU7N,OAAO,EAAEC,GAAG,EAAE;IACtD,IAAI5C,GAAG,CAAC6C,IAAI,EAAE;MACZ;IACF;IAEA,IAAI,CAACM,eAAe,CAACqN,OAAO,EAAE;IAE9B/P,cAAc,CAACgQ,UAAU,CAAC,aAAa,EAAE7N,GAAG,CAAC;EAC/C,CAAC;EAEDT,WAAW,CAACK,IAAI,GAAG,SAAS;EAC5B,OAAOL,WAAW;AACpB,CAAC,CAACpB,aAAa,CAAC;AAChB;AACA;AACA;;AAGA,SAAS6G,iBAAiB,CAAC8I,YAAY,EAAEhI,kBAAkB,EAAEiI,oBAAoB,EAAE;EACjF;EACA,IAAIhO,OAAO,GAAG+F,kBAAkB,CAAC/F,OAAO;EACxC,IAAIiO,WAAW;EAEf,IAAID,oBAAoB,EAAE;IACxBC,WAAW,GAAG,IAAIpQ,KAAK,CAACmQ,oBAAoB,EAAEhO,OAAO,EAAEA,OAAO,CAAC;IAC/DiO,WAAW,GAAG,IAAIpQ,KAAK,CAACkI,kBAAkB,CAACjC,MAAM,EAAEmK,WAAW,EAAEjO,OAAO,CAAC;EAC1E,CAAC,MAAM;IACLiO,WAAW,GAAGlI,kBAAkB;EAClC;EAEA,KAAK,IAAImI,CAAC,GAAGH,YAAY,CAAC1I,MAAM,GAAG,CAAC,EAAE6I,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACjD,IAAIpE,UAAU,GAAGiE,YAAY,CAACG,CAAC,CAAC;IAEhC,IAAIpE,UAAU,EAAE;MACd,IAAIA,UAAU,YAAYjM,KAAK,EAAE;QAC/BiM,UAAU,GAAGA,UAAU,CAACxJ,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;MAC9C,CAAC,CAAC;MACF;MACA;MACA;MACA;;MAGA,IAAIlD,MAAM,CAAC2M,QAAQ,CAACD,UAAU,CAAC,EAAE;QAC/BA,UAAU,GAAG;UACXG,SAAS,EAAEH;QACb,CAAC;MACH;MAEA,IAAIA,UAAU,EAAE;QACdmE,WAAW,GAAG,IAAIpQ,KAAK,CAACiM,UAAU,EAAEmE,WAAW,EAAEjO,OAAO,CAAC;MAC3D;IACF;EACF;EAEA,OAAOiO,WAAW;AACpB;AAEA,SAASrL,kBAAkB,CAACH,OAAO,EAAExC,GAAG,EAAE;EACxC,OAAOwC,OAAO,CAACd,cAAc,IAAIvE,MAAM,CAAC0B,IAAI,CAACmB,GAAG,CAAC0B,cAAc,EAAE1B,GAAG,CAAC;AACvE;AAEA,SAASyM,oBAAoB,CAACtN,CAAC,EAAEC,CAAC,EAAE2K,OAAO,EAAE0B,SAAS,EAAEE,UAAU,EAAEuC,IAAI,EAAEC,IAAI,EAAE;EAC9E,IAAIC,IAAI,GAAGrE,OAAO,CAACsE,YAAY,EAAE;EACjC,IAAIhP,KAAK,GAAG+O,IAAI,CAAC/O,KAAK;EACtB,IAAIC,MAAM,GAAG8O,IAAI,CAAC9O,MAAM;EAExB,IAAI4O,IAAI,IAAI,IAAI,EAAE;IAChB;IACA;IACA;IACA;IACA,IAAI/O,CAAC,GAAGE,KAAK,GAAG6O,IAAI,GAAG,CAAC,GAAGzC,SAAS,EAAE;MACpCtM,CAAC,IAAIE,KAAK,GAAG6O,IAAI;IACnB,CAAC,MAAM;MACL/O,CAAC,IAAI+O,IAAI;IACX;EACF;EAEA,IAAIC,IAAI,IAAI,IAAI,EAAE;IAChB,IAAI/O,CAAC,GAAGE,MAAM,GAAG6O,IAAI,GAAGxC,UAAU,EAAE;MAClCvM,CAAC,IAAIE,MAAM,GAAG6O,IAAI;IACpB,CAAC,MAAM;MACL/O,CAAC,IAAI+O,IAAI;IACX;EACF;EAEA,OAAO,CAAChP,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,SAASuN,sBAAsB,CAACxN,CAAC,EAAEC,CAAC,EAAE2K,OAAO,EAAE0B,SAAS,EAAEE,UAAU,EAAE;EACpE,IAAIyC,IAAI,GAAGrE,OAAO,CAACsE,YAAY,EAAE;EACjC,IAAIhP,KAAK,GAAG+O,IAAI,CAAC/O,KAAK;EACtB,IAAIC,MAAM,GAAG8O,IAAI,CAAC9O,MAAM;EACxBH,CAAC,GAAGgK,IAAI,CAACmF,GAAG,CAACnP,CAAC,GAAGE,KAAK,EAAEoM,SAAS,CAAC,GAAGpM,KAAK;EAC1CD,CAAC,GAAG+J,IAAI,CAACmF,GAAG,CAAClP,CAAC,GAAGE,MAAM,EAAEqM,UAAU,CAAC,GAAGrM,MAAM;EAC7CH,CAAC,GAAGgK,IAAI,CAACoF,GAAG,CAACpP,CAAC,EAAE,CAAC,CAAC;EAClBC,CAAC,GAAG+J,IAAI,CAACoF,GAAG,CAACnP,CAAC,EAAE,CAAC,CAAC;EAClB,OAAO,CAACD,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,SAASoN,mBAAmB,CAAChJ,QAAQ,EAAET,IAAI,EAAE8I,WAAW,EAAE;EACxD,IAAI2C,QAAQ,GAAG3C,WAAW,CAAC,CAAC,CAAC;EAC7B,IAAI4C,SAAS,GAAG5C,WAAW,CAAC,CAAC,CAAC;EAC9B,IAAI6C,GAAG,GAAG,EAAE;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIxP,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIwP,SAAS,GAAG7L,IAAI,CAAC1D,KAAK;EAC1B,IAAIwP,UAAU,GAAG9L,IAAI,CAACzD,MAAM;EAE5B,QAAQkE,QAAQ;IACd,KAAK,QAAQ;MACXrE,CAAC,GAAG4D,IAAI,CAAC5D,CAAC,GAAGyP,SAAS,GAAG,CAAC,GAAGJ,QAAQ,GAAG,CAAC;MACzCpP,CAAC,GAAG2D,IAAI,CAAC3D,CAAC,GAAGyP,UAAU,GAAG,CAAC,GAAGJ,SAAS,GAAG,CAAC;MAC3C;IAEF,KAAK,KAAK;MACRtP,CAAC,GAAG4D,IAAI,CAAC5D,CAAC,GAAGyP,SAAS,GAAG,CAAC,GAAGJ,QAAQ,GAAG,CAAC;MACzCpP,CAAC,GAAG2D,IAAI,CAAC3D,CAAC,GAAGqP,SAAS,GAAGC,GAAG;MAC5B;IAEF,KAAK,QAAQ;MACXvP,CAAC,GAAG4D,IAAI,CAAC5D,CAAC,GAAGyP,SAAS,GAAG,CAAC,GAAGJ,QAAQ,GAAG,CAAC;MACzCpP,CAAC,GAAG2D,IAAI,CAAC3D,CAAC,GAAGyP,UAAU,GAAGH,GAAG;MAC7B;IAEF,KAAK,MAAM;MACTvP,CAAC,GAAG4D,IAAI,CAAC5D,CAAC,GAAGqP,QAAQ,GAAGE,GAAG,GAAGC,MAAM;MACpCvP,CAAC,GAAG2D,IAAI,CAAC3D,CAAC,GAAGyP,UAAU,GAAG,CAAC,GAAGJ,SAAS,GAAG,CAAC;MAC3C;IAEF,KAAK,OAAO;MACVtP,CAAC,GAAG4D,IAAI,CAAC5D,CAAC,GAAGyP,SAAS,GAAGF,GAAG,GAAGC,MAAM;MACrCvP,CAAC,GAAG2D,IAAI,CAAC3D,CAAC,GAAGyP,UAAU,GAAG,CAAC,GAAGJ,SAAS,GAAG,CAAC;EAAC;EAGhD,OAAO,CAACtP,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,SAASsN,aAAa,CAACX,KAAK,EAAE;EAC5B,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASjJ,sBAAsB,CAACN,OAAO,EAAEzC,OAAO,EAAEC,GAAG,EAAE;EACrD,IAAI8O,cAAc,GAAG7Q,cAAc,CAACuE,OAAO,CAAC,CAACsM,cAAc;EAC3D,IAAI3E,iBAAiB,GAAG2E,cAAc,CAACC,IAAI,EAAE,CAAC,CAAC,CAAC;EAEhD,IAAI,CAAC5E,iBAAiB,IAAIA,iBAAiB,KAAK,QAAQ,EAAE;IACxD;EACF;EAEA,IAAI6E,WAAW,GAAG9Q,wBAAwB,CAAC6B,OAAO,EAAEoK,iBAAiB,EAAE2E,cAAc,CAACzO,GAAG,CAAC8J,iBAAiB,CAAC,EAAE;IAC5G8E,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,IAAIhK,KAAK,GAAG6J,WAAW,CAACI,MAAM,CAAC,CAAC,CAAC;EAEjC,IAAI,CAACjK,KAAK,EAAE;IACV;EACF;EAEA,IAAIkK,IAAI,GAAGrP,GAAG,CAACsP,uBAAuB,CAACnK,KAAK,CAAC;EAC7C,IAAInC,EAAE;EACNqM,IAAI,CAAC1O,KAAK,CAAC4O,QAAQ,CAAC,UAAUC,KAAK,EAAE;IACnC,IAAI7L,aAAa,GAAGrF,SAAS,CAACkR,KAAK,CAAC,CAAC7L,aAAa;IAElD,IAAIA,aAAa,IAAIA,aAAa,CAACC,IAAI,KAAKpB,OAAO,CAACoB,IAAI,EAAE;MACxDZ,EAAE,GAAGwM,KAAK;MACV,OAAO,IAAI,CAAC,CAAC;IACf;EACF,CAAC,CAAC;;EAEF,IAAIxM,EAAE,EAAE;IACN,OAAO;MACLmH,iBAAiB,EAAEA,iBAAiB;MACpCC,cAAc,EAAEjF,KAAK,CAACiF,cAAc;MACpCpH,EAAE,EAAEA;IACN,CAAC;EACH;AACF;AAEA,eAAezD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}