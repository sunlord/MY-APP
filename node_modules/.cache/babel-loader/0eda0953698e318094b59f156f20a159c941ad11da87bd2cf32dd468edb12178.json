{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport Definable from './Definable';\nvar ShadowManager = function (_super) {\n  __extends(ShadowManager, _super);\n  function ShadowManager(zrId, svgRoot) {\n    var _this = _super.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom') || this;\n    _this._shadowDomMap = {};\n    _this._shadowDomPool = [];\n    return _this;\n  }\n  ShadowManager.prototype._getFromPool = function () {\n    var shadowDom = this._shadowDomPool.pop();\n    if (!shadowDom) {\n      shadowDom = this.createElement('filter');\n      shadowDom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + this.nextId++);\n      var domChild = this.createElement('feDropShadow');\n      shadowDom.appendChild(domChild);\n      this.addDom(shadowDom);\n    }\n    return shadowDom;\n  };\n  ShadowManager.prototype.update = function (svgElement, displayable) {\n    var style = displayable.style;\n    if (hasShadow(style)) {\n      var shadowKey = getShadowKey(displayable);\n      var shadowDom = displayable._shadowDom = this._shadowDomMap[shadowKey];\n      if (!shadowDom) {\n        shadowDom = this._getFromPool();\n        this._shadowDomMap[shadowKey] = shadowDom;\n      }\n      this.updateDom(svgElement, displayable, shadowDom);\n    } else {\n      this.remove(svgElement, displayable);\n    }\n  };\n  ShadowManager.prototype.remove = function (svgElement, displayable) {\n    if (displayable._shadowDom != null) {\n      displayable._shadowDom = null;\n      svgElement.style.filter = '';\n    }\n  };\n  ShadowManager.prototype.updateDom = function (svgElement, displayable, shadowDom) {\n    var domChild = shadowDom.children[0];\n    var style = displayable.style;\n    var globalScale = displayable.getGlobalScale();\n    var scaleX = globalScale[0];\n    var scaleY = globalScale[1];\n    if (!scaleX || !scaleY) {\n      return;\n    }\n    var offsetX = style.shadowOffsetX || 0;\n    var offsetY = style.shadowOffsetY || 0;\n    var blur = style.shadowBlur;\n    var color = style.shadowColor;\n    domChild.setAttribute('dx', offsetX / scaleX + '');\n    domChild.setAttribute('dy', offsetY / scaleY + '');\n    domChild.setAttribute('flood-color', color);\n    var stdDx = blur / 2 / scaleX;\n    var stdDy = blur / 2 / scaleY;\n    var stdDeviation = stdDx + ' ' + stdDy;\n    domChild.setAttribute('stdDeviation', stdDeviation);\n    shadowDom.setAttribute('x', '-100%');\n    shadowDom.setAttribute('y', '-100%');\n    shadowDom.setAttribute('width', '300%');\n    shadowDom.setAttribute('height', '300%');\n    displayable._shadowDom = shadowDom;\n    var id = shadowDom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  };\n  ShadowManager.prototype.removeUnused = function () {\n    var defs = this.getDefs(false);\n    if (!defs) {\n      return;\n    }\n    var shadowDomsPool = this._shadowDomPool;\n    for (var key in this._shadowDomMap) {\n      var dom = this._shadowDomMap[key];\n      shadowDomsPool.push(dom);\n    }\n    this._shadowDomMap = {};\n  };\n  return ShadowManager;\n}(Definable);\nexport default ShadowManager;\nfunction hasShadow(style) {\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY);\n}\nfunction getShadowKey(displayable) {\n  var style = displayable.style;\n  var globalScale = displayable.getGlobalScale();\n  return [style.shadowColor, (style.shadowBlur || 0).toFixed(2), (style.shadowOffsetX || 0).toFixed(2), (style.shadowOffsetY || 0).toFixed(2), globalScale[0], globalScale[1]].join(',');\n}","map":{"version":3,"names":["__extends","Definable","ShadowManager","_super","zrId","svgRoot","_this","call","_shadowDomMap","_shadowDomPool","prototype","_getFromPool","shadowDom","pop","createElement","setAttribute","_zrId","nextId","domChild","appendChild","addDom","update","svgElement","displayable","style","hasShadow","shadowKey","getShadowKey","_shadowDom","updateDom","remove","filter","children","globalScale","getGlobalScale","scaleX","scaleY","offsetX","shadowOffsetX","offsetY","shadowOffsetY","blur","shadowBlur","color","shadowColor","stdDx","stdDy","stdDeviation","id","getAttribute","removeUnused","defs","getDefs","shadowDomsPool","key","dom","push","toFixed","join"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/svg/helper/ShadowManager.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Definable from './Definable';\nvar ShadowManager = (function (_super) {\n    __extends(ShadowManager, _super);\n    function ShadowManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom') || this;\n        _this._shadowDomMap = {};\n        _this._shadowDomPool = [];\n        return _this;\n    }\n    ShadowManager.prototype._getFromPool = function () {\n        var shadowDom = this._shadowDomPool.pop();\n        if (!shadowDom) {\n            shadowDom = this.createElement('filter');\n            shadowDom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + this.nextId++);\n            var domChild = this.createElement('feDropShadow');\n            shadowDom.appendChild(domChild);\n            this.addDom(shadowDom);\n        }\n        return shadowDom;\n    };\n    ShadowManager.prototype.update = function (svgElement, displayable) {\n        var style = displayable.style;\n        if (hasShadow(style)) {\n            var shadowKey = getShadowKey(displayable);\n            var shadowDom = displayable._shadowDom = this._shadowDomMap[shadowKey];\n            if (!shadowDom) {\n                shadowDom = this._getFromPool();\n                this._shadowDomMap[shadowKey] = shadowDom;\n            }\n            this.updateDom(svgElement, displayable, shadowDom);\n        }\n        else {\n            this.remove(svgElement, displayable);\n        }\n    };\n    ShadowManager.prototype.remove = function (svgElement, displayable) {\n        if (displayable._shadowDom != null) {\n            displayable._shadowDom = null;\n            svgElement.style.filter = '';\n        }\n    };\n    ShadowManager.prototype.updateDom = function (svgElement, displayable, shadowDom) {\n        var domChild = shadowDom.children[0];\n        var style = displayable.style;\n        var globalScale = displayable.getGlobalScale();\n        var scaleX = globalScale[0];\n        var scaleY = globalScale[1];\n        if (!scaleX || !scaleY) {\n            return;\n        }\n        var offsetX = style.shadowOffsetX || 0;\n        var offsetY = style.shadowOffsetY || 0;\n        var blur = style.shadowBlur;\n        var color = style.shadowColor;\n        domChild.setAttribute('dx', offsetX / scaleX + '');\n        domChild.setAttribute('dy', offsetY / scaleY + '');\n        domChild.setAttribute('flood-color', color);\n        var stdDx = blur / 2 / scaleX;\n        var stdDy = blur / 2 / scaleY;\n        var stdDeviation = stdDx + ' ' + stdDy;\n        domChild.setAttribute('stdDeviation', stdDeviation);\n        shadowDom.setAttribute('x', '-100%');\n        shadowDom.setAttribute('y', '-100%');\n        shadowDom.setAttribute('width', '300%');\n        shadowDom.setAttribute('height', '300%');\n        displayable._shadowDom = shadowDom;\n        var id = shadowDom.getAttribute('id');\n        svgElement.style.filter = 'url(#' + id + ')';\n    };\n    ShadowManager.prototype.removeUnused = function () {\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return;\n        }\n        var shadowDomsPool = this._shadowDomPool;\n        for (var key in this._shadowDomMap) {\n            var dom = this._shadowDomMap[key];\n            shadowDomsPool.push(dom);\n        }\n        this._shadowDomMap = {};\n    };\n    return ShadowManager;\n}(Definable));\nexport default ShadowManager;\nfunction hasShadow(style) {\n    return style\n        && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY);\n}\nfunction getShadowKey(displayable) {\n    var style = displayable.style;\n    var globalScale = displayable.getGlobalScale();\n    return [\n        style.shadowColor,\n        (style.shadowBlur || 0).toFixed(2),\n        (style.shadowOffsetX || 0).toFixed(2),\n        (style.shadowOffsetY || 0).toFixed(2),\n        globalScale[0],\n        globalScale[1]\n    ].join(',');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}