{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport { createSymbol } from '../../util/symbol';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport { getECData } from '../../util/innerStore';\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPathShape = /** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n  return LargeSymbolPathShape;\n}();\nvar LargeSymbolPath = /** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n  function LargeSymbolPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n    this._ctx = null;\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  };\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n  };\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n    return -1;\n  };\n  return LargeSymbolPath;\n}(graphic.Path);\nvar LargeSymbolDraw = /** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n  LargeSymbolDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this.group.removeAll();\n    var symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n    this._setCommon(symbolEl, data, false, opt);\n    this.group.add(symbolEl);\n    this._incremental = null;\n  };\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    if (this._incremental) {\n      return;\n    }\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n      child.setShape('points', points);\n    });\n  };\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n    this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n    // PENDING Incremental data?\n\n    if (data.count() > 2e6) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var symbolEl;\n    if (this._incremental) {\n      symbolEl = new LargeSymbolPath();\n      this._incremental.addDisplayable(symbolEl, true);\n    } else {\n      symbolEl = new LargeSymbolPath({\n        rectHover: true,\n        cursor: 'default',\n        startIndex: taskParams.start,\n        endIndex: taskParams.end\n      });\n      symbolEl.incremental = true;\n      this.group.add(symbolEl);\n    }\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n    this._setCommon(symbolEl, data, !!this._incremental, opt);\n  };\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, isIncremental, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle(\n    // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n    if (!isIncremental) {\n      var ecData_1 = getECData(symbolEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      symbolEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n        if (dataIndex >= 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n        }\n      });\n    }\n  };\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clearIncremental();\n    this._incremental = null;\n    this.group.removeAll();\n  };\n  LargeSymbolDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n  return LargeSymbolDraw;\n}();\nexport default LargeSymbolDraw;","map":{"version":3,"names":["__extends","graphic","createSymbol","IncrementalDisplayable","getECData","BOOST_SIZE_THRESHOLD","LargeSymbolPathShape","LargeSymbolPath","_super","opts","call","prototype","getDefaultShape","buildPath","path","shape","points","size","symbolProxy","symbolProxyShape","ctx","getContext","canBoost","_ctx","i","length","x","y","isNaN","softClipShape","contain","width","height","afterBrush","fillRect","findDataIndex","w","Math","max","h","idx","x0","y0","Path","LargeSymbolDraw","group","Group","isPersistent","_incremental","updateData","data","opt","removeAll","symbolEl","rectHover","cursor","setShape","getLayout","_setCommon","add","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","_clearIncremental","count","silent","incrementalUpdate","taskParams","addDisplayable","start","end","incremental","isIncremental","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","globalStyle","visualColor","fill","ecData_1","seriesIndex","on","e","dataIndex","offsetX","offsetY","remove","clearDisplaybles"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport { createSymbol } from '../../util/symbol';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport { getECData } from '../../util/innerStore';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeSymbolDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this.group.removeAll();\n    var symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, false, opt);\n\n    this.group.add(symbolEl);\n    this._incremental = null;\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    if (this._incremental) {\n      return;\n    }\n\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points);\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n    // PENDING Incremental data?\n\n\n    if (data.count() > 2e6) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var symbolEl;\n\n    if (this._incremental) {\n      symbolEl = new LargeSymbolPath();\n\n      this._incremental.addDisplayable(symbolEl, true);\n    } else {\n      symbolEl = new LargeSymbolPath({\n        rectHover: true,\n        cursor: 'default',\n        startIndex: taskParams.start,\n        endIndex: taskParams.end\n      });\n      symbolEl.incremental = true;\n      this.group.add(symbolEl);\n    }\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, !!this._incremental, opt);\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, isIncremental, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(symbolEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      symbolEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex >= 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n        }\n      });\n    }\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  LargeSymbolDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}