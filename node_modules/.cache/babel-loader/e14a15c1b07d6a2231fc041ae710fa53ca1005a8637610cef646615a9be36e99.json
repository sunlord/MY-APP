{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { parseRichText, parsePlainText } from './helper/parseText';\nimport TSpan from './TSpan';\nimport { retrieve2, each, normalizeCssArray, trim, retrieve3, extend, keys, defaults } from '../core/util';\nimport { DEFAULT_FONT, adjustTextX, adjustTextY } from '../contain/text';\nimport ZRImage from './Image';\nimport Rect from './shape/Rect';\nimport BoundingRect from '../core/BoundingRect';\nimport { copy } from '../core/matrix';\nimport Displayable, { DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable';\nvar DEFAULT_RICH_TEXT_COLOR = {\n  fill: '#000'\n};\nvar DEFAULT_STROKE_LINE_WIDTH = 2;\nexport var DEFAULT_TEXT_ANIMATION_PROPS = {\n  style: defaults({\n    fill: true,\n    stroke: true,\n    fillOpacity: true,\n    strokeOpacity: true,\n    lineWidth: true,\n    fontSize: true,\n    lineHeight: true,\n    width: true,\n    height: true,\n    textShadowColor: true,\n    textShadowBlur: true,\n    textShadowOffsetX: true,\n    textShadowOffsetY: true,\n    backgroundColor: true,\n    padding: true,\n    borderColor: true,\n    borderWidth: true,\n    borderRadius: true\n  }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar ZRText = function (_super) {\n  __extends(ZRText, _super);\n  function ZRText(opts) {\n    var _this = _super.call(this) || this;\n    _this.type = 'text';\n    _this._children = [];\n    _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\n    _this.attr(opts);\n    return _this;\n  }\n  ZRText.prototype.childrenRef = function () {\n    return this._children;\n  };\n  ZRText.prototype.update = function () {\n    if (this.styleChanged()) {\n      this._updateSubTexts();\n    }\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      child.zlevel = this.zlevel;\n      child.z = this.z;\n      child.z2 = this.z2;\n      child.culling = this.culling;\n      child.cursor = this.cursor;\n      child.invisible = this.invisible;\n    }\n    var attachedTransform = this.attachedTransform;\n    if (attachedTransform) {\n      attachedTransform.updateTransform();\n      var m = attachedTransform.transform;\n      if (m) {\n        this.transform = this.transform || [];\n        copy(this.transform, m);\n      } else {\n        this.transform = null;\n      }\n    } else {\n      _super.prototype.update.call(this);\n    }\n  };\n  ZRText.prototype.getComputedTransform = function () {\n    if (this.__hostTarget) {\n      this.__hostTarget.getComputedTransform();\n      this.__hostTarget.updateInnerText(true);\n    }\n    return this.attachedTransform ? this.attachedTransform.getComputedTransform() : _super.prototype.getComputedTransform.call(this);\n  };\n  ZRText.prototype._updateSubTexts = function () {\n    this._childCursor = 0;\n    normalizeTextStyle(this.style);\n    this.style.rich ? this._updateRichTexts() : this._updatePlainTexts();\n    this._children.length = this._childCursor;\n    this.styleUpdated();\n  };\n  ZRText.prototype.addSelfToZr = function (zr) {\n    _super.prototype.addSelfToZr.call(this, zr);\n    for (var i = 0; i < this._children.length; i++) {\n      this._children[i].__zr = zr;\n    }\n  };\n  ZRText.prototype.removeSelfFromZr = function (zr) {\n    _super.prototype.removeSelfFromZr.call(this, zr);\n    for (var i = 0; i < this._children.length; i++) {\n      this._children[i].__zr = null;\n    }\n  };\n  ZRText.prototype.getBoundingRect = function () {\n    if (this.styleChanged()) {\n      this._updateSubTexts();\n    }\n    if (!this._rect) {\n      var tmpRect = new BoundingRect(0, 0, 0, 0);\n      var children = this._children;\n      var tmpMat = [];\n      var rect = null;\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        var childRect = child.getBoundingRect();\n        var transform = child.getLocalTransform(tmpMat);\n        if (transform) {\n          tmpRect.copy(childRect);\n          tmpRect.applyTransform(transform);\n          rect = rect || tmpRect.clone();\n          rect.union(tmpRect);\n        } else {\n          rect = rect || childRect.clone();\n          rect.union(childRect);\n        }\n      }\n      this._rect = rect || tmpRect;\n    }\n    return this._rect;\n  };\n  ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\n    this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\n  };\n  ZRText.prototype.setTextContent = function (textContent) {\n    throw new Error('Can\\'t attach text on another text');\n  };\n  ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n    if (!sourceStyle) {\n      return targetStyle;\n    }\n    var sourceRich = sourceStyle.rich;\n    var targetRich = targetStyle.rich || sourceRich && {};\n    extend(targetStyle, sourceStyle);\n    if (sourceRich && targetRich) {\n      this._mergeRich(targetRich, sourceRich);\n      targetStyle.rich = targetRich;\n    } else if (targetRich) {\n      targetStyle.rich = targetRich;\n    }\n    return targetStyle;\n  };\n  ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\n    var richNames = keys(sourceRich);\n    for (var i = 0; i < richNames.length; i++) {\n      var richName = richNames[i];\n      targetRich[richName] = targetRich[richName] || {};\n      extend(targetRich[richName], sourceRich[richName]);\n    }\n  };\n  ZRText.prototype.getAnimationStyleProps = function () {\n    return DEFAULT_TEXT_ANIMATION_PROPS;\n  };\n  ZRText.prototype._getOrCreateChild = function (Ctor) {\n    var child = this._children[this._childCursor];\n    if (!child || !(child instanceof Ctor)) {\n      child = new Ctor();\n    }\n    this._children[this._childCursor++] = child;\n    child.__zr = this.__zr;\n    child.parent = this;\n    return child;\n  };\n  ZRText.prototype._updatePlainTexts = function () {\n    var style = this.style;\n    var textFont = style.font || DEFAULT_FONT;\n    var textPadding = style.padding;\n    var text = getStyleText(style);\n    var contentBlock = parsePlainText(text, style);\n    var needDrawBg = needDrawBackground(style);\n    var bgColorDrawn = !!style.backgroundColor;\n    var outerHeight = contentBlock.outerHeight;\n    var textLines = contentBlock.lines;\n    var lineHeight = contentBlock.lineHeight;\n    var defaultStyle = this._defaultStyle;\n    var baseX = style.x || 0;\n    var baseY = style.y || 0;\n    var textAlign = style.align || defaultStyle.align || 'left';\n    var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\n    var textX = baseX;\n    var textY = adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\n    if (needDrawBg || textPadding) {\n      var outerWidth_1 = contentBlock.width;\n      textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\n      var boxX = adjustTextX(baseX, outerWidth_1, textAlign);\n      var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n      needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\n    }\n    textY += lineHeight / 2;\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      if (verticalAlign === 'top') {\n        textY += textPadding[0];\n      } else if (verticalAlign === 'bottom') {\n        textY -= textPadding[2];\n      }\n    }\n    var defaultLineWidth = 0;\n    var useDefaultFill = false;\n    var textFill = getFill('fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\n    var textStroke = getStroke('stroke' in style ? style.stroke : !bgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\n    var hasShadow = style.textShadowBlur > 0;\n    var fixedBoundingRect = style.width != null && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\n    var calculatedLineHeight = contentBlock.calculatedLineHeight;\n    for (var i = 0; i < textLines.length; i++) {\n      var el = this._getOrCreateChild(TSpan);\n      var subElStyle = el.createStyle();\n      el.useStyle(subElStyle);\n      subElStyle.text = textLines[i];\n      subElStyle.x = textX;\n      subElStyle.y = textY;\n      if (textAlign) {\n        subElStyle.textAlign = textAlign;\n      }\n      subElStyle.textBaseline = 'middle';\n      subElStyle.opacity = style.opacity;\n      subElStyle.strokeFirst = true;\n      if (hasShadow) {\n        subElStyle.shadowBlur = style.textShadowBlur || 0;\n        subElStyle.shadowColor = style.textShadowColor || 'transparent';\n        subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\n        subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\n      }\n      if (textStroke) {\n        subElStyle.stroke = textStroke;\n        subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\n        subElStyle.lineDash = style.lineDash;\n        subElStyle.lineDashOffset = style.lineDashOffset || 0;\n      }\n      if (textFill) {\n        subElStyle.fill = textFill;\n      }\n      subElStyle.font = textFont;\n      textY += lineHeight;\n      if (fixedBoundingRect) {\n        el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\n      }\n    }\n  };\n  ZRText.prototype._updateRichTexts = function () {\n    var style = this.style;\n    var text = getStyleText(style);\n    var contentBlock = parseRichText(text, style);\n    var contentWidth = contentBlock.width;\n    var outerWidth = contentBlock.outerWidth;\n    var outerHeight = contentBlock.outerHeight;\n    var textPadding = style.padding;\n    var baseX = style.x || 0;\n    var baseY = style.y || 0;\n    var defaultStyle = this._defaultStyle;\n    var textAlign = style.align || defaultStyle.align;\n    var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\n    var boxX = adjustTextX(baseX, outerWidth, textAlign);\n    var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n    var xLeft = boxX;\n    var lineTop = boxY;\n    if (textPadding) {\n      xLeft += textPadding[3];\n      lineTop += textPadding[0];\n    }\n    var xRight = xLeft + contentWidth;\n    if (needDrawBackground(style)) {\n      this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\n    }\n    var bgColorDrawn = !!style.backgroundColor;\n    for (var i = 0; i < contentBlock.lines.length; i++) {\n      var line = contentBlock.lines[i];\n      var tokens = line.tokens;\n      var tokenCount = tokens.length;\n      var lineHeight = line.lineHeight;\n      var remainedWidth = line.width;\n      var leftIndex = 0;\n      var lineXLeft = xLeft;\n      var lineXRight = xRight;\n      var rightIndex = tokenCount - 1;\n      var token = void 0;\n      while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\n        this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\n        remainedWidth -= token.width;\n        lineXLeft += token.width;\n        leftIndex++;\n      }\n      while (rightIndex >= 0 && (token = tokens[rightIndex], token.align === 'right')) {\n        this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\n        remainedWidth -= token.width;\n        lineXRight -= token.width;\n        rightIndex--;\n      }\n      lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\n      while (leftIndex <= rightIndex) {\n        token = tokens[leftIndex];\n        this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\n        lineXLeft += token.width;\n        leftIndex++;\n      }\n      lineTop += lineHeight;\n    }\n  };\n  ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\n    var tokenStyle = style.rich[token.styleName] || {};\n    tokenStyle.text = token.text;\n    var verticalAlign = token.verticalAlign;\n    var y = lineTop + lineHeight / 2;\n    if (verticalAlign === 'top') {\n      y = lineTop + token.height / 2;\n    } else if (verticalAlign === 'bottom') {\n      y = lineTop + lineHeight - token.height / 2;\n    }\n    var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\n    needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n    var bgColorDrawn = !!tokenStyle.backgroundColor;\n    var textPadding = token.textPadding;\n    if (textPadding) {\n      x = getTextXForPadding(x, textAlign, textPadding);\n      y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\n    }\n    var el = this._getOrCreateChild(TSpan);\n    var subElStyle = el.createStyle();\n    el.useStyle(subElStyle);\n    var defaultStyle = this._defaultStyle;\n    var useDefaultFill = false;\n    var defaultLineWidth = 0;\n    var textFill = getStroke('fill' in tokenStyle ? tokenStyle.fill : 'fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\n    var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke : 'stroke' in style ? style.stroke : !bgColorDrawn && !parentBgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\n    var hasShadow = tokenStyle.textShadowBlur > 0 || style.textShadowBlur > 0;\n    subElStyle.text = token.text;\n    subElStyle.x = x;\n    subElStyle.y = y;\n    if (hasShadow) {\n      subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\n      subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\n      subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\n      subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\n    }\n    subElStyle.textAlign = textAlign;\n    subElStyle.textBaseline = 'middle';\n    subElStyle.font = token.font || DEFAULT_FONT;\n    subElStyle.opacity = retrieve3(tokenStyle.opacity, style.opacity, 1);\n    if (textStroke) {\n      subElStyle.lineWidth = retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\n      subElStyle.lineDash = retrieve2(tokenStyle.lineDash, style.lineDash);\n      subElStyle.lineDashOffset = style.lineDashOffset || 0;\n      subElStyle.stroke = textStroke;\n    }\n    if (textFill) {\n      subElStyle.fill = textFill;\n    }\n    var textWidth = token.contentWidth;\n    var textHeight = token.contentHeight;\n    el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\n  };\n  ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\n    var textBackgroundColor = style.backgroundColor;\n    var textBorderWidth = style.borderWidth;\n    var textBorderColor = style.borderColor;\n    var isImageBg = textBackgroundColor && textBackgroundColor.image;\n    var isPlainOrGradientBg = textBackgroundColor && !isImageBg;\n    var textBorderRadius = style.borderRadius;\n    var self = this;\n    var rectEl;\n    var imgEl;\n    if (isPlainOrGradientBg || textBorderWidth && textBorderColor) {\n      rectEl = this._getOrCreateChild(Rect);\n      rectEl.useStyle(rectEl.createStyle());\n      rectEl.style.fill = null;\n      var rectShape = rectEl.shape;\n      rectShape.x = x;\n      rectShape.y = y;\n      rectShape.width = width;\n      rectShape.height = height;\n      rectShape.r = textBorderRadius;\n      rectEl.dirtyShape();\n    }\n    if (isPlainOrGradientBg) {\n      var rectStyle = rectEl.style;\n      rectStyle.fill = textBackgroundColor || null;\n      rectStyle.fillOpacity = retrieve2(style.fillOpacity, 1);\n    } else if (isImageBg) {\n      imgEl = this._getOrCreateChild(ZRImage);\n      imgEl.onload = function () {\n        self.dirtyStyle();\n      };\n      var imgStyle = imgEl.style;\n      imgStyle.image = textBackgroundColor.image;\n      imgStyle.x = x;\n      imgStyle.y = y;\n      imgStyle.width = width;\n      imgStyle.height = height;\n    }\n    if (textBorderWidth && textBorderColor) {\n      var rectStyle = rectEl.style;\n      rectStyle.lineWidth = textBorderWidth;\n      rectStyle.stroke = textBorderColor;\n      rectStyle.strokeOpacity = retrieve2(style.strokeOpacity, 1);\n      rectStyle.lineDash = style.borderDash;\n      rectStyle.lineDashOffset = style.borderDashOffset || 0;\n      rectEl.strokeContainThreshold = 0;\n      if (rectEl.hasFill() && rectEl.hasStroke()) {\n        rectStyle.strokeFirst = true;\n        rectStyle.lineWidth *= 2;\n      }\n    }\n    var commonStyle = (rectEl || imgEl).style;\n    commonStyle.shadowBlur = style.shadowBlur || 0;\n    commonStyle.shadowColor = style.shadowColor || 'transparent';\n    commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\n    commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\n    commonStyle.opacity = retrieve3(style.opacity, topStyle.opacity, 1);\n  };\n  ZRText.makeFont = function (style) {\n    var font = '';\n    if (style.fontSize || style.fontFamily || style.fontWeight) {\n      var fontSize = '';\n      if (typeof style.fontSize === 'string' && (style.fontSize.indexOf('px') !== -1 || style.fontSize.indexOf('rem') !== -1 || style.fontSize.indexOf('em') !== -1)) {\n        fontSize = style.fontSize;\n      } else if (!isNaN(+style.fontSize)) {\n        fontSize = style.fontSize + 'px';\n      } else {\n        fontSize = '12px';\n      }\n      font = [style.fontStyle, style.fontWeight, fontSize, style.fontFamily || 'sans-serif'].join(' ');\n    }\n    return font && trim(font) || style.textFont || style.font;\n  };\n  return ZRText;\n}(Displayable);\nvar VALID_TEXT_ALIGN = {\n  left: true,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\nexport function normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = ZRText.makeFont(style);\n    var textAlign = style.align;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.align = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left';\n    var verticalAlign = style.verticalAlign;\n    verticalAlign === 'center' && (verticalAlign = 'middle');\n    style.verticalAlign = verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign] ? verticalAlign : 'top';\n    var textPadding = style.padding;\n    if (textPadding) {\n      style.padding = normalizeCssArray(style.padding);\n    }\n  }\n}\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null : fill.image || fill.colorStops ? '#000' : fill;\n}\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\nfunction getStyleText(style) {\n  var text = style.text;\n  text != null && (text += '');\n  return text;\n}\nfunction needDrawBackground(style) {\n  return !!(style.backgroundColor || style.borderWidth && style.borderColor);\n}\nexport default ZRText;","map":{"version":3,"names":["__extends","parseRichText","parsePlainText","TSpan","retrieve2","each","normalizeCssArray","trim","retrieve3","extend","keys","defaults","DEFAULT_FONT","adjustTextX","adjustTextY","ZRImage","Rect","BoundingRect","copy","Displayable","DEFAULT_COMMON_ANIMATION_PROPS","DEFAULT_RICH_TEXT_COLOR","fill","DEFAULT_STROKE_LINE_WIDTH","DEFAULT_TEXT_ANIMATION_PROPS","style","stroke","fillOpacity","strokeOpacity","lineWidth","fontSize","lineHeight","width","height","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","backgroundColor","padding","borderColor","borderWidth","borderRadius","ZRText","_super","opts","_this","call","type","_children","_defaultStyle","attr","prototype","childrenRef","update","styleChanged","_updateSubTexts","i","length","child","zlevel","z","z2","culling","cursor","invisible","attachedTransform","updateTransform","m","transform","getComputedTransform","__hostTarget","updateInnerText","_childCursor","normalizeTextStyle","rich","_updateRichTexts","_updatePlainTexts","styleUpdated","addSelfToZr","zr","__zr","removeSelfFromZr","getBoundingRect","_rect","tmpRect","children","tmpMat","rect","childRect","getLocalTransform","applyTransform","clone","union","setDefaultTextStyle","defaultTextStyle","setTextContent","textContent","Error","_mergeStyle","targetStyle","sourceStyle","sourceRich","targetRich","_mergeRich","richNames","richName","getAnimationStyleProps","_getOrCreateChild","Ctor","parent","textFont","font","textPadding","text","getStyleText","contentBlock","needDrawBg","needDrawBackground","bgColorDrawn","outerHeight","textLines","lines","defaultStyle","baseX","x","baseY","y","textAlign","align","verticalAlign","textX","textY","contentHeight","outerWidth_1","boxX","boxY","_renderBackground","getTextXForPadding","defaultLineWidth","useDefaultFill","textFill","getFill","textStroke","getStroke","autoStroke","hasShadow","fixedBoundingRect","overflow","calculatedLineHeight","el","subElStyle","createStyle","useStyle","textBaseline","opacity","strokeFirst","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","lineDash","lineDashOffset","setBoundingRect","contentWidth","outerWidth","xLeft","lineTop","xRight","line","tokens","tokenCount","remainedWidth","leftIndex","lineXLeft","lineXRight","rightIndex","token","_placeToken","parentBgColorDrawn","tokenStyle","styleName","isLineHolder","innerHeight","textWidth","textHeight","topStyle","textBackgroundColor","textBorderWidth","textBorderColor","isImageBg","image","isPlainOrGradientBg","textBorderRadius","self","rectEl","imgEl","rectShape","shape","r","dirtyShape","rectStyle","onload","dirtyStyle","imgStyle","borderDash","borderDashOffset","strokeContainThreshold","hasFill","hasStroke","commonStyle","makeFont","fontFamily","fontWeight","indexOf","isNaN","fontStyle","join","VALID_TEXT_ALIGN","left","right","center","VALID_TEXT_VERTICAL_ALIGN","top","bottom","middle","normalizeStyle","colorStops"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/graphic/Text.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { parseRichText, parsePlainText } from './helper/parseText';\nimport TSpan from './TSpan';\nimport { retrieve2, each, normalizeCssArray, trim, retrieve3, extend, keys, defaults } from '../core/util';\nimport { DEFAULT_FONT, adjustTextX, adjustTextY } from '../contain/text';\nimport ZRImage from './Image';\nimport Rect from './shape/Rect';\nimport BoundingRect from '../core/BoundingRect';\nimport { copy } from '../core/matrix';\nimport Displayable, { DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable';\nvar DEFAULT_RICH_TEXT_COLOR = {\n    fill: '#000'\n};\nvar DEFAULT_STROKE_LINE_WIDTH = 2;\nexport var DEFAULT_TEXT_ANIMATION_PROPS = {\n    style: defaults({\n        fill: true,\n        stroke: true,\n        fillOpacity: true,\n        strokeOpacity: true,\n        lineWidth: true,\n        fontSize: true,\n        lineHeight: true,\n        width: true,\n        height: true,\n        textShadowColor: true,\n        textShadowBlur: true,\n        textShadowOffsetX: true,\n        textShadowOffsetY: true,\n        backgroundColor: true,\n        padding: true,\n        borderColor: true,\n        borderWidth: true,\n        borderRadius: true\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar ZRText = (function (_super) {\n    __extends(ZRText, _super);\n    function ZRText(opts) {\n        var _this = _super.call(this) || this;\n        _this.type = 'text';\n        _this._children = [];\n        _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\n        _this.attr(opts);\n        return _this;\n    }\n    ZRText.prototype.childrenRef = function () {\n        return this._children;\n    };\n    ZRText.prototype.update = function () {\n        if (this.styleChanged()) {\n            this._updateSubTexts();\n        }\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            child.zlevel = this.zlevel;\n            child.z = this.z;\n            child.z2 = this.z2;\n            child.culling = this.culling;\n            child.cursor = this.cursor;\n            child.invisible = this.invisible;\n        }\n        var attachedTransform = this.attachedTransform;\n        if (attachedTransform) {\n            attachedTransform.updateTransform();\n            var m = attachedTransform.transform;\n            if (m) {\n                this.transform = this.transform || [];\n                copy(this.transform, m);\n            }\n            else {\n                this.transform = null;\n            }\n        }\n        else {\n            _super.prototype.update.call(this);\n        }\n    };\n    ZRText.prototype.getComputedTransform = function () {\n        if (this.__hostTarget) {\n            this.__hostTarget.getComputedTransform();\n            this.__hostTarget.updateInnerText(true);\n        }\n        return this.attachedTransform ? this.attachedTransform.getComputedTransform()\n            : _super.prototype.getComputedTransform.call(this);\n    };\n    ZRText.prototype._updateSubTexts = function () {\n        this._childCursor = 0;\n        normalizeTextStyle(this.style);\n        this.style.rich\n            ? this._updateRichTexts()\n            : this._updatePlainTexts();\n        this._children.length = this._childCursor;\n        this.styleUpdated();\n    };\n    ZRText.prototype.addSelfToZr = function (zr) {\n        _super.prototype.addSelfToZr.call(this, zr);\n        for (var i = 0; i < this._children.length; i++) {\n            this._children[i].__zr = zr;\n        }\n    };\n    ZRText.prototype.removeSelfFromZr = function (zr) {\n        _super.prototype.removeSelfFromZr.call(this, zr);\n        for (var i = 0; i < this._children.length; i++) {\n            this._children[i].__zr = null;\n        }\n    };\n    ZRText.prototype.getBoundingRect = function () {\n        if (this.styleChanged()) {\n            this._updateSubTexts();\n        }\n        if (!this._rect) {\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = this._children;\n            var tmpMat = [];\n            var rect = null;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            this._rect = rect || tmpRect;\n        }\n        return this._rect;\n    };\n    ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\n        this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\n    };\n    ZRText.prototype.setTextContent = function (textContent) {\n        throw new Error('Can\\'t attach text on another text');\n    };\n    ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n        if (!sourceStyle) {\n            return targetStyle;\n        }\n        var sourceRich = sourceStyle.rich;\n        var targetRich = targetStyle.rich || (sourceRich && {});\n        extend(targetStyle, sourceStyle);\n        if (sourceRich && targetRich) {\n            this._mergeRich(targetRich, sourceRich);\n            targetStyle.rich = targetRich;\n        }\n        else if (targetRich) {\n            targetStyle.rich = targetRich;\n        }\n        return targetStyle;\n    };\n    ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\n        var richNames = keys(sourceRich);\n        for (var i = 0; i < richNames.length; i++) {\n            var richName = richNames[i];\n            targetRich[richName] = targetRich[richName] || {};\n            extend(targetRich[richName], sourceRich[richName]);\n        }\n    };\n    ZRText.prototype.getAnimationStyleProps = function () {\n        return DEFAULT_TEXT_ANIMATION_PROPS;\n    };\n    ZRText.prototype._getOrCreateChild = function (Ctor) {\n        var child = this._children[this._childCursor];\n        if (!child || !(child instanceof Ctor)) {\n            child = new Ctor();\n        }\n        this._children[this._childCursor++] = child;\n        child.__zr = this.__zr;\n        child.parent = this;\n        return child;\n    };\n    ZRText.prototype._updatePlainTexts = function () {\n        var style = this.style;\n        var textFont = style.font || DEFAULT_FONT;\n        var textPadding = style.padding;\n        var text = getStyleText(style);\n        var contentBlock = parsePlainText(text, style);\n        var needDrawBg = needDrawBackground(style);\n        var bgColorDrawn = !!(style.backgroundColor);\n        var outerHeight = contentBlock.outerHeight;\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n        var defaultStyle = this._defaultStyle;\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.align || defaultStyle.align || 'left';\n        var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\n        var textX = baseX;\n        var textY = adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\n        if (needDrawBg || textPadding) {\n            var outerWidth_1 = contentBlock.width;\n            textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\n            var boxX = adjustTextX(baseX, outerWidth_1, textAlign);\n            var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n            needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\n        }\n        textY += lineHeight / 2;\n        if (textPadding) {\n            textX = getTextXForPadding(baseX, textAlign, textPadding);\n            if (verticalAlign === 'top') {\n                textY += textPadding[0];\n            }\n            else if (verticalAlign === 'bottom') {\n                textY -= textPadding[2];\n            }\n        }\n        var defaultLineWidth = 0;\n        var useDefaultFill = false;\n        var textFill = getFill('fill' in style\n            ? style.fill\n            : (useDefaultFill = true, defaultStyle.fill));\n        var textStroke = getStroke('stroke' in style\n            ? style.stroke\n            : (!bgColorDrawn\n                && (!defaultStyle.autoStroke || useDefaultFill))\n                ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke)\n                : null);\n        var hasShadow = style.textShadowBlur > 0;\n        var fixedBoundingRect = style.width != null\n            && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\n        var calculatedLineHeight = contentBlock.calculatedLineHeight;\n        for (var i = 0; i < textLines.length; i++) {\n            var el = this._getOrCreateChild(TSpan);\n            var subElStyle = el.createStyle();\n            el.useStyle(subElStyle);\n            subElStyle.text = textLines[i];\n            subElStyle.x = textX;\n            subElStyle.y = textY;\n            if (textAlign) {\n                subElStyle.textAlign = textAlign;\n            }\n            subElStyle.textBaseline = 'middle';\n            subElStyle.opacity = style.opacity;\n            subElStyle.strokeFirst = true;\n            if (hasShadow) {\n                subElStyle.shadowBlur = style.textShadowBlur || 0;\n                subElStyle.shadowColor = style.textShadowColor || 'transparent';\n                subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\n                subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\n            }\n            if (textStroke) {\n                subElStyle.stroke = textStroke;\n                subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\n                subElStyle.lineDash = style.lineDash;\n                subElStyle.lineDashOffset = style.lineDashOffset || 0;\n            }\n            if (textFill) {\n                subElStyle.fill = textFill;\n            }\n            subElStyle.font = textFont;\n            textY += lineHeight;\n            if (fixedBoundingRect) {\n                el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\n            }\n        }\n    };\n    ZRText.prototype._updateRichTexts = function () {\n        var style = this.style;\n        var text = getStyleText(style);\n        var contentBlock = parseRichText(text, style);\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.padding;\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var defaultStyle = this._defaultStyle;\n        var textAlign = style.align || defaultStyle.align;\n        var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\n        var boxX = adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n        if (needDrawBackground(style)) {\n            this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\n        }\n        var bgColorDrawn = !!(style.backgroundColor);\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var remainedWidth = line.width;\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token = void 0;\n            while (leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\n                this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\n                remainedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n            while (rightIndex >= 0\n                && (token = tokens[rightIndex], token.align === 'right')) {\n                this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\n                remainedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n            lineTop += lineHeight;\n        }\n    };\n    ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\n        var tokenStyle = style.rich[token.styleName] || {};\n        tokenStyle.text = token.text;\n        var verticalAlign = token.verticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (verticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (verticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n        var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\n        needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right'\n            ? x - token.width\n            : textAlign === 'center'\n                ? x - token.width / 2\n                : x, y - token.height / 2, token.width, token.height);\n        var bgColorDrawn = !!tokenStyle.backgroundColor;\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\n        }\n        var el = this._getOrCreateChild(TSpan);\n        var subElStyle = el.createStyle();\n        el.useStyle(subElStyle);\n        var defaultStyle = this._defaultStyle;\n        var useDefaultFill = false;\n        var defaultLineWidth = 0;\n        var textFill = getStroke('fill' in tokenStyle ? tokenStyle.fill\n            : 'fill' in style ? style.fill\n                : (useDefaultFill = true, defaultStyle.fill));\n        var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke\n            : 'stroke' in style ? style.stroke\n                : (!bgColorDrawn\n                    && !parentBgColorDrawn\n                    && (!defaultStyle.autoStroke || useDefaultFill)) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke)\n                    : null);\n        var hasShadow = tokenStyle.textShadowBlur > 0\n            || style.textShadowBlur > 0;\n        subElStyle.text = token.text;\n        subElStyle.x = x;\n        subElStyle.y = y;\n        if (hasShadow) {\n            subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\n            subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\n            subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\n            subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\n        }\n        subElStyle.textAlign = textAlign;\n        subElStyle.textBaseline = 'middle';\n        subElStyle.font = token.font || DEFAULT_FONT;\n        subElStyle.opacity = retrieve3(tokenStyle.opacity, style.opacity, 1);\n        if (textStroke) {\n            subElStyle.lineWidth = retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\n            subElStyle.lineDash = retrieve2(tokenStyle.lineDash, style.lineDash);\n            subElStyle.lineDashOffset = style.lineDashOffset || 0;\n            subElStyle.stroke = textStroke;\n        }\n        if (textFill) {\n            subElStyle.fill = textFill;\n        }\n        var textWidth = token.contentWidth;\n        var textHeight = token.contentHeight;\n        el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\n    };\n    ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\n        var textBackgroundColor = style.backgroundColor;\n        var textBorderWidth = style.borderWidth;\n        var textBorderColor = style.borderColor;\n        var isImageBg = textBackgroundColor && textBackgroundColor.image;\n        var isPlainOrGradientBg = textBackgroundColor && !isImageBg;\n        var textBorderRadius = style.borderRadius;\n        var self = this;\n        var rectEl;\n        var imgEl;\n        if (isPlainOrGradientBg || (textBorderWidth && textBorderColor)) {\n            rectEl = this._getOrCreateChild(Rect);\n            rectEl.useStyle(rectEl.createStyle());\n            rectEl.style.fill = null;\n            var rectShape = rectEl.shape;\n            rectShape.x = x;\n            rectShape.y = y;\n            rectShape.width = width;\n            rectShape.height = height;\n            rectShape.r = textBorderRadius;\n            rectEl.dirtyShape();\n        }\n        if (isPlainOrGradientBg) {\n            var rectStyle = rectEl.style;\n            rectStyle.fill = textBackgroundColor || null;\n            rectStyle.fillOpacity = retrieve2(style.fillOpacity, 1);\n        }\n        else if (isImageBg) {\n            imgEl = this._getOrCreateChild(ZRImage);\n            imgEl.onload = function () {\n                self.dirtyStyle();\n            };\n            var imgStyle = imgEl.style;\n            imgStyle.image = textBackgroundColor.image;\n            imgStyle.x = x;\n            imgStyle.y = y;\n            imgStyle.width = width;\n            imgStyle.height = height;\n        }\n        if (textBorderWidth && textBorderColor) {\n            var rectStyle = rectEl.style;\n            rectStyle.lineWidth = textBorderWidth;\n            rectStyle.stroke = textBorderColor;\n            rectStyle.strokeOpacity = retrieve2(style.strokeOpacity, 1);\n            rectStyle.lineDash = style.borderDash;\n            rectStyle.lineDashOffset = style.borderDashOffset || 0;\n            rectEl.strokeContainThreshold = 0;\n            if (rectEl.hasFill() && rectEl.hasStroke()) {\n                rectStyle.strokeFirst = true;\n                rectStyle.lineWidth *= 2;\n            }\n        }\n        var commonStyle = (rectEl || imgEl).style;\n        commonStyle.shadowBlur = style.shadowBlur || 0;\n        commonStyle.shadowColor = style.shadowColor || 'transparent';\n        commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\n        commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\n        commonStyle.opacity = retrieve3(style.opacity, topStyle.opacity, 1);\n    };\n    ZRText.makeFont = function (style) {\n        var font = '';\n        if (style.fontSize || style.fontFamily || style.fontWeight) {\n            var fontSize = '';\n            if (typeof style.fontSize === 'string'\n                && (style.fontSize.indexOf('px') !== -1\n                    || style.fontSize.indexOf('rem') !== -1\n                    || style.fontSize.indexOf('em') !== -1)) {\n                fontSize = style.fontSize;\n            }\n            else if (!isNaN(+style.fontSize)) {\n                fontSize = style.fontSize + 'px';\n            }\n            else {\n                fontSize = '12px';\n            }\n            font = [\n                style.fontStyle,\n                style.fontWeight,\n                fontSize,\n                style.fontFamily || 'sans-serif'\n            ].join(' ');\n        }\n        return font && trim(font) || style.textFont || style.font;\n    };\n    return ZRText;\n}(Displayable));\nvar VALID_TEXT_ALIGN = { left: true, right: 1, center: 1 };\nvar VALID_TEXT_VERTICAL_ALIGN = { top: 1, bottom: 1, middle: 1 };\nexport function normalizeTextStyle(style) {\n    normalizeStyle(style);\n    each(style.rich, normalizeStyle);\n    return style;\n}\nfunction normalizeStyle(style) {\n    if (style) {\n        style.font = ZRText.makeFont(style);\n        var textAlign = style.align;\n        textAlign === 'middle' && (textAlign = 'center');\n        style.align = (textAlign == null || VALID_TEXT_ALIGN[textAlign]) ? textAlign : 'left';\n        var verticalAlign = style.verticalAlign;\n        verticalAlign === 'center' && (verticalAlign = 'middle');\n        style.verticalAlign = (verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign]) ? verticalAlign : 'top';\n        var textPadding = style.padding;\n        if (textPadding) {\n            style.padding = normalizeCssArray(style.padding);\n        }\n    }\n}\nfunction getStroke(stroke, lineWidth) {\n    return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n        ? null\n        : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n}\nfunction getFill(fill) {\n    return (fill == null || fill === 'none')\n        ? null\n        : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n}\nfunction getTextXForPadding(x, textAlign, textPadding) {\n    return textAlign === 'right'\n        ? (x - textPadding[1])\n        : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n}\nfunction getStyleText(style) {\n    var text = style.text;\n    text != null && (text += '');\n    return text;\n}\nfunction needDrawBackground(style) {\n    return !!(style.backgroundColor\n        || (style.borderWidth && style.borderColor));\n}\nexport default ZRText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}