{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { devicePixelRatio } from '../config';\nimport * as util from '../core/util';\nimport Layer from './Layer';\nimport requestAnimationFrame from '../animation/requestAnimationFrame';\nimport ZRImage from '../graphic/Image';\nimport env from '../core/env';\nimport { brush, brushSingle } from './graphic';\nimport { REDARAW_BIT } from '../graphic/constants';\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n  if (layer.__builtin__) {\n    return true;\n  }\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n  return true;\n}\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div');\n  domRoot.style.cssText = ['position:relative', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\nvar CanvasPainter = function () {\n  function CanvasPainter(root, storage, opts, id) {\n    this.type = 'canvas';\n    this._zlevelList = [];\n    this._prevDisplayList = [];\n    this._layers = {};\n    this._layerConfig = {};\n    this._needsManuallyCompositing = false;\n    this.type = 'canvas';\n    var singleCanvas = !root.nodeName || root.nodeName.toUpperCase() === 'CANVAS';\n    this._opts = opts = util.extend({}, opts || {});\n    this.dpr = opts.devicePixelRatio || devicePixelRatio;\n    this._singleCanvas = singleCanvas;\n    this.root = root;\n    var rootStyle = root.style;\n    if (rootStyle) {\n      rootStyle.webkitTapHighlightColor = 'transparent';\n      rootStyle.webkitUserSelect = 'none';\n      rootStyle.userSelect = 'none';\n      rootStyle['-webkit-touch-callout'] = 'none';\n      root.innerHTML = '';\n    }\n    this.storage = storage;\n    var zlevelList = this._zlevelList;\n    this._prevDisplayList = [];\n    var layers = this._layers;\n    if (!singleCanvas) {\n      this._width = this._getSize(0);\n      this._height = this._getSize(1);\n      var domRoot = this._domRoot = createRoot(this._width, this._height);\n      root.appendChild(domRoot);\n    } else {\n      var rootCanvas = root;\n      var width = rootCanvas.width;\n      var height = rootCanvas.height;\n      if (opts.width != null) {\n        width = opts.width;\n      }\n      if (opts.height != null) {\n        height = opts.height;\n      }\n      this.dpr = opts.devicePixelRatio || 1;\n      rootCanvas.width = width * this.dpr;\n      rootCanvas.height = height * this.dpr;\n      this._width = width;\n      this._height = height;\n      var mainLayer = new Layer(rootCanvas, this, this.dpr);\n      mainLayer.__builtin__ = true;\n      mainLayer.initContext();\n      layers[CANVAS_ZLEVEL] = mainLayer;\n      mainLayer.zlevel = CANVAS_ZLEVEL;\n      zlevelList.push(CANVAS_ZLEVEL);\n      this._domRoot = root;\n    }\n  }\n  CanvasPainter.prototype.getType = function () {\n    return 'canvas';\n  };\n  CanvasPainter.prototype.isSingleCanvas = function () {\n    return this._singleCanvas;\n  };\n  CanvasPainter.prototype.getViewportRoot = function () {\n    return this._domRoot;\n  };\n  CanvasPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n  CanvasPainter.prototype.refresh = function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var prevList = this._prevDisplayList;\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n    this._paintList(list, prevList, paintAll, this._redrawId);\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n    if (this._opts.useDirtyRect) {\n      this._prevDisplayList = list.slice();\n    }\n    return this;\n  };\n  CanvasPainter.prototype.refreshHover = function () {\n    this._paintHoverList(this.storage.getDisplayList(false));\n  };\n  CanvasPainter.prototype._paintHoverList = function (list) {\n    var len = list.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n    if (!len) {\n      return;\n    }\n    var scope = {\n      inHover: true,\n      viewWidth: this._width,\n      viewHeight: this._height\n    };\n    var ctx;\n    for (var i = 0; i < len; i++) {\n      var el = list[i];\n      if (el.__inHover) {\n        if (!hoverLayer) {\n          hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n        }\n        if (!ctx) {\n          ctx = hoverLayer.ctx;\n          ctx.save();\n        }\n        brush(ctx, el, scope, i === len - 1);\n      }\n    }\n    if (ctx) {\n      ctx.restore();\n    }\n  };\n  CanvasPainter.prototype.getHoverLayer = function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  };\n  CanvasPainter.prototype.paintOne = function (ctx, el) {\n    brushSingle(ctx, el);\n  };\n  CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n    paintAll = paintAll || false;\n    this._updateLayerStatus(list);\n    var _a = this._doPaintList(list, prevList, paintAll),\n      finished = _a.finished,\n      needsRefreshHover = _a.needsRefreshHover;\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n    if (needsRefreshHover) {\n      this._paintHoverList(list);\n    }\n    if (!finished) {\n      var self_1 = this;\n      requestAnimationFrame(function () {\n        self_1._paintList(list, prevList, paintAll, redrawId);\n      });\n    } else {\n      this.eachLayer(function (layer) {\n        layer.afterBrush && layer.afterBrush();\n      });\n    }\n  };\n  CanvasPainter.prototype._compositeManually = function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height);\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  };\n  CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n    var _this = this;\n    var layerList = [];\n    var useDirtyRect = this._opts.useDirtyRect;\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n    var finished = true;\n    var needsRefreshHover = false;\n    var _loop_1 = function (k) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var repaintRects = useDirtyRect && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this_1._zlevelList[0] ? this_1._backgroundColor : null;\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor, repaintRects);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor, repaintRects);\n        }\n      }\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n      var i;\n      var repaint = function (repaintRect) {\n        var scope = {\n          inHover: false,\n          allClipped: false,\n          prevEl: null,\n          viewWidth: _this._width,\n          viewHeight: _this._height\n        };\n        for (i = start; i < layer.__endIndex; i++) {\n          var el = list[i];\n          if (el.__inHover) {\n            needsRefreshHover = true;\n          }\n          _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n          if (useTimer) {\n            var dTime = Date.now() - startTime;\n            if (dTime > 15) {\n              break;\n            }\n          }\n        }\n        if (scope.prevElClipPaths) {\n          ctx.restore();\n        }\n      };\n      if (repaintRects) {\n        if (repaintRects.length === 0) {\n          i = layer.__endIndex;\n        } else {\n          var dpr = this_1.dpr;\n          for (var r = 0; r < repaintRects.length; ++r) {\n            var rect = repaintRects[r];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n            ctx.clip();\n            repaint(rect);\n            ctx.restore();\n          }\n        }\n      } else {\n        ctx.save();\n        repaint();\n        ctx.restore();\n      }\n      layer.__drawIndex = i;\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n    };\n    var this_1 = this;\n    for (var k = 0; k < layerList.length; k++) {\n      _loop_1(k);\n    }\n    if (env.wxa) {\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n    return {\n      finished: finished,\n      needsRefreshHover: needsRefreshHover\n    };\n  };\n  CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n    var ctx = currentLayer.ctx;\n    if (useDirtyRect) {\n      var paintRect = el.getPaintRect();\n      if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n        brush(ctx, el, scope, isLast);\n        el.setPrevPaintRect(paintRect);\n      }\n    } else {\n      brush(ctx, el, scope, isLast);\n    }\n  };\n  CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n    var layer = this._layers[zlevel];\n    if (!layer) {\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      } else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n        util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n      }\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n      this.insertLayer(zlevel, layer);\n      layer.initContext();\n    }\n    return layer;\n  };\n  CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var domRoot = this._domRoot;\n    var prevLayer = null;\n    var i = -1;\n    if (layersMap[zlevel]) {\n      util.logError('ZLevel ' + zlevel + ' has been used already');\n      return;\n    }\n    if (!isLayerValid(layer)) {\n      util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n      prevLayer = layersMap[zlevelList[i]];\n    }\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer;\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n    layer.__painter = this;\n  };\n  CanvasPainter.prototype.eachLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  };\n  CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n  CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n  CanvasPainter.prototype.getLayers = function () {\n    return this._layers;\n  };\n  CanvasPainter.prototype._updateLayerStatus = function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n        prevLayer.__endIndex = idx;\n      }\n    }\n    if (this._singleCanvas) {\n      for (var i_1 = 1; i_1 < list.length; i_1++) {\n        var el = list[i_1];\n        if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n    var prevZlevel;\n    var i;\n    for (i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer = void 0;\n      if (prevZlevel !== zlevel) {\n        prevZlevel = zlevel;\n        incrementalLayerCount = 0;\n      }\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n      if (!layer.__builtin__) {\n        util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n      if (layer !== prevLayer) {\n        layer.__used = true;\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n        layer.__startIndex = i;\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          layer.__drawIndex = -1;\n        }\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n      if (el.__dirty & REDARAW_BIT && !el.__inHover) {\n        layer.__dirty = true;\n        if (layer.incremental && layer.__drawIndex < 0) {\n          layer.__drawIndex = i;\n        }\n      }\n    }\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      }\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  };\n  CanvasPainter.prototype.clear = function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  };\n  CanvasPainter.prototype._clearLayer = function (layer) {\n    layer.clear();\n  };\n  CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n    util.each(this._layers, function (layer) {\n      layer.setUnpainted();\n    });\n  };\n  CanvasPainter.prototype.configLayer = function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  };\n  CanvasPainter.prototype.delLayer = function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n    if (!layer) {\n      return;\n    }\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  };\n  CanvasPainter.prototype.resize = function (width, height) {\n    if (!this._domRoot.style) {\n      if (width == null || height == null) {\n        return;\n      }\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot;\n      domRoot.style.display = 'none';\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = '';\n      if (this._width !== width || height !== this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n        this.refresh(true);\n      }\n      this._width = width;\n      this._height = height;\n    }\n    return this;\n  };\n  CanvasPainter.prototype.clearLayer = function (zlevel) {\n    var layer = this._layers[zlevel];\n    if (layer) {\n      layer.clear();\n    }\n  };\n  CanvasPainter.prototype.dispose = function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  };\n  CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n    var ctx = imageLayer.ctx;\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width_1 = imageLayer.dom.width;\n      var height_1 = imageLayer.dom.height;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\n        } else if (layer.renderToCanvas) {\n          ctx.save();\n          layer.renderToCanvas(ctx);\n          ctx.restore();\n        }\n      });\n    } else {\n      var scope = {\n        inHover: false,\n        viewWidth: this._width,\n        viewHeight: this._height\n      };\n      var displayList = this.storage.getDisplayList(true);\n      for (var i = 0, len = displayList.length; i < len; i++) {\n        var el = displayList[i];\n        brush(ctx, el, scope, i === len - 1);\n      }\n    }\n    return imageLayer.dom;\n  };\n  CanvasPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n  CanvasPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n  CanvasPainter.prototype._getSize = function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  };\n  CanvasPainter.prototype.pathToImage = function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = path.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      x: path.x,\n      y: path.y,\n      scaleX: path.scaleX,\n      scaleY: path.scaleY,\n      rotation: path.rotation,\n      originX: path.originX,\n      originY: path.originY\n    };\n    path.x = leftMargin - rect.x;\n    path.y = topMargin - rect.y;\n    path.rotation = 0;\n    path.scaleX = 1;\n    path.scaleY = 1;\n    path.updateTransform();\n    if (path) {\n      brush(ctx, path, {\n        inHover: false,\n        viewWidth: this._width,\n        viewHeight: this._height\n      }, true);\n    }\n    var imgShape = new ZRImage({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n    util.extend(path, pathTransform);\n    return imgShape;\n  };\n  return CanvasPainter;\n}();\nexport default CanvasPainter;\n;","map":{"version":3,"names":["devicePixelRatio","util","Layer","requestAnimationFrame","ZRImage","env","brush","brushSingle","REDARAW_BIT","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","parseInt10","val","parseInt","isLayerValid","layer","__builtin__","resize","refresh","createRoot","width","height","domRoot","document","createElement","style","cssText","join","CanvasPainter","root","storage","opts","id","type","_zlevelList","_prevDisplayList","_layers","_layerConfig","_needsManuallyCompositing","singleCanvas","nodeName","toUpperCase","_opts","extend","dpr","_singleCanvas","rootStyle","webkitTapHighlightColor","webkitUserSelect","userSelect","innerHTML","zlevelList","layers","_width","_getSize","_height","_domRoot","appendChild","rootCanvas","mainLayer","initContext","zlevel","push","prototype","getType","isSingleCanvas","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","list","getDisplayList","prevList","_redrawId","Math","random","_paintList","i","length","z","clearColor","_backgroundColor","useDirtyRect","slice","refreshHover","_paintHoverList","len","hoverLayer","_hoverlayer","clear","scope","inHover","viewWidth","viewHeight","ctx","el","__inHover","getLayer","save","restore","getHoverLayer","paintOne","redrawId","_updateLayerStatus","_a","_doPaintList","finished","needsRefreshHover","_compositeManually","self_1","eachLayer","afterBrush","clearRect","eachBuiltinLayer","virtual","drawImage","dom","_this","layerList","zi","__dirty","_loop_1","k","repaintRects","createRepaintRects","this_1","start","__startIndex","__drawIndex","useTimer","incremental","Date","now","startTime","__endIndex","firstEl","notClear","console","error","repaint","repaintRect","allClipped","prevEl","_doPaintEl","dTime","prevElClipPaths","r","rect","beginPath","x","y","clip","wxa","each","draw","currentLayer","isLast","paintRect","getPaintRect","intersect","setPrevPaintRect","merge","insertLayer","layersMap","prevLayer","logError","splice","prevDom","nextSibling","insertBefore","firstChild","__painter","cb","context","call","eachOtherLayer","getLayers","__used","updatePrevLayer","idx","i_1","incrementalLayerCount","prevZlevel","getElementCount","_clearLayer","setBackgroundColor","backgroundColor","setUnpainted","configLayer","config","layerConfig","_zlevel","delLayer","parentNode","removeChild","indexOf","display","hasOwnProperty","clearLayer","dispose","getRenderedCanvas","imageLayer","pixelRatio","width_1","height_1","renderToCanvas","displayList","getWidth","getHeight","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","pathToImage","path","canvas","getContext","getBoundingRect","shadowBlurSize","shadowBlur","shadowOffsetX","shadowOffsetY","lineWidth","hasStroke","leftMargin","max","rightMargin","topMargin","bottomMargin","scale","pathTransform","scaleX","scaleY","rotation","originX","originY","updateTransform","imgShape","image"],"sources":["/Users/jiong/Downloads/my-app/node_modules/zrender/lib/canvas/Painter.js"],"sourcesContent":["import { devicePixelRatio } from '../config';\nimport * as util from '../core/util';\nimport Layer from './Layer';\nimport requestAnimationFrame from '../animation/requestAnimationFrame';\nimport ZRImage from '../graphic/Image';\nimport env from '../core/env';\nimport { brush, brushSingle } from './graphic';\nimport { REDARAW_BIT } from '../graphic/constants';\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction isLayerValid(layer) {\n    if (!layer) {\n        return false;\n    }\n    if (layer.__builtin__) {\n        return true;\n    }\n    if (typeof (layer.resize) !== 'function'\n        || typeof (layer.refresh) !== 'function') {\n        return false;\n    }\n    return true;\n}\nfunction createRoot(width, height) {\n    var domRoot = document.createElement('div');\n    domRoot.style.cssText = [\n        'position:relative',\n        'width:' + width + 'px',\n        'height:' + height + 'px',\n        'padding:0',\n        'margin:0',\n        'border-width:0'\n    ].join(';') + ';';\n    return domRoot;\n}\nvar CanvasPainter = (function () {\n    function CanvasPainter(root, storage, opts, id) {\n        this.type = 'canvas';\n        this._zlevelList = [];\n        this._prevDisplayList = [];\n        this._layers = {};\n        this._layerConfig = {};\n        this._needsManuallyCompositing = false;\n        this.type = 'canvas';\n        var singleCanvas = !root.nodeName\n            || root.nodeName.toUpperCase() === 'CANVAS';\n        this._opts = opts = util.extend({}, opts || {});\n        this.dpr = opts.devicePixelRatio || devicePixelRatio;\n        this._singleCanvas = singleCanvas;\n        this.root = root;\n        var rootStyle = root.style;\n        if (rootStyle) {\n            rootStyle.webkitTapHighlightColor = 'transparent';\n            rootStyle.webkitUserSelect = 'none';\n            rootStyle.userSelect = 'none';\n            rootStyle['-webkit-touch-callout'] = 'none';\n            root.innerHTML = '';\n        }\n        this.storage = storage;\n        var zlevelList = this._zlevelList;\n        this._prevDisplayList = [];\n        var layers = this._layers;\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n            var domRoot = this._domRoot = createRoot(this._width, this._height);\n            root.appendChild(domRoot);\n        }\n        else {\n            var rootCanvas = root;\n            var width = rootCanvas.width;\n            var height = rootCanvas.height;\n            if (opts.width != null) {\n                width = opts.width;\n            }\n            if (opts.height != null) {\n                height = opts.height;\n            }\n            this.dpr = opts.devicePixelRatio || 1;\n            rootCanvas.width = width * this.dpr;\n            rootCanvas.height = height * this.dpr;\n            this._width = width;\n            this._height = height;\n            var mainLayer = new Layer(rootCanvas, this, this.dpr);\n            mainLayer.__builtin__ = true;\n            mainLayer.initContext();\n            layers[CANVAS_ZLEVEL] = mainLayer;\n            mainLayer.zlevel = CANVAS_ZLEVEL;\n            zlevelList.push(CANVAS_ZLEVEL);\n            this._domRoot = root;\n        }\n    }\n    CanvasPainter.prototype.getType = function () {\n        return 'canvas';\n    };\n    CanvasPainter.prototype.isSingleCanvas = function () {\n        return this._singleCanvas;\n    };\n    CanvasPainter.prototype.getViewportRoot = function () {\n        return this._domRoot;\n    };\n    CanvasPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    CanvasPainter.prototype.refresh = function (paintAll) {\n        var list = this.storage.getDisplayList(true);\n        var prevList = this._prevDisplayList;\n        var zlevelList = this._zlevelList;\n        this._redrawId = Math.random();\n        this._paintList(list, prevList, paintAll, this._redrawId);\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__ && layer.refresh) {\n                var clearColor = i === 0 ? this._backgroundColor : null;\n                layer.refresh(clearColor);\n            }\n        }\n        if (this._opts.useDirtyRect) {\n            this._prevDisplayList = list.slice();\n        }\n        return this;\n    };\n    CanvasPainter.prototype.refreshHover = function () {\n        this._paintHoverList(this.storage.getDisplayList(false));\n    };\n    CanvasPainter.prototype._paintHoverList = function (list) {\n        var len = list.length;\n        var hoverLayer = this._hoverlayer;\n        hoverLayer && hoverLayer.clear();\n        if (!len) {\n            return;\n        }\n        var scope = {\n            inHover: true,\n            viewWidth: this._width,\n            viewHeight: this._height\n        };\n        var ctx;\n        for (var i = 0; i < len; i++) {\n            var el = list[i];\n            if (el.__inHover) {\n                if (!hoverLayer) {\n                    hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n                }\n                if (!ctx) {\n                    ctx = hoverLayer.ctx;\n                    ctx.save();\n                }\n                brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        if (ctx) {\n            ctx.restore();\n        }\n    };\n    CanvasPainter.prototype.getHoverLayer = function () {\n        return this.getLayer(HOVER_LAYER_ZLEVEL);\n    };\n    CanvasPainter.prototype.paintOne = function (ctx, el) {\n        brushSingle(ctx, el);\n    };\n    CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n        if (this._redrawId !== redrawId) {\n            return;\n        }\n        paintAll = paintAll || false;\n        this._updateLayerStatus(list);\n        var _a = this._doPaintList(list, prevList, paintAll), finished = _a.finished, needsRefreshHover = _a.needsRefreshHover;\n        if (this._needsManuallyCompositing) {\n            this._compositeManually();\n        }\n        if (needsRefreshHover) {\n            this._paintHoverList(list);\n        }\n        if (!finished) {\n            var self_1 = this;\n            requestAnimationFrame(function () {\n                self_1._paintList(list, prevList, paintAll, redrawId);\n            });\n        }\n        else {\n            this.eachLayer(function (layer) {\n                layer.afterBrush && layer.afterBrush();\n            });\n        }\n    };\n    CanvasPainter.prototype._compositeManually = function () {\n        var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n        var width = this._domRoot.width;\n        var height = this._domRoot.height;\n        ctx.clearRect(0, 0, width, height);\n        this.eachBuiltinLayer(function (layer) {\n            if (layer.virtual) {\n                ctx.drawImage(layer.dom, 0, 0, width, height);\n            }\n        });\n    };\n    CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n        var _this = this;\n        var layerList = [];\n        var useDirtyRect = this._opts.useDirtyRect;\n        for (var zi = 0; zi < this._zlevelList.length; zi++) {\n            var zlevel = this._zlevelList[zi];\n            var layer = this._layers[zlevel];\n            if (layer.__builtin__\n                && layer !== this._hoverlayer\n                && (layer.__dirty || paintAll)) {\n                layerList.push(layer);\n            }\n        }\n        var finished = true;\n        var needsRefreshHover = false;\n        var _loop_1 = function (k) {\n            var layer = layerList[k];\n            var ctx = layer.ctx;\n            var repaintRects = useDirtyRect\n                && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n            var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n            var useTimer = !paintAll && layer.incremental && Date.now;\n            var startTime = useTimer && Date.now();\n            var clearColor = layer.zlevel === this_1._zlevelList[0]\n                ? this_1._backgroundColor : null;\n            if (layer.__startIndex === layer.__endIndex) {\n                layer.clear(false, clearColor, repaintRects);\n            }\n            else if (start === layer.__startIndex) {\n                var firstEl = list[start];\n                if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n                    layer.clear(false, clearColor, repaintRects);\n                }\n            }\n            if (start === -1) {\n                console.error('For some unknown reason. drawIndex is -1');\n                start = layer.__startIndex;\n            }\n            var i;\n            var repaint = function (repaintRect) {\n                var scope = {\n                    inHover: false,\n                    allClipped: false,\n                    prevEl: null,\n                    viewWidth: _this._width,\n                    viewHeight: _this._height\n                };\n                for (i = start; i < layer.__endIndex; i++) {\n                    var el = list[i];\n                    if (el.__inHover) {\n                        needsRefreshHover = true;\n                    }\n                    _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n                    if (useTimer) {\n                        var dTime = Date.now() - startTime;\n                        if (dTime > 15) {\n                            break;\n                        }\n                    }\n                }\n                if (scope.prevElClipPaths) {\n                    ctx.restore();\n                }\n            };\n            if (repaintRects) {\n                if (repaintRects.length === 0) {\n                    i = layer.__endIndex;\n                }\n                else {\n                    var dpr = this_1.dpr;\n                    for (var r = 0; r < repaintRects.length; ++r) {\n                        var rect = repaintRects[r];\n                        ctx.save();\n                        ctx.beginPath();\n                        ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n                        ctx.clip();\n                        repaint(rect);\n                        ctx.restore();\n                    }\n                }\n            }\n            else {\n                ctx.save();\n                repaint();\n                ctx.restore();\n            }\n            layer.__drawIndex = i;\n            if (layer.__drawIndex < layer.__endIndex) {\n                finished = false;\n            }\n        };\n        var this_1 = this;\n        for (var k = 0; k < layerList.length; k++) {\n            _loop_1(k);\n        }\n        if (env.wxa) {\n            util.each(this._layers, function (layer) {\n                if (layer && layer.ctx && layer.ctx.draw) {\n                    layer.ctx.draw();\n                }\n            });\n        }\n        return {\n            finished: finished,\n            needsRefreshHover: needsRefreshHover\n        };\n    };\n    CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n        var ctx = currentLayer.ctx;\n        if (useDirtyRect) {\n            var paintRect = el.getPaintRect();\n            if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n                brush(ctx, el, scope, isLast);\n                el.setPrevPaintRect(paintRect);\n            }\n        }\n        else {\n            brush(ctx, el, scope, isLast);\n        }\n    };\n    CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n        if (this._singleCanvas && !this._needsManuallyCompositing) {\n            zlevel = CANVAS_ZLEVEL;\n        }\n        var layer = this._layers[zlevel];\n        if (!layer) {\n            layer = new Layer('zr_' + zlevel, this, this.dpr);\n            layer.zlevel = zlevel;\n            layer.__builtin__ = true;\n            if (this._layerConfig[zlevel]) {\n                util.merge(layer, this._layerConfig[zlevel], true);\n            }\n            else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n                util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n            }\n            if (virtual) {\n                layer.virtual = virtual;\n            }\n            this.insertLayer(zlevel, layer);\n            layer.initContext();\n        }\n        return layer;\n    };\n    CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n        var layersMap = this._layers;\n        var zlevelList = this._zlevelList;\n        var len = zlevelList.length;\n        var domRoot = this._domRoot;\n        var prevLayer = null;\n        var i = -1;\n        if (layersMap[zlevel]) {\n            util.logError('ZLevel ' + zlevel + ' has been used already');\n            return;\n        }\n        if (!isLayerValid(layer)) {\n            util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n            return;\n        }\n        if (len > 0 && zlevel > zlevelList[0]) {\n            for (i = 0; i < len - 1; i++) {\n                if (zlevelList[i] < zlevel\n                    && zlevelList[i + 1] > zlevel) {\n                    break;\n                }\n            }\n            prevLayer = layersMap[zlevelList[i]];\n        }\n        zlevelList.splice(i + 1, 0, zlevel);\n        layersMap[zlevel] = layer;\n        if (!layer.virtual) {\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n        }\n        layer.__painter = this;\n    };\n    CanvasPainter.prototype.eachLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            cb.call(context, this._layers[z], z);\n        }\n    };\n    CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.getLayers = function () {\n        return this._layers;\n    };\n    CanvasPainter.prototype._updateLayerStatus = function (list) {\n        this.eachBuiltinLayer(function (layer, z) {\n            layer.__dirty = layer.__used = false;\n        });\n        function updatePrevLayer(idx) {\n            if (prevLayer) {\n                if (prevLayer.__endIndex !== idx) {\n                    prevLayer.__dirty = true;\n                }\n                prevLayer.__endIndex = idx;\n            }\n        }\n        if (this._singleCanvas) {\n            for (var i_1 = 1; i_1 < list.length; i_1++) {\n                var el = list[i_1];\n                if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n                    this._needsManuallyCompositing = true;\n                    break;\n                }\n            }\n        }\n        var prevLayer = null;\n        var incrementalLayerCount = 0;\n        var prevZlevel;\n        var i;\n        for (i = 0; i < list.length; i++) {\n            var el = list[i];\n            var zlevel = el.zlevel;\n            var layer = void 0;\n            if (prevZlevel !== zlevel) {\n                prevZlevel = zlevel;\n                incrementalLayerCount = 0;\n            }\n            if (el.incremental) {\n                layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n                layer.incremental = true;\n                incrementalLayerCount = 1;\n            }\n            else {\n                layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n            }\n            if (!layer.__builtin__) {\n                util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n            }\n            if (layer !== prevLayer) {\n                layer.__used = true;\n                if (layer.__startIndex !== i) {\n                    layer.__dirty = true;\n                }\n                layer.__startIndex = i;\n                if (!layer.incremental) {\n                    layer.__drawIndex = i;\n                }\n                else {\n                    layer.__drawIndex = -1;\n                }\n                updatePrevLayer(i);\n                prevLayer = layer;\n            }\n            if ((el.__dirty & REDARAW_BIT) && !el.__inHover) {\n                layer.__dirty = true;\n                if (layer.incremental && layer.__drawIndex < 0) {\n                    layer.__drawIndex = i;\n                }\n            }\n        }\n        updatePrevLayer(i);\n        this.eachBuiltinLayer(function (layer, z) {\n            if (!layer.__used && layer.getElementCount() > 0) {\n                layer.__dirty = true;\n                layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n            }\n            if (layer.__dirty && layer.__drawIndex < 0) {\n                layer.__drawIndex = layer.__startIndex;\n            }\n        });\n    };\n    CanvasPainter.prototype.clear = function () {\n        this.eachBuiltinLayer(this._clearLayer);\n        return this;\n    };\n    CanvasPainter.prototype._clearLayer = function (layer) {\n        layer.clear();\n    };\n    CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n        util.each(this._layers, function (layer) {\n            layer.setUnpainted();\n        });\n    };\n    CanvasPainter.prototype.configLayer = function (zlevel, config) {\n        if (config) {\n            var layerConfig = this._layerConfig;\n            if (!layerConfig[zlevel]) {\n                layerConfig[zlevel] = config;\n            }\n            else {\n                util.merge(layerConfig[zlevel], config, true);\n            }\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var _zlevel = this._zlevelList[i];\n                if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n                    var layer = this._layers[_zlevel];\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        }\n    };\n    CanvasPainter.prototype.delLayer = function (zlevel) {\n        var layers = this._layers;\n        var zlevelList = this._zlevelList;\n        var layer = layers[zlevel];\n        if (!layer) {\n            return;\n        }\n        layer.dom.parentNode.removeChild(layer.dom);\n        delete layers[zlevel];\n        zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n    };\n    CanvasPainter.prototype.resize = function (width, height) {\n        if (!this._domRoot.style) {\n            if (width == null || height == null) {\n                return;\n            }\n            this._width = width;\n            this._height = height;\n            this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n        }\n        else {\n            var domRoot = this._domRoot;\n            domRoot.style.display = 'none';\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n            width = this._getSize(0);\n            height = this._getSize(1);\n            domRoot.style.display = '';\n            if (this._width !== width || height !== this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                this.refresh(true);\n            }\n            this._width = width;\n            this._height = height;\n        }\n        return this;\n    };\n    CanvasPainter.prototype.clearLayer = function (zlevel) {\n        var layer = this._layers[zlevel];\n        if (layer) {\n            layer.clear();\n        }\n    };\n    CanvasPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this.root =\n            this.storage =\n                this._domRoot =\n                    this._layers = null;\n    };\n    CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n        opts = opts || {};\n        if (this._singleCanvas && !this._compositeManually) {\n            return this._layers[CANVAS_ZLEVEL].dom;\n        }\n        var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n        imageLayer.initContext();\n        imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n        var ctx = imageLayer.ctx;\n        if (opts.pixelRatio <= this.dpr) {\n            this.refresh();\n            var width_1 = imageLayer.dom.width;\n            var height_1 = imageLayer.dom.height;\n            this.eachLayer(function (layer) {\n                if (layer.__builtin__) {\n                    ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\n                }\n                else if (layer.renderToCanvas) {\n                    ctx.save();\n                    layer.renderToCanvas(ctx);\n                    ctx.restore();\n                }\n            });\n        }\n        else {\n            var scope = {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            };\n            var displayList = this.storage.getDisplayList(true);\n            for (var i = 0, len = displayList.length; i < len; i++) {\n                var el = displayList[i];\n                brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        return imageLayer.dom;\n    };\n    CanvasPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    CanvasPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    CanvasPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    CanvasPainter.prototype.pathToImage = function (path, dpr) {\n        dpr = dpr || this.dpr;\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var rect = path.getBoundingRect();\n        var style = path.style;\n        var shadowBlurSize = style.shadowBlur * dpr;\n        var shadowOffsetX = style.shadowOffsetX * dpr;\n        var shadowOffsetY = style.shadowOffsetY * dpr;\n        var lineWidth = path.hasStroke() ? style.lineWidth : 0;\n        var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n        var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n        var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n        var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n        var width = rect.width + leftMargin + rightMargin;\n        var height = rect.height + topMargin + bottomMargin;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        ctx.scale(dpr, dpr);\n        ctx.clearRect(0, 0, width, height);\n        ctx.dpr = dpr;\n        var pathTransform = {\n            x: path.x,\n            y: path.y,\n            scaleX: path.scaleX,\n            scaleY: path.scaleY,\n            rotation: path.rotation,\n            originX: path.originX,\n            originY: path.originY\n        };\n        path.x = leftMargin - rect.x;\n        path.y = topMargin - rect.y;\n        path.rotation = 0;\n        path.scaleX = 1;\n        path.scaleY = 1;\n        path.updateTransform();\n        if (path) {\n            brush(ctx, path, {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            }, true);\n        }\n        var imgShape = new ZRImage({\n            style: {\n                x: 0,\n                y: 0,\n                image: canvas\n            }\n        });\n        util.extend(path, pathTransform);\n        return imgShape;\n    };\n    return CanvasPainter;\n}());\nexport default CanvasPainter;\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}