{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieve, defaults, extend, each, isObject } from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { createTextStyle } from '../../label/labelStyle';\nimport Model from '../../model/Model';\nimport { isRadianAroundZero, remRadian } from '../../util/number';\nimport { createSymbol } from '../../util/symbol';\nimport * as matrixUtil from 'zrender/lib/core/matrix';\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector';\nimport { shouldShowAllLabels } from '../../coord/axisHelper';\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n */\n\nvar AxisBuilder = /** @class */\nfunction () {\n  function AxisBuilder(axisModel, opt) {\n    this.group = new graphic.Group();\n    this.opt = opt;\n    this.axisModel = axisModel; // Default value\n\n    defaults(opt, {\n      labelOffset: 0,\n      nameDirection: 1,\n      tickDirection: 1,\n      labelDirection: 1,\n      silent: true,\n      handleAutoShown: function () {\n        return true;\n      }\n    }); // FIXME Not use a seperate text group?\n\n    var transformGroup = new graphic.Group({\n      x: opt.position[0],\n      y: opt.position[1],\n      rotation: opt.rotation\n    }); // this.group.add(transformGroup);\n    // this._transformGroup = transformGroup;\n\n    transformGroup.updateTransform();\n    this._transformGroup = transformGroup;\n  }\n  AxisBuilder.prototype.hasBuilder = function (name) {\n    return !!builders[name];\n  };\n  AxisBuilder.prototype.add = function (name) {\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\n  };\n  AxisBuilder.prototype.getGroup = function () {\n    return this.group;\n  };\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n    var rotationDiff = remRadian(textRotation - axisRotation);\n    var textAlign;\n    var textVerticalAlign;\n    if (isRadianAroundZero(rotationDiff)) {\n      // Label is parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n      textAlign = 'center';\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\n      // Label is inverse parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n      textAlign = 'center';\n    } else {\n      textVerticalAlign = 'middle';\n      if (rotationDiff > 0 && rotationDiff < PI) {\n        textAlign = direction > 0 ? 'right' : 'left';\n      } else {\n        textAlign = direction > 0 ? 'left' : 'right';\n      }\n    }\n    return {\n      rotation: rotationDiff,\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n  };\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n    var eventData = {\n      componentType: axisModel.mainType,\n      componentIndex: axisModel.componentIndex\n    };\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n    return eventData;\n  };\n  AxisBuilder.isLabelSilent = function (axisModel) {\n    var tooltipOpt = axisModel.get('tooltip');\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n  };\n  return AxisBuilder;\n}();\n;\nvar builders = {\n  axisLine: function (opt, axisModel, group, transformGroup) {\n    var shown = axisModel.get(['axisLine', 'show']);\n    if (shown === 'auto' && opt.handleAutoShown) {\n      shown = opt.handleAutoShown('axisLine');\n    }\n    if (!shown) {\n      return;\n    }\n    var extent = axisModel.axis.getExtent();\n    var matrix = transformGroup.transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\n    var line = new graphic.Line({\n      // Id for animation\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    });\n    line.anid = 'line';\n    group.add(line);\n    var arrows = axisModel.get(['axisLine', 'symbol']);\n    var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\n    var arrowOffset = axisModel.get(['axisLine', 'symbolOffset']) || 0;\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n      var symbolWidth_1 = arrowSize[0];\n      var symbolHeight_1 = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          symbol.attr({\n            rotation: point.rotate,\n            x: pt1[0] + r * Math.cos(opt.rotation),\n            y: pt1[1] - r * Math.sin(opt.rotation),\n            silent: true,\n            z2: 11\n          });\n          group.add(symbol);\n        }\n      });\n    }\n  },\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection);\n  },\n  axisName: function (opt, axisModel, group, transformGroup) {\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n    if (!name) {\n      return;\n    }\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2,\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation,\n      // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\n    var textEl = new graphic.Text({\n      x: pos[0],\n      y: pos[1],\n      rotation: labelLayout.rotation,\n      silent: AxisBuilder.isLabelSilent(axisModel),\n      style: createTextStyle(textStyleModel, {\n        text: name,\n        font: textFont,\n        overflow: 'truncate',\n        width: maxWidth,\n        ellipsis: ellipsis,\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\n        align: textStyleModel.get('align') || labelLayout.textAlign,\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n      }),\n      z2: 1\n    });\n    graphic.setTooltipConfig({\n      el: textEl,\n      componentModel: axisModel,\n      itemName: name\n    });\n    textEl.__fullText = name; // Id for animation\n\n    textEl.anid = 'name';\n    if (axisModel.get('triggerEvent')) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisName';\n      eventData.name = name;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\nfunction isTwoLabelOverlapped(current, next) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n    var tickEl = new graphic.Line({\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      autoBatch: true,\n      silent: true\n    });\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\n    tickEls.push(tickEl);\n  }\n  return tickEls;\n}\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  var shown = tickModel.get('show');\n  if (shown === 'auto' && opt.handleAutoShown) {\n    shown = opt.handleAutoShown('axisTick');\n  }\n  if (!shown || axis.scale.isBlank()) {\n    return;\n  }\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }), 'ticks');\n  for (var i = 0; i < ticksEls.length; i++) {\n    group.add(ticksEls[i]);\n  }\n  return ticksEls;\n}\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n  var minorTicksCoords = axis.getMinorTicksCoords();\n  if (!minorTicksCoords.length) {\n    return;\n  }\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }));\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      group.add(minorTicksEls[k]);\n    }\n  }\n}\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = AxisBuilder.isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n    if (rawCategoryData && rawCategoryData[tickValue]) {\n      var rawCategoryItem = rawCategoryData[tickValue];\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\n      }\n    }\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\n    var tickCoord = axis.dataToCoord(tickValue);\n    var textEl = new graphic.Text({\n      x: tickCoord,\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10,\n      style: createTextStyle(itemLabelModel, {\n        text: formattedLabel,\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n        fill: typeof textColor === 'function' ? textColor(\n        // (1) In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        // (2) Compatible with previous version, which always use formatted label as\n        // input. But in interval scale the formatted label is like '223,445', which\n        // maked user repalce ','. So we modify it to return original val but remain\n        // it as 'string' to avoid error in replacing.\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n      })\n    });\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\n\n    if (triggerEvent) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisLabel';\n      eventData.value = rawLabel;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\nexport default AxisBuilder;","map":{"version":3,"names":["retrieve","defaults","extend","each","isObject","graphic","getECData","createTextStyle","Model","isRadianAroundZero","remRadian","createSymbol","matrixUtil","applyTransform","v2ApplyTransform","shouldShowAllLabels","PI","Math","AxisBuilder","axisModel","opt","group","Group","labelOffset","nameDirection","tickDirection","labelDirection","silent","handleAutoShown","transformGroup","x","position","y","rotation","updateTransform","_transformGroup","prototype","hasBuilder","name","builders","add","getGroup","innerTextLayout","axisRotation","textRotation","direction","rotationDiff","textAlign","textVerticalAlign","makeAxisEventDataBase","eventData","componentType","mainType","componentIndex","isLabelSilent","tooltipOpt","get","show","axisLine","shown","extent","axis","getExtent","matrix","transform","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","line","Line","subPixelOptimize","shape","x1","y1","x2","y2","style","strokeContainThreshold","z2","anid","arrows","arrowSize","arrowOffset","symbolWidth_1","symbolHeight_1","rotate","offset","r","sqrt","point","index","symbol","stroke","attr","cos","sin","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","axisName","nameLocation","textStyleModel","gap","gapSignal","pos","isNameLocationCenter","labelLayout","nameRotation","axisNameAvailableWidth","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","textEl","Text","text","font","overflow","width","fill","getTextColor","align","verticalAlign","setTooltipConfig","el","componentModel","itemName","__fullText","targetType","decomposeTransform","textPosition","textRotate","inverse","onLeft","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","length","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","ignore","current","next","firstRect","getBoundingRect","clone","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","anidPrefix","i","tickCoord","coord","tickEl","autoBatch","tickValue","push","tickModel","scale","isBlank","lineStyleModel","getTicksCoords","minorTickModel","minorTicksCoords","getMinorTicksCoords","minorTickLineStyle","minorTicksEls","k","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","rawCategoryData","getCategories","triggerEvent","labelItem","type","getRawOrdinalNumber","formattedLabel","rawLabel","itemLabelModel","rawCategoryItem","textStyle","ecModel","textColor","dataToCoord","getShallow","value"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/component/axis/AxisBuilder.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieve, defaults, extend, each, isObject } from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { createTextStyle } from '../../label/labelStyle';\nimport Model from '../../model/Model';\nimport { isRadianAroundZero, remRadian } from '../../util/number';\nimport { createSymbol } from '../../util/symbol';\nimport * as matrixUtil from 'zrender/lib/core/matrix';\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector';\nimport { shouldShowAllLabels } from '../../coord/axisHelper';\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n */\n\nvar AxisBuilder =\n/** @class */\nfunction () {\n  function AxisBuilder(axisModel, opt) {\n    this.group = new graphic.Group();\n    this.opt = opt;\n    this.axisModel = axisModel; // Default value\n\n    defaults(opt, {\n      labelOffset: 0,\n      nameDirection: 1,\n      tickDirection: 1,\n      labelDirection: 1,\n      silent: true,\n      handleAutoShown: function () {\n        return true;\n      }\n    }); // FIXME Not use a seperate text group?\n\n    var transformGroup = new graphic.Group({\n      x: opt.position[0],\n      y: opt.position[1],\n      rotation: opt.rotation\n    }); // this.group.add(transformGroup);\n    // this._transformGroup = transformGroup;\n\n    transformGroup.updateTransform();\n    this._transformGroup = transformGroup;\n  }\n\n  AxisBuilder.prototype.hasBuilder = function (name) {\n    return !!builders[name];\n  };\n\n  AxisBuilder.prototype.add = function (name) {\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\n  };\n\n  AxisBuilder.prototype.getGroup = function () {\n    return this.group;\n  };\n\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n    var rotationDiff = remRadian(textRotation - axisRotation);\n    var textAlign;\n    var textVerticalAlign;\n\n    if (isRadianAroundZero(rotationDiff)) {\n      // Label is parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n      textAlign = 'center';\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\n      // Label is inverse parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n      textAlign = 'center';\n    } else {\n      textVerticalAlign = 'middle';\n\n      if (rotationDiff > 0 && rotationDiff < PI) {\n        textAlign = direction > 0 ? 'right' : 'left';\n      } else {\n        textAlign = direction > 0 ? 'left' : 'right';\n      }\n    }\n\n    return {\n      rotation: rotationDiff,\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n  };\n\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n    var eventData = {\n      componentType: axisModel.mainType,\n      componentIndex: axisModel.componentIndex\n    };\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n    return eventData;\n  };\n\n  AxisBuilder.isLabelSilent = function (axisModel) {\n    var tooltipOpt = axisModel.get('tooltip');\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n  };\n\n  return AxisBuilder;\n}();\n\n;\nvar builders = {\n  axisLine: function (opt, axisModel, group, transformGroup) {\n    var shown = axisModel.get(['axisLine', 'show']);\n\n    if (shown === 'auto' && opt.handleAutoShown) {\n      shown = opt.handleAutoShown('axisLine');\n    }\n\n    if (!shown) {\n      return;\n    }\n\n    var extent = axisModel.axis.getExtent();\n    var matrix = transformGroup.transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\n    var line = new graphic.Line({\n      // Id for animation\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    });\n    line.anid = 'line';\n    group.add(line);\n    var arrows = axisModel.get(['axisLine', 'symbol']);\n    var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\n    var arrowOffset = axisModel.get(['axisLine', 'symbolOffset']) || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth_1 = arrowSize[0];\n      var symbolHeight_1 = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          symbol.attr({\n            rotation: point.rotate,\n            x: pt1[0] + r * Math.cos(opt.rotation),\n            y: pt1[1] - r * Math.sin(opt.rotation),\n            silent: true,\n            z2: 11\n          });\n          group.add(symbol);\n        }\n      });\n    }\n  },\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection);\n  },\n  axisName: function (opt, axisModel, group, transformGroup) {\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\n    var textEl = new graphic.Text({\n      x: pos[0],\n      y: pos[1],\n      rotation: labelLayout.rotation,\n      silent: AxisBuilder.isLabelSilent(axisModel),\n      style: createTextStyle(textStyleModel, {\n        text: name,\n        font: textFont,\n        overflow: 'truncate',\n        width: maxWidth,\n        ellipsis: ellipsis,\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\n        align: textStyleModel.get('align') || labelLayout.textAlign,\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n      }),\n      z2: 1\n    });\n    graphic.setTooltipConfig({\n      el: textEl,\n      componentModel: axisModel,\n      itemName: name\n    });\n    textEl.__fullText = name; // Id for animation\n\n    textEl.anid = 'name';\n\n    if (axisModel.get('triggerEvent')) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisName';\n      eventData.name = name;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      autoBatch: true,\n      silent: true\n    });\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  var shown = tickModel.get('show');\n\n  if (shown === 'auto' && opt.handleAutoShown) {\n    shown = opt.handleAutoShown('axisTick');\n  }\n\n  if (!shown || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = AxisBuilder.isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue]) {\n      var rawCategoryItem = rawCategoryData[tickValue];\n\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\n      }\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\n    var tickCoord = axis.dataToCoord(tickValue);\n    var textEl = new graphic.Text({\n      x: tickCoord,\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10,\n      style: createTextStyle(itemLabelModel, {\n        text: formattedLabel,\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n        fill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        // (2) Compatible with previous version, which always use formatted label as\n        // input. But in interval scale the formatted label is like '223,445', which\n        // maked user repalce ','. So we modify it to return original val but remain\n        // it as 'string' to avoid error in replacing.\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n      })\n    });\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\n\n    if (triggerEvent) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisLabel';\n      eventData.value = rawLabel;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nexport default AxisBuilder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}