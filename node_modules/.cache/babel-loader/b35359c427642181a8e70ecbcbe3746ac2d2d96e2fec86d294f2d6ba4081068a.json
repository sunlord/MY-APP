{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport LineGroup from './Line';\nimport { getLabelStatesModels } from '../../label/labelStyle';\nvar LineDraw = /** @class */\nfunction () {\n  function LineDraw(LineCtor) {\n    this.group = new graphic.Group();\n    this._LineCtor = LineCtor || LineGroup;\n  }\n  LineDraw.prototype.isPersistent = function () {\n    return true;\n  };\n  ;\n  LineDraw.prototype.updateData = function (lineData) {\n    var _this = this;\n    var lineDraw = this;\n    var group = lineDraw.group;\n    var oldLineData = lineDraw._lineData;\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!oldLineData) {\n      group.removeAll();\n    }\n    var seriesScope = makeSeriesScope(lineData);\n    lineData.diff(oldLineData).add(function (idx) {\n      _this._doAdd(lineData, idx, seriesScope);\n    }).update(function (newIdx, oldIdx) {\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\n    }).remove(function (idx) {\n      group.remove(oldLineData.getItemGraphicEl(idx));\n    }).execute();\n  };\n  ;\n  LineDraw.prototype.updateLayout = function () {\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n    if (!lineData) {\n      return;\n    }\n    lineData.eachItemGraphicEl(function (el, idx) {\n      el.updateLayout(lineData, idx);\n    }, this);\n  };\n  ;\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\n    this._seriesScope = makeSeriesScope(lineData);\n    this._lineData = null;\n    this.group.removeAll();\n  };\n  ;\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup && !isEffectObject(el)) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var itemLayout = lineData.getItemLayout(idx);\n      if (lineNeedsDraw(itemLayout)) {\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        this.group.add(el);\n        lineData.setItemGraphicEl(idx, el);\n      }\n    }\n  };\n  ;\n  LineDraw.prototype.remove = function () {\n    this.group.removeAll();\n  };\n  ;\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\n    var itemLayout = lineData.getItemLayout(idx);\n    if (!lineNeedsDraw(itemLayout)) {\n      return;\n    }\n    var el = new this._LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, el);\n    this.group.add(el);\n  };\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n      this.group.remove(itemEl);\n      return;\n    }\n    if (!itemEl) {\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\n    } else {\n      itemEl.updateData(newLineData, newIdx, seriesScope);\n    }\n    newLineData.setItemGraphicEl(newIdx, itemEl);\n    this.group.add(itemEl);\n  };\n  return LineDraw;\n}();\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    emphasisLineStyle: hostModel.getModel(['emphasis', 'lineStyle']).getLineStyle(),\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\n    labelStatesModels: getLabelStatesModels(hostModel)\n  };\n}\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\nexport default LineDraw;","map":{"version":3,"names":["graphic","LineGroup","getLabelStatesModels","LineDraw","LineCtor","group","Group","_LineCtor","prototype","isPersistent","updateData","lineData","_this","lineDraw","oldLineData","_lineData","removeAll","seriesScope","makeSeriesScope","diff","add","idx","_doAdd","update","newIdx","oldIdx","_doUpdate","remove","getItemGraphicEl","execute","updateLayout","eachItemGraphicEl","el","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","isEffectObject","incremental","ensureState","hoverLayer","start","end","itemLayout","getItemLayout","lineNeedsDraw","traverse","setItemGraphicEl","newLineData","itemEl","animators","length","hostModel","lineStyle","getModel","getLineStyle","emphasisLineStyle","blurLineStyle","selectLineStyle","labelStatesModels","isPointNaN","pt","isNaN","pts"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/helper/LineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport LineGroup from './Line';\nimport { getLabelStatesModels } from '../../label/labelStyle';\n\nvar LineDraw =\n/** @class */\nfunction () {\n  function LineDraw(LineCtor) {\n    this.group = new graphic.Group();\n    this._LineCtor = LineCtor || LineGroup;\n  }\n\n  LineDraw.prototype.isPersistent = function () {\n    return true;\n  };\n\n  ;\n\n  LineDraw.prototype.updateData = function (lineData) {\n    var _this = this;\n\n    var lineDraw = this;\n    var group = lineDraw.group;\n    var oldLineData = lineDraw._lineData;\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!oldLineData) {\n      group.removeAll();\n    }\n\n    var seriesScope = makeSeriesScope(lineData);\n    lineData.diff(oldLineData).add(function (idx) {\n      _this._doAdd(lineData, idx, seriesScope);\n    }).update(function (newIdx, oldIdx) {\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\n    }).remove(function (idx) {\n      group.remove(oldLineData.getItemGraphicEl(idx));\n    }).execute();\n  };\n\n  ;\n\n  LineDraw.prototype.updateLayout = function () {\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n    if (!lineData) {\n      return;\n    }\n\n    lineData.eachItemGraphicEl(function (el, idx) {\n      el.updateLayout(lineData, idx);\n    }, this);\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\n    this._seriesScope = makeSeriesScope(lineData);\n    this._lineData = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup && !isEffectObject(el)) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var itemLayout = lineData.getItemLayout(idx);\n\n      if (lineNeedsDraw(itemLayout)) {\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        this.group.add(el);\n        lineData.setItemGraphicEl(idx, el);\n      }\n    }\n  };\n\n  ;\n\n  LineDraw.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (!lineNeedsDraw(itemLayout)) {\n      return;\n    }\n\n    var el = new this._LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, el);\n    this.group.add(el);\n  };\n\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n      this.group.remove(itemEl);\n      return;\n    }\n\n    if (!itemEl) {\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\n    } else {\n      itemEl.updateData(newLineData, newIdx, seriesScope);\n    }\n\n    newLineData.setItemGraphicEl(newIdx, itemEl);\n    this.group.add(itemEl);\n  };\n\n  return LineDraw;\n}();\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    emphasisLineStyle: hostModel.getModel(['emphasis', 'lineStyle']).getLineStyle(),\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\n    labelStatesModels: getLabelStatesModels(hostModel)\n  };\n}\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nexport default LineDraw;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAC7C,OAAOC,SAAS,MAAM,QAAQ;AAC9B,SAASC,oBAAoB,QAAQ,wBAAwB;AAE7D,IAAIC,QAAQ,GACZ;AACA,YAAY;EACV,SAASA,QAAQ,CAACC,QAAQ,EAAE;IAC1B,IAAI,CAACC,KAAK,GAAG,IAAIL,OAAO,CAACM,KAAK,EAAE;IAChC,IAAI,CAACC,SAAS,GAAGH,QAAQ,IAAIH,SAAS;EACxC;EAEAE,QAAQ,CAACK,SAAS,CAACC,YAAY,GAAG,YAAY;IAC5C,OAAO,IAAI;EACb,CAAC;EAED;EAEAN,QAAQ,CAACK,SAAS,CAACE,UAAU,GAAG,UAAUC,QAAQ,EAAE;IAClD,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIR,KAAK,GAAGQ,QAAQ,CAACR,KAAK;IAC1B,IAAIS,WAAW,GAAGD,QAAQ,CAACE,SAAS;IACpCF,QAAQ,CAACE,SAAS,GAAGJ,QAAQ,CAAC,CAAC;IAC/B;;IAEA,IAAI,CAACG,WAAW,EAAE;MAChBT,KAAK,CAACW,SAAS,EAAE;IACnB;IAEA,IAAIC,WAAW,GAAGC,eAAe,CAACP,QAAQ,CAAC;IAC3CA,QAAQ,CAACQ,IAAI,CAACL,WAAW,CAAC,CAACM,GAAG,CAAC,UAAUC,GAAG,EAAE;MAC5CT,KAAK,CAACU,MAAM,CAACX,QAAQ,EAAEU,GAAG,EAAEJ,WAAW,CAAC;IAC1C,CAAC,CAAC,CAACM,MAAM,CAAC,UAAUC,MAAM,EAAEC,MAAM,EAAE;MAClCb,KAAK,CAACc,SAAS,CAACZ,WAAW,EAAEH,QAAQ,EAAEc,MAAM,EAAED,MAAM,EAAEP,WAAW,CAAC;IACrE,CAAC,CAAC,CAACU,MAAM,CAAC,UAAUN,GAAG,EAAE;MACvBhB,KAAK,CAACsB,MAAM,CAACb,WAAW,CAACc,gBAAgB,CAACP,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC,CAACQ,OAAO,EAAE;EACd,CAAC;EAED;EAEA1B,QAAQ,CAACK,SAAS,CAACsB,YAAY,GAAG,YAAY;IAC5C,IAAInB,QAAQ,GAAG,IAAI,CAACI,SAAS,CAAC,CAAC;;IAE/B,IAAI,CAACJ,QAAQ,EAAE;MACb;IACF;IAEAA,QAAQ,CAACoB,iBAAiB,CAAC,UAAUC,EAAE,EAAEX,GAAG,EAAE;MAC5CW,EAAE,CAACF,YAAY,CAACnB,QAAQ,EAAEU,GAAG,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED;EAEAlB,QAAQ,CAACK,SAAS,CAACyB,wBAAwB,GAAG,UAAUtB,QAAQ,EAAE;IAChE,IAAI,CAACuB,YAAY,GAAGhB,eAAe,CAACP,QAAQ,CAAC;IAC7C,IAAI,CAACI,SAAS,GAAG,IAAI;IACrB,IAAI,CAACV,KAAK,CAACW,SAAS,EAAE;EACxB,CAAC;EAED;EAEAb,QAAQ,CAACK,SAAS,CAAC2B,iBAAiB,GAAG,UAAUC,UAAU,EAAEzB,QAAQ,EAAE;IACrE,SAAS0B,yBAAyB,CAACL,EAAE,EAAE;MACrC,IAAI,CAACA,EAAE,CAACM,OAAO,IAAI,CAACC,cAAc,CAACP,EAAE,CAAC,EAAE;QACtCA,EAAE,CAACQ,WAAW,GAAG,IAAI;QACrBR,EAAE,CAACS,WAAW,CAAC,UAAU,CAAC,CAACC,UAAU,GAAG,IAAI;MAC9C;IACF;IAEA,KAAK,IAAIrB,GAAG,GAAGe,UAAU,CAACO,KAAK,EAAEtB,GAAG,GAAGe,UAAU,CAACQ,GAAG,EAAEvB,GAAG,EAAE,EAAE;MAC5D,IAAIwB,UAAU,GAAGlC,QAAQ,CAACmC,aAAa,CAACzB,GAAG,CAAC;MAE5C,IAAI0B,aAAa,CAACF,UAAU,CAAC,EAAE;QAC7B,IAAIb,EAAE,GAAG,IAAI,IAAI,CAACzB,SAAS,CAACI,QAAQ,EAAEU,GAAG,EAAE,IAAI,CAACa,YAAY,CAAC;QAC7DF,EAAE,CAACgB,QAAQ,CAACX,yBAAyB,CAAC;QACtC,IAAI,CAAChC,KAAK,CAACe,GAAG,CAACY,EAAE,CAAC;QAClBrB,QAAQ,CAACsC,gBAAgB,CAAC5B,GAAG,EAAEW,EAAE,CAAC;MACpC;IACF;EACF,CAAC;EAED;EAEA7B,QAAQ,CAACK,SAAS,CAACmB,MAAM,GAAG,YAAY;IACtC,IAAI,CAACtB,KAAK,CAACW,SAAS,EAAE;EACxB,CAAC;EAED;EAEAb,QAAQ,CAACK,SAAS,CAACc,MAAM,GAAG,UAAUX,QAAQ,EAAEU,GAAG,EAAEJ,WAAW,EAAE;IAChE,IAAI4B,UAAU,GAAGlC,QAAQ,CAACmC,aAAa,CAACzB,GAAG,CAAC;IAE5C,IAAI,CAAC0B,aAAa,CAACF,UAAU,CAAC,EAAE;MAC9B;IACF;IAEA,IAAIb,EAAE,GAAG,IAAI,IAAI,CAACzB,SAAS,CAACI,QAAQ,EAAEU,GAAG,EAAEJ,WAAW,CAAC;IACvDN,QAAQ,CAACsC,gBAAgB,CAAC5B,GAAG,EAAEW,EAAE,CAAC;IAClC,IAAI,CAAC3B,KAAK,CAACe,GAAG,CAACY,EAAE,CAAC;EACpB,CAAC;EAED7B,QAAQ,CAACK,SAAS,CAACkB,SAAS,GAAG,UAAUZ,WAAW,EAAEoC,WAAW,EAAEzB,MAAM,EAAED,MAAM,EAAEP,WAAW,EAAE;IAC9F,IAAIkC,MAAM,GAAGrC,WAAW,CAACc,gBAAgB,CAACH,MAAM,CAAC;IAEjD,IAAI,CAACsB,aAAa,CAACG,WAAW,CAACJ,aAAa,CAACtB,MAAM,CAAC,CAAC,EAAE;MACrD,IAAI,CAACnB,KAAK,CAACsB,MAAM,CAACwB,MAAM,CAAC;MACzB;IACF;IAEA,IAAI,CAACA,MAAM,EAAE;MACXA,MAAM,GAAG,IAAI,IAAI,CAAC5C,SAAS,CAAC2C,WAAW,EAAE1B,MAAM,EAAEP,WAAW,CAAC;IAC/D,CAAC,MAAM;MACLkC,MAAM,CAACzC,UAAU,CAACwC,WAAW,EAAE1B,MAAM,EAAEP,WAAW,CAAC;IACrD;IAEAiC,WAAW,CAACD,gBAAgB,CAACzB,MAAM,EAAE2B,MAAM,CAAC;IAC5C,IAAI,CAAC9C,KAAK,CAACe,GAAG,CAAC+B,MAAM,CAAC;EACxB,CAAC;EAED,OAAOhD,QAAQ;AACjB,CAAC,EAAE;AAEH,SAASoC,cAAc,CAACP,EAAE,EAAE;EAC1B,OAAOA,EAAE,CAACoB,SAAS,IAAIpB,EAAE,CAACoB,SAAS,CAACC,MAAM,GAAG,CAAC;AAChD;AAEA,SAASnC,eAAe,CAACP,QAAQ,EAAE;EACjC,IAAI2C,SAAS,GAAG3C,QAAQ,CAAC2C,SAAS;EAClC,OAAO;IACLC,SAAS,EAAED,SAAS,CAACE,QAAQ,CAAC,WAAW,CAAC,CAACC,YAAY,EAAE;IACzDC,iBAAiB,EAAEJ,SAAS,CAACE,QAAQ,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAACC,YAAY,EAAE;IAC/EE,aAAa,EAAEL,SAAS,CAACE,QAAQ,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAACC,YAAY,EAAE;IACvEG,eAAe,EAAEN,SAAS,CAACE,QAAQ,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAACC,YAAY,EAAE;IAC3EI,iBAAiB,EAAE3D,oBAAoB,CAACoD,SAAS;EACnD,CAAC;AACH;AAEA,SAASQ,UAAU,CAACC,EAAE,EAAE;EACtB,OAAOC,KAAK,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAIC,KAAK,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC;AAEA,SAAShB,aAAa,CAACkB,GAAG,EAAE;EAC1B,OAAO,CAACH,UAAU,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAACH,UAAU,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC;AACnD;AAEA,eAAe9D,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}