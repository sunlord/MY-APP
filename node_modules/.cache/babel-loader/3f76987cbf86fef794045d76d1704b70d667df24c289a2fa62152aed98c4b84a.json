{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert } from 'zrender/lib/core/util';\nimport { VISUAL_DIMENSIONS } from '../../util/types';\nexport function summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n  var encodeTooltip = encode.tooltip;\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }","map":{"version":3,"names":["each","createHashMap","assert","VISUAL_DIMENSIONS","summarizeDimensions","data","summary","encode","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutput","dimensionNames","dimensions","slice","dimName","dimItem","getDimensionInfo","coordDim","process","env","NODE_ENV","get","coordDimIndex","getOrCreateEncodeArr","isExtraCoord","set","mayLabelDimType","type","index","defaultTooltip","push","v","otherDim","encodeArr","dimIndex","otherDims","name","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","concat","encodeLabel","label","length","encodeTooltip","tooltip","dim","hasOwnProperty","getDimensionTypeByAxis","axisType","dimType"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/data/helper/dimensionHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert } from 'zrender/lib/core/util';\nimport { VISUAL_DIMENSIONS } from '../../util/types';\nexport function summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}