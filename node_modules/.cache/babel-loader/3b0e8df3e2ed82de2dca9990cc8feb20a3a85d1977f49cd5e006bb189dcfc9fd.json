{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as colorTool from 'zrender/lib/tool/color';\nimport env from 'zrender/lib/core/env';\nimport timsort from 'zrender/lib/core/timsort';\nimport Eventful from 'zrender/lib/core/Eventful';\nimport GlobalModel from '../model/Global';\nimport ExtensionAPI from './ExtensionAPI';\nimport CoordinateSystemManager from './CoordinateSystem';\nimport OptionManager from '../model/OptionManager';\nimport backwardCompat from '../preprocessor/backwardCompat';\nimport dataStack from '../processor/dataStack';\nimport SeriesModel from '../model/Series';\nimport ComponentView from '../view/Component';\nimport ChartView from '../view/Chart';\nimport * as graphic from '../util/graphic';\nimport { getECData } from '../util/innerStore';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlboalMouseOutForHighDown } from '../util/states';\nimport * as modelUtil from '../util/model';\nimport { throttle } from '../util/throttle';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style';\nimport loadingDefault from '../loading/default';\nimport Scheduler from './Scheduler';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\nimport { parseClassType } from '../util/clazz';\nimport { ECEventProcessor } from '../util/ECEventProcessor';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper';\nimport LabelManager from '../label/LabelManager';\nimport { deprecateLog, throwError } from '../util/log';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction';\nimport { registerExternalTransform } from '../data/helper/transform';\nimport { createLocaleObject, SYSTEM_LANG } from './locale';\nimport { findEventDispatcher } from '../util/event';\nimport decal from '../visual/decal';\nimport geoSourceManager from '../coord/geo/geoSourceManager';\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar indexOf = zrUtil.indexOf;\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.1.2';\nexport var dependencies = {\n  zrender: '5.1.1'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar OPTION_UPDATED_KEY = '__optionUpdated';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n;\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\nvar MessageCenter = /** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return MessageCenter;\n}(Eventful);\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar clearColorPalette;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar performPostUpdateFuncs;\nvar createExtensionAPI;\nvar enableConnect;\nvar setTransitionOpt;\nvar markStatusToUpdate;\nvar applyChangedStates;\nvar ECharts = /** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n  function ECharts(dom,\n  // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (typeof theme === 'string') {\n      theme = themeStorage[theme];\n    }\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n    if (process.env.NODE_ENV !== 'production') {\n      var root = /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    }); // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n    theme = zrUtil.clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter();\n    _this._labelManager = new LabelManager(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n    _this.resize = zrUtil.bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    zrUtil.setAsPrimitive(_this);\n    return _this;\n  }\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[OPTION_UPDATED_KEY]) {\n      var silent = this[OPTION_UPDATED_KEY].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      prepare(this);\n      updateMethods.update.call(this); // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[OPTION_UPDATED_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n    }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  /* eslint-disable-next-line */\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n    setTransitionOpt(this, transitionOpt);\n    if (lazyUpdate) {\n      this[OPTION_UPDATED_KEY] = {\n        silent: silent\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      prepare(this);\n      updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      this._zr.flush();\n      this[OPTION_UPDATED_KEY] = false;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @DEPRECATED\n   */\n\n  ECharts.prototype.setTheme = function () {\n    console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */ || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   */\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (!env.canvasSupported) {\n      return;\n    }\n    opts = opts || {};\n    return this._zr.painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    zrUtil.each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (!env.canvasSupported) {\n      return;\n    }\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      zrUtil.each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = zrUtil.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    zrUtil.each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = zrUtil.extend({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n      handler.zrEventfulCallAtLast = true;\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this.setOption({\n      series: []\n    }, true);\n  };\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._disposed = true;\n    modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    var api = this._api;\n    var ecModel = this._model;\n    each(this._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(this._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    this._zr.dispose();\n    delete instances[this.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n  ECharts.prototype.resize = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._zr.resize(opts);\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n    if (!ecModel) {\n      return;\n    }\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[OPTION_UPDATED_KEY]) {\n      if (silent == null) {\n        silent = this[OPTION_UPDATED_KEY].silent;\n      }\n      needPrepare = true;\n      this[OPTION_UPDATED_KEY] = false;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    needPrepare && prepare(this);\n    updateMethods.update.call(this, {\n      type: 'resize',\n      animation: zrUtil.extend({\n        // Disable animation\n        duration: 0\n      }, opts && opts.animation)\n    });\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n    name = name || 'default';\n    this.hideLoading();\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n      return;\n    }\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = zrUtil.extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n      return;\n    }\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.updateLabelLayout = function () {\n    var labelManager = this._labelManager;\n    labelManager.updateLayoutConfig(this._api);\n    labelManager.layout(this._api);\n    labelManager.processLabelsOverall();\n  };\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) :\n          // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = zrUtil.createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      }\n      if (isHighDownPayload(payload)) {\n        allLeaveBlur(ecIns._api);\n      } // If dispatchAction before setOption, do nothing.\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        if (!excludeSeriesIdMap || excludeSeriesIdMap.get(model.id) == null) {\n          if (isHighDownPayload(payload)) {\n            if (model instanceof SeriesModel) {\n              if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur) {\n                blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n              }\n            } else {\n              var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n              if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n                blurComponent(model.mainType, model.componentIndex, ecIns._api);\n              } // PENDING:\n              // Whether to put this \"enter emphasis\" code in `ComponentView`,\n              // which will be the same as `ChartView` but might be not necessary\n              // and will be far from this logic.\n\n              if (dispatchers) {\n                each(dispatchers, function (dispatcher) {\n                  payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n                });\n              }\n            }\n          } else if (isSelectChangePayload(payload)) {\n            // TODO geo\n            if (model instanceof SeriesModel) {\n              toggleSelectionFromPayload(model, payload, ecIns._api);\n              updateSeriesElementSelection(model);\n              markStatusToUpdate(ecIns);\n            }\n          }\n          callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n        }\n      }, ecIns);\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload);\n      },\n      update: function (payload) {\n        // console.profile && console.profile('update');\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode'); // In IE8\n\n        if (!env.canvasSupported) {\n          var colorArr = colorTool.parse(backgroundColor);\n          backgroundColor = colorTool.stringify(colorArr, 'rgb');\n          if (colorArr[3] === 0) {\n            backgroundColor = 'transparent';\n          }\n        } else {\n          zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n          if (darkMode != null && darkMode !== 'auto') {\n            zr.setDarkMode(darkMode);\n          }\n        }\n        performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n      },\n\n      updateTransform: function (payload) {\n        var _this = this;\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n          var componentView = _this.getViewOfComponentModel(componentModel);\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = zrUtil.createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n        renderSeries(this, ecModel, api, payload, seriesDirtyMap);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n        render(this, this._model, this._api, payload);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n      var ecModel = ecIns._model;\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = zrUtil.map(payload.batch, function (item) {\n          item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload);\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n            queryOptionMap = _a.queryOptionMap,\n            mainTypeSpecified = _a.mainTypeSpecified;\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        // Still dirty\n        if (this[OPTION_UPDATED_KEY]) {\n          prepare(this);\n          updateMethods.update.call(this, payload);\n          this[OPTION_UPDATED_KEY] = false;\n        } else {\n          updateMethods[updateMethod].call(this, payload);\n        }\n      } // Follow the rule of action batch\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n      this[IN_MAIN_PROCESS_KEY] = false;\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if (\n        // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[OPTION_UPDATED_KEY] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlboalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n    clearColorPalette = function (ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    };\n    render = function (ecIns, ecModel, api, payload) {\n      renderComponents(ecIns, ecModel, api, payload);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n    renderComponents = function (ecIns, ecModel, api, payload, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n    renderSeries = function (ecIns, ecModel, api, payload, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      var labelManager = ecIns._labelManager;\n      labelManager.clearLabels();\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n        seriesModel.__transientTransitionOpt = null;\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel); // Add labels.\n\n        labelManager.addLabelsOfSeries(chartView);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      labelManager.updateLayoutConfig(api);\n      labelManager.layout(api);\n      labelManager.processLabelsOverall();\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n    };\n    performPostUpdateFuncs = function (ecModel, api) {\n      each(postUpdateFuncs, function (func) {\n        func(ecModel, api);\n      });\n    };\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n      el.useStates(newStates);\n    }\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n          if (chartView.__alive) {\n            chartView.group.traverse(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      if (process.env.NODE_ENV !== 'production') {\n        if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n          console.warn('Only canvas support blendMode');\n        }\n      }\n      chartView.group.traverse(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n        if (el.eachPendingDisplayable) {\n          el.eachPendingDisplayable(function (displayable) {\n            displayable.style.blend = blendMode;\n          });\n        }\n      });\n    }\n    ;\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      } // Set z and zlevel\n\n      _updateZ(view.group, model.get('z') || 0, model.get('zlevel') || 0, -Infinity);\n    }\n    ;\n    function _updateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        // el.traverse((childEl: Element) => _updateZ(childEl, z, zlevel));\n        var children = el.childrenRef();\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(_updateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n    function clearStates(model, view) {\n      view.group.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n      } : null;\n      view.group.traverse(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n    ;\n    createExtensionAPI = function (ecIns) {\n      return new ( /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n            el = el.parent;\n          }\n        };\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n    setTransitionOpt = function (chart, transitionOpt) {\n      var ecModel = chart._model;\n      zrUtil.each(modelUtil.normalizeToArray(transitionOpt), function (transOpt) {\n        var errMsg;\n        var fromOpt = transOpt.from;\n        var toOpt = transOpt.to;\n        if (toOpt == null) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.to` must be specified.';\n          }\n          throwError(errMsg);\n        }\n        var finderOpt = {\n          includeMainTypes: ['series'],\n          enableAll: false,\n          enableNone: false\n        };\n        var fromResult = fromOpt ? modelUtil.parseFinder(ecModel, fromOpt, finderOpt) : null;\n        var toResult = modelUtil.parseFinder(ecModel, toOpt, finderOpt);\n        var toSeries = toResult.seriesModel;\n        if (toSeries == null) {\n          errMsg = '';\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition` is only supported on series.';\n          }\n        }\n        if (fromResult && fromResult.seriesModel !== toSeries) {\n          errMsg = '';\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.from` and `transition.to` must be specified to the same series.';\n          }\n        }\n        if (errMsg != null) {\n          throwError(errMsg);\n        } // Just a temp solution: mount them on series.\n\n        toSeries.__transientTransitionOpt = {\n          from: fromOpt ? fromOpt.dimension : null,\n          to: toOpt.dimension,\n          dividingMethod: transOpt.dividingMethod\n        };\n      });\n    };\n  }();\n  return ECharts;\n}(Eventful);\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n  function wrapped() {\n    var args2 = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n}; // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         let isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar postInitFuncs = [];\nvar postUpdateFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n */\n\nexport function init(dom, theme, opts) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!dom) {\n      throw new Error('Initialize failed: invalid dom.');\n    }\n  }\n  var existInstance = getInstanceByDom(dom);\n  if (existInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('There is a chart instance already initialized on the dom.');\n    }\n    return existInstance;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n      console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n    }\n  }\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  each(postInitFuncs, function (postInitFunc) {\n    postInitFunc(chart);\n  });\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  if (indexOf(postInitFuncs, postInitFunc) < 0) {\n    postInitFunc && postInitFuncs.push(postInitFunc);\n  }\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  if (indexOf(postUpdateFuncs, postUpdateFunc) < 0) {\n    postUpdateFunc && postUpdateFuncs.push(postUpdateFunc);\n  }\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale';\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  geoSourceManager.registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  return geoSourceManager.getMapForUser(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};","map":{"version":3,"names":["__extends","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","SeriesModel","ComponentView","ChartView","graphic","getECData","isHighDownDispatcher","HOVER_STATE_EMPHASIS","HOVER_STATE_BLUR","blurSeriesFromHighlightPayload","toggleSelectionFromPayload","updateSeriesElementSelection","getAllSelectedIndices","isSelectChangePayload","isHighDownPayload","HIGHLIGHT_ACTION_TYPE","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","savePathStates","enterEmphasis","leaveEmphasis","leaveBlur","enterSelect","leaveSelect","enterBlur","allLeaveBlur","findComponentHighDownDispatchers","blurComponent","handleGlobalMouseOverForHighDown","handleGlboalMouseOutForHighDown","modelUtil","throttle","seriesStyleTask","dataStyleTask","dataColorPaletteTask","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","ECEventProcessor","seriesSymbolTask","dataSymbolTask","getVisualFromData","getItemVisualFromData","LabelManager","deprecateLog","throwError","handleLegacySelectEvents","registerExternalTransform","createLocaleObject","SYSTEM_LANG","findEventDispatcher","decal","geoSourceManager","assert","each","isFunction","isObject","indexOf","hasWindow","window","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","OPTION_UPDATED_KEY","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","prototype","apply","MessageCenter","_super","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","clearColorPalette","render","renderComponents","renderSeries","performPostUpdateFuncs","createExtensionAPI","enableConnect","setTransitionOpt","markStatusToUpdate","applyChangedStates","ECharts","dom","theme","opts","_this","call","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","themeStorage","_dom","defaultRenderer","defaultUseDirtyRect","process","NODE_ENV","root","global","__ECHARTS__DEFAULT__RENDERER__","devUseDirtyRect","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","zr","_zr","init","renderer","devicePixelRatio","width","height","useDirtyRect","_throttledZrFlush","bind","flush","clone","_theme","_locale","locale","_coordSysMgr","api","_api","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_labelManager","_initEvents","resize","animation","_onframe","setAsPrimitive","_disposed","scheduler","silent","update","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","transition","optionManager","optionPreprocessorFuncs","wakeUp","setTheme","console","error","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","canvasSupported","backgroundColor","get","pixelRatio","getSvgDataURL","svgSupported","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","type","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","createCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","parseFinder","models","key","model","coordSys","coordinateSystem","containPoint","warn","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","e","target","params","isGlobalOut","parent","ecData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","extend","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","browser","weChat","updateLabelLayout","labelManager","updateLayoutConfig","layout","processLabelsOverall","appendData","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","Clazz","getClass","main","sub","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","createHashMap","normalizeToArray","modelId","convertOptionIdName","set","notBlur","_a","focusSelf","dispatchers","dispatcher","prepareAndUpdate","coordSysMgr","restoreData","create","darkMode","colorArr","parse","stringify","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","map","defaults","eventObjBatch","isSelectChange","isHighDown","batchItem","action","preParseFinder","queryOptionMap","mainTypeSpecified","componentMainType","keys","messageCenter","newObj","selected","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","dirtyList","clearStates","updateZ","updateStates","clearLabels","updatePayload","dirty","perform","getPerformArgs","__transientTransitionOpt","updateBlend","addLabelsOfSeries","updateHoverLayerStatus","postUpdateFuncs","func","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","emphasis","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","hoverLayer","blendMode","blend","eachPendingDisplayable","displayable","preventAutoZ","_updateZ","z","zlevel","maxZ2","label","getTextContent","labelLine","getTextGuideLine","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","textContent","textGuide","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","transOpt","errMsg","fromOpt","from","toOpt","to","finderOpt","includeMainTypes","enableAll","enableNone","fromResult","toResult","toSeries","dimension","dividingMethod","echartsProto","one","eventName","cb","ctx","wrapped","args2","postInitFuncs","idBase","groupIdBase","Error","existInstance","getInstanceByDom","isDom","nodeName","toUpperCase","clientWidth","clientHeight","postInitFunc","connect","isArray","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","registerLocale","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","getMap","getMapForUser","registerTransform","noop","dataTool"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/core/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as colorTool from 'zrender/lib/tool/color';\nimport env from 'zrender/lib/core/env';\nimport timsort from 'zrender/lib/core/timsort';\nimport Eventful from 'zrender/lib/core/Eventful';\nimport GlobalModel from '../model/Global';\nimport ExtensionAPI from './ExtensionAPI';\nimport CoordinateSystemManager from './CoordinateSystem';\nimport OptionManager from '../model/OptionManager';\nimport backwardCompat from '../preprocessor/backwardCompat';\nimport dataStack from '../processor/dataStack';\nimport SeriesModel from '../model/Series';\nimport ComponentView from '../view/Component';\nimport ChartView from '../view/Chart';\nimport * as graphic from '../util/graphic';\nimport { getECData } from '../util/innerStore';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlboalMouseOutForHighDown } from '../util/states';\nimport * as modelUtil from '../util/model';\nimport { throttle } from '../util/throttle';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style';\nimport loadingDefault from '../loading/default';\nimport Scheduler from './Scheduler';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\nimport { parseClassType } from '../util/clazz';\nimport { ECEventProcessor } from '../util/ECEventProcessor';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper';\nimport LabelManager from '../label/LabelManager';\nimport { deprecateLog, throwError } from '../util/log';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction';\nimport { registerExternalTransform } from '../data/helper/transform';\nimport { createLocaleObject, SYSTEM_LANG } from './locale';\nimport { findEventDispatcher } from '../util/event';\nimport decal from '../visual/decal';\nimport geoSourceManager from '../coord/geo/geoSourceManager';\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar indexOf = zrUtil.indexOf;\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.1.2';\nexport var dependencies = {\n  zrender: '5.1.1'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar OPTION_UPDATED_KEY = '__optionUpdated';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar clearColorPalette;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar performPostUpdateFuncs;\nvar createExtensionAPI;\nvar enableConnect;\nvar setTransitionOpt;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (typeof theme === 'string') {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    }); // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n    theme = zrUtil.clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter();\n    _this._labelManager = new LabelManager(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = zrUtil.bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    zrUtil.setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[OPTION_UPDATED_KEY]) {\n      var silent = this[OPTION_UPDATED_KEY].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      prepare(this);\n      updateMethods.update.call(this); // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[OPTION_UPDATED_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain');\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    setTransitionOpt(this, transitionOpt);\n\n    if (lazyUpdate) {\n      this[OPTION_UPDATED_KEY] = {\n        silent: silent\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      prepare(this);\n      updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      this._zr.flush();\n\n      this[OPTION_UPDATED_KEY] = false;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @DEPRECATED\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    opts = opts || {};\n    return this._zr.painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    zrUtil.each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      zrUtil.each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = zrUtil.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    zrUtil.each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = zrUtil.extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    var api = this._api;\n    var ecModel = this._model;\n    each(this._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(this._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    this._zr.dispose();\n\n    delete instances[this.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[OPTION_UPDATED_KEY]) {\n      if (silent == null) {\n        silent = this[OPTION_UPDATED_KEY].silent;\n      }\n\n      needPrepare = true;\n      this[OPTION_UPDATED_KEY] = false;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n    needPrepare && prepare(this);\n    updateMethods.update.call(this, {\n      type: 'resize',\n      animation: zrUtil.extend({\n        // Disable animation\n        duration: 0\n      }, opts && opts.animation)\n    });\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = zrUtil.extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    var labelManager = this._labelManager;\n    labelManager.updateLayoutConfig(this._api);\n    labelManager.layout(this._api);\n    labelManager.processLabelsOverall();\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = zrUtil.createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      }\n\n      if (isHighDownPayload(payload)) {\n        allLeaveBlur(ecIns._api);\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        if (!excludeSeriesIdMap || excludeSeriesIdMap.get(model.id) == null) {\n          if (isHighDownPayload(payload)) {\n            if (model instanceof SeriesModel) {\n              if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur) {\n                blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n              }\n            } else {\n              var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                  focusSelf = _a.focusSelf,\n                  dispatchers = _a.dispatchers;\n\n              if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n                blurComponent(model.mainType, model.componentIndex, ecIns._api);\n              } // PENDING:\n              // Whether to put this \"enter emphasis\" code in `ComponentView`,\n              // which will be the same as `ChartView` but might be not necessary\n              // and will be far from this logic.\n\n\n              if (dispatchers) {\n                each(dispatchers, function (dispatcher) {\n                  payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n                });\n              }\n            }\n          } else if (isSelectChangePayload(payload)) {\n            // TODO geo\n            if (model instanceof SeriesModel) {\n              toggleSelectionFromPayload(model, payload, ecIns._api);\n              updateSeriesElementSelection(model);\n              markStatusToUpdate(ecIns);\n            }\n          }\n\n          callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n        }\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload);\n      },\n      update: function (payload) {\n        // console.profile && console.profile('update');\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode'); // In IE8\n\n        if (!env.canvasSupported) {\n          var colorArr = colorTool.parse(backgroundColor);\n          backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n          if (colorArr[3] === 0) {\n            backgroundColor = 'transparent';\n          }\n        } else {\n          zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n          if (darkMode != null && darkMode !== 'auto') {\n            zr.setDarkMode(darkMode);\n          }\n        }\n\n        performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = zrUtil.createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, seriesDirtyMap);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, this._model, this._api, payload);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = zrUtil.map(payload.batch, function (item) {\n          item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload);\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        // Still dirty\n        if (this[OPTION_UPDATED_KEY]) {\n          prepare(this);\n          updateMethods.update.call(this, payload);\n          this[OPTION_UPDATED_KEY] = false;\n        } else {\n          updateMethods[updateMethod].call(this, payload);\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[OPTION_UPDATED_KEY] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlboalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    clearColorPalette = function (ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    };\n\n    render = function (ecIns, ecModel, api, payload) {\n      renderComponents(ecIns, ecModel, api, payload);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      var labelManager = ecIns._labelManager;\n      labelManager.clearLabels();\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        seriesModel.__transientTransitionOpt = null;\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel); // Add labels.\n\n        labelManager.addLabelsOfSeries(chartView);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      labelManager.updateLayoutConfig(api);\n      labelManager.layout(api);\n      labelManager.processLabelsOverall();\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n    };\n\n    performPostUpdateFuncs = function (ecModel, api) {\n      each(postUpdateFuncs, function (func) {\n        func(ecModel, api);\n      });\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.group.traverse(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n          console.warn('Only canvas support blendMode');\n        }\n      }\n\n      chartView.group.traverse(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n\n        if (el.eachPendingDisplayable) {\n          el.eachPendingDisplayable(function (displayable) {\n            displayable.style.blend = blendMode;\n          });\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      } // Set z and zlevel\n\n\n      _updateZ(view.group, model.get('z') || 0, model.get('zlevel') || 0, -Infinity);\n    }\n\n    ;\n\n    function _updateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        // el.traverse((childEl: Element) => _updateZ(childEl, z, zlevel));\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(_updateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.group.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.group.traverse(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n\n    setTransitionOpt = function (chart, transitionOpt) {\n      var ecModel = chart._model;\n      zrUtil.each(modelUtil.normalizeToArray(transitionOpt), function (transOpt) {\n        var errMsg;\n        var fromOpt = transOpt.from;\n        var toOpt = transOpt.to;\n\n        if (toOpt == null) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.to` must be specified.';\n          }\n\n          throwError(errMsg);\n        }\n\n        var finderOpt = {\n          includeMainTypes: ['series'],\n          enableAll: false,\n          enableNone: false\n        };\n        var fromResult = fromOpt ? modelUtil.parseFinder(ecModel, fromOpt, finderOpt) : null;\n        var toResult = modelUtil.parseFinder(ecModel, toOpt, finderOpt);\n        var toSeries = toResult.seriesModel;\n\n        if (toSeries == null) {\n          errMsg = '';\n\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition` is only supported on series.';\n          }\n        }\n\n        if (fromResult && fromResult.seriesModel !== toSeries) {\n          errMsg = '';\n\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.from` and `transition.to` must be specified to the same series.';\n          }\n        }\n\n        if (errMsg != null) {\n          throwError(errMsg);\n        } // Just a temp solution: mount them on series.\n\n\n        toSeries.__transientTransitionOpt = {\n          from: fromOpt ? fromOpt.dimension : null,\n          to: toOpt.dimension,\n          dividingMethod: transOpt.dividingMethod\n        };\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n}; // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         let isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar postInitFuncs = [];\nvar postUpdateFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n */\n\nexport function init(dom, theme, opts) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!dom) {\n      throw new Error('Initialize failed: invalid dom.');\n    }\n  }\n\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('There is a chart instance already initialized on the dom.');\n    }\n\n    return existInstance;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n      console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  each(postInitFuncs, function (postInitFunc) {\n    postInitFunc(chart);\n  });\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  if (indexOf(postInitFuncs, postInitFunc) < 0) {\n    postInitFunc && postInitFuncs.push(postInitFunc);\n  }\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  if (indexOf(postUpdateFuncs, postUpdateFunc) < 0) {\n    postUpdateFunc && postUpdateFuncs.push(postUpdateFunc);\n  }\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  geoSourceManager.registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  return geoSourceManager.getMapForUser(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}