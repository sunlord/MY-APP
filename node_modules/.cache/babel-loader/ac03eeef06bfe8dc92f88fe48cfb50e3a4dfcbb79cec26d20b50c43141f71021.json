{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states';\nimport DataDiffer from '../../data/DataDiffer';\nimport * as helper from '../helper/treeHelper';\nimport Breadcrumb from './Breadcrumb';\nimport RoamController from '../../component/helper/RoamController';\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport * as matrix from 'zrender/lib/core/matrix';\nimport * as animationUtil from '../../util/animation';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper';\nimport ChartView from '../../view/Chart';\nimport Displayable from 'zrender/lib/graphic/Displayable';\nimport { makeInner, convertOptionIdName } from '../../util/model';\nimport { windowOpen } from '../../util/format';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'],\n// `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\nvar inner = makeInner();\nvar TreemapView = /** @class */\nfunction (_super) {\n  __extends(TreemapView, _super);\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n    if (indexOf(models, seriesModel) < 0) {\n      return;\n    }\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n    this._resetController(api);\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n      this._initEvents(containerGroup);\n      this.group.add(containerGroup);\n    }\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n        new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\n      }\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n        if (!last) {\n          return;\n        }\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = extend({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n            target.style = {\n              opacity: 1\n            };\n          }\n        }\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n      if (!root) {\n        return;\n      }\n      var rootLayout = root.getLayout();\n      if (!rootLayout) {\n        return;\n      }\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n      if (!root) {\n        return;\n      }\n      var rootLayout = root.getLayout();\n      if (!rootLayout) {\n        return;\n      }\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n      if (!nodeClick) {\n        return;\n      }\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n      if (!targetInfo) {\n        return;\n      }\n      var node = targetInfo.node;\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(ChartView);\n/**\n * @inner\n */\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n  if (!group) {\n    return;\n  }\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var focus = nodeModel.get(['emphasis', 'focus']);\n  var blurScope = nodeModel.get(['emphasis', 'blurScope']);\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (isHighDownDispatcher(group)) {\n      setAsHighDownDispatcher(group, false);\n    }\n    if (bg) {\n      setAsHighDownDispatcher(bg, true); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      enableHoverFocus(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n    if (bg && isHighDownDispatcher(bg)) {\n      setAsHighDownDispatcher(bg, false);\n    }\n    setAsHighDownDispatcher(group, true); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    enableHoverFocus(group, focusOrIndices, blurScope);\n  }\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = getECData(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(\n        // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n        bg.removeTextContent();\n      }\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(bg);\n    }\n    group.add(bg);\n  }\n  function renderContent(group, content) {\n    var ecData = getECData(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(content);\n    }\n    group.add(content);\n  }\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n  function prepareText(rectEl, visualColor, visualOpacity,\n  // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n    var textStyle = textEl.style;\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n      element = new Ctor();\n      if (element instanceof Displayable) {\n        element.z2 = calculateZ2(depth, z);\n      }\n      prepareAnimationWhenNoOld(lasts, element);\n    } // Set to thisStorage\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = extend({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\nexport default TreemapView;","map":{"version":3,"names":["__extends","bind","each","indexOf","curry","extend","normalizeCssArray","isFunction","graphic","getECData","isHighDownDispatcher","setAsHighDownDispatcher","setDefaultStateProxy","enableHoverFocus","Z2_EMPHASIS_LIFT","DataDiffer","helper","Breadcrumb","RoamController","BoundingRect","matrix","animationUtil","makeStyleMapper","ChartView","Displayable","makeInner","convertOptionIdName","windowOpen","setLabelStyle","getLabelStatesModels","Group","Rect","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_UPPERLABEL_NORMAL","Z2_BASE","Z2_BG","Z2_CONTENT","getStateItemStyle","getItemStyleNormal","model","itemStyle","stroke","fill","lineWidth","inner","TreemapView","_super","_this","apply","arguments","type","_state","_storage","createStorage","prototype","render","seriesModel","ecModel","api","payload","models","findComponents","mainType","subType","query","types","targetInfo","retrieveTargetInfo","payloadType","layoutInfo","isInit","_oldTree","thisStorage","reRoot","rootNodeGroup","nodeGroup","node","getRawIndex","direction","containerGroup","_giveContainerGroup","renderResult","_doRender","_doAnimation","renderFinally","_resetController","_renderBreadcrumb","_containerGroup","_initEvents","group","add","x","y","thisTree","getData","tree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","thisNode","oldNode","parentGroup","depth","renderNode","dualTravel","root","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","sameTree","child","index","isRemoved","processNode","getKey","update","remove","execute","getId","newIndex","oldIndex","viewChildren","storage","store","storageName","delEls","el","push","willDelete","els","parent","invisible","dirty","get","durationOption","easingOption","duration","easing","animationWrap","createWrap","rawIndex","target","innerStore","shape","width","nodeWidth","height","nodeHeight","style","opacity","targetX","targetY","last","oldX","oldY","oldShape","setShape","fadein","setStyle","finished","start","controller","_controller","getZr","enable","on","_onPan","_onZoom","rect","getWidth","getHeight","setPointerChecker","e","contain","_clearController","dispose","Math","abs","dx","dy","rootLayout","getLayout","dispatchAction","from","uid","seriesId","id","rootRect","mouseX","originX","mouseY","originY","m","create","translate","scale","applyTransform","nodeClick","findTarget","offsetX","offsetY","isLeafRoot","_rootToNode","_zoomToNode","itemModel","hostTree","data","getItemModel","dataIndex","link","linkTarget","getViewRoot","_breadcrumb","aboveViewRoot","removeAll","targetNode","viewRoot","eachNode","attr","order","bgEl","background","point","transformCoordToLocal","content","thisLayout","nodeModel","getModel","setItemGraphicEl","isInView","thisWidth","thisHeight","borderWidth","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","length","itemStyleNormalModel","itemStyleEmphasisModel","itemStyleBlurModel","itemStyleSelectModel","borderRadius","giveGraphic","markRedraw","isAboveViewRoot","bg","renderBackground","upperLabelHeight","focus","blurScope","focusOrIndices","getAncestorsIndices","getDescendantIndices","renderContent","useUpperLabel","ecData","seriesIndex","r","processInvisible","getVisual","visualBorderColor","normalStyle","emphasisStyle","blurStyle","selectStyle","upperLabelWidth","prepareText","removeTextContent","ensureState","contentWidth","max","contentHeight","culling","nodeStyle","visualColor","decal","element","rectEl","visualOpacity","upperLabelRect","normalLabelModel","defaultText","isShow","getShallow","inheritColor","defaultOpacity","labelFetcher","labelDataIndex","textEl","getTextContent","textStyle","textPadding","padding","setTextConfig","layoutRect","disableLabelLayout","beforeUpdate","truncateMinChar","lineOverflow","addDrillDownIcon","textEmphasisState","getState","text","iconChar","Ctor","z","lasts","prepareAnimationWhenHasOld","z2","calculateZ2","prepareAnimationWhenNoOld","lastCfg","parentNode","isGroup","parentOldX","parentOldY","parentOldBg","z2InLevel"],"sources":["/Users/jiong/Downloads/my-app/node_modules/echarts/lib/chart/treemap/TreemapView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states';\nimport DataDiffer from '../../data/DataDiffer';\nimport * as helper from '../helper/treeHelper';\nimport Breadcrumb from './Breadcrumb';\nimport RoamController from '../../component/helper/RoamController';\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport * as matrix from 'zrender/lib/core/matrix';\nimport * as animationUtil from '../../util/animation';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper';\nimport ChartView from '../../view/Chart';\nimport Displayable from 'zrender/lib/graphic/Displayable';\nimport { makeInner, convertOptionIdName } from '../../util/model';\nimport { windowOpen } from '../../util/format';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar inner = makeInner();\n\nvar TreemapView =\n/** @class */\nfunction (_super) {\n  __extends(TreemapView, _super);\n\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = extend({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(ChartView);\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var focus = nodeModel.get(['emphasis', 'focus']);\n  var blurScope = nodeModel.get(['emphasis', 'blurScope']);\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (isHighDownDispatcher(group)) {\n      setAsHighDownDispatcher(group, false);\n    }\n\n    if (bg) {\n      setAsHighDownDispatcher(bg, true); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      enableHoverFocus(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n\n    if (bg && isHighDownDispatcher(bg)) {\n      setAsHighDownDispatcher(bg, false);\n    }\n\n    setAsHighDownDispatcher(group, true); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    enableHoverFocus(group, focusOrIndices, blurScope);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = getECData(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText( // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          bg.removeTextContent();\n        }\n\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(bg);\n    }\n\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    var ecData = getECData(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(content);\n    }\n\n    group.add(content);\n  }\n\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n\n  function prepareText(rectEl, visualColor, visualOpacity, // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n    var textStyle = textEl.style;\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\n\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor();\n\n        if (element instanceof Displayable) {\n          element.z2 = calculateZ2(depth, z);\n        }\n\n        prepareAnimationWhenNoOld(lasts, element);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = extend({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\n\nexport default TreemapView;"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,UAAU,QAAQ,uBAAuB;AACzG,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,oBAAoB,EAAEC,uBAAuB,EAAEC,oBAAoB,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,mBAAmB;AAC3I,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAO,KAAKC,MAAM,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AACjD,OAAO,KAAKC,aAAa,MAAM,sBAAsB;AACrD,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,WAAW,MAAM,iCAAiC;AACzD,SAASC,SAAS,EAAEC,mBAAmB,QAAQ,kBAAkB;AACjE,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,aAAa,EAAEC,oBAAoB,QAAQ,wBAAwB;AAC5E,IAAIC,KAAK,GAAGtB,OAAO,CAACsB,KAAK;AACzB,IAAIC,IAAI,GAAGvB,OAAO,CAACuB,IAAI;AACvB,IAAIC,cAAc,GAAG,CAAC;AACtB,IAAIC,iBAAiB,GAAG,OAAO;AAC/B,IAAIC,sBAAsB,GAAG,YAAY,CAAC,CAAC;;AAE3C,IAAIC,OAAO,GAAGrB,gBAAgB,GAAG,EAAE,CAAC,CAAC;;AAErC,IAAIsB,KAAK,GAAGtB,gBAAgB,GAAG,CAAC;AAChC,IAAIuB,UAAU,GAAGvB,gBAAgB,GAAG,CAAC;AACrC,IAAIwB,iBAAiB,GAAGhB,eAAe,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC;AAAE;AAC5D;AACA,CAAC,QAAQ,EAAE,aAAa,CAAC,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAC/H;AAAA,CACC,CAAC;;AAEF,IAAIiB,kBAAkB,GAAG,UAAUC,KAAK,EAAE;EACxC;EACA,IAAIC,SAAS,GAAGH,iBAAiB,CAACE,KAAK,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAACC,MAAM,GAAGD,SAAS,CAACE,IAAI,GAAGF,SAAS,CAACG,SAAS,GAAG,IAAI;EAC9D,OAAOH,SAAS;AAClB,CAAC;AAED,IAAII,KAAK,GAAGpB,SAAS,EAAE;AAEvB,IAAIqB,WAAW,GACf;AACA,UAAUC,MAAM,EAAE;EAChB/C,SAAS,CAAC8C,WAAW,EAAEC,MAAM,CAAC;EAE9B,SAASD,WAAW,GAAG;IACrB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IAEpEF,KAAK,CAACG,IAAI,GAAGL,WAAW,CAACK,IAAI;IAC7BH,KAAK,CAACI,MAAM,GAAG,OAAO;IACtBJ,KAAK,CAACK,QAAQ,GAAGC,aAAa,EAAE;IAChC,OAAON,KAAK;EACd;EACA;AACF;AACA;;EAGEF,WAAW,CAACS,SAAS,CAACC,MAAM,GAAG,UAAUC,WAAW,EAAEC,OAAO,EAAEC,GAAG,EAAEC,OAAO,EAAE;IAC3E,IAAIC,MAAM,GAAGH,OAAO,CAACI,cAAc,CAAC;MAClCC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAEL;IACT,CAAC,CAAC;IAEF,IAAIzD,OAAO,CAAC0D,MAAM,EAAEJ,WAAW,CAAC,GAAG,CAAC,EAAE;MACpC;IACF;IAEA,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,GAAG,GAAGA,GAAG;IACd,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAIQ,KAAK,GAAG,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;IACtD,IAAIC,UAAU,GAAGnD,MAAM,CAACoD,kBAAkB,CAACR,OAAO,EAAEM,KAAK,EAAET,WAAW,CAAC;IACvE,IAAIY,WAAW,GAAGT,OAAO,IAAIA,OAAO,CAACT,IAAI;IACzC,IAAImB,UAAU,GAAGb,WAAW,CAACa,UAAU;IACvC,IAAIC,MAAM,GAAG,CAAC,IAAI,CAACC,QAAQ;IAC3B,IAAIC,WAAW,GAAG,IAAI,CAACpB,QAAQ,CAAC,CAAC;;IAEjC,IAAIqB,MAAM,GAAGL,WAAW,KAAK,mBAAmB,IAAIF,UAAU,IAAIM,WAAW,GAAG;MAC9EE,aAAa,EAAEF,WAAW,CAACG,SAAS,CAACT,UAAU,CAACU,IAAI,CAACC,WAAW,EAAE,CAAC;MACnEC,SAAS,EAAEnB,OAAO,CAACmB;IACrB,CAAC,GAAG,IAAI;IAER,IAAIC,cAAc,GAAG,IAAI,CAACC,mBAAmB,CAACX,UAAU,CAAC;IAEzD,IAAIY,YAAY,GAAG,IAAI,CAACC,SAAS,CAACH,cAAc,EAAEvB,WAAW,EAAEiB,MAAM,CAAC;IAEtE,CAACH,MAAM,KAAK,CAACF,WAAW,IAAIA,WAAW,KAAK,mBAAmB,IAAIA,WAAW,KAAK,mBAAmB,CAAC,GAAG,IAAI,CAACe,YAAY,CAACJ,cAAc,EAAEE,YAAY,EAAEzB,WAAW,EAAEiB,MAAM,CAAC,GAAGQ,YAAY,CAACG,aAAa,EAAE;IAE7M,IAAI,CAACC,gBAAgB,CAAC3B,GAAG,CAAC;IAE1B,IAAI,CAAC4B,iBAAiB,CAAC9B,WAAW,EAAEE,GAAG,EAAEQ,UAAU,CAAC;EACtD,CAAC;EAEDrB,WAAW,CAACS,SAAS,CAAC0B,mBAAmB,GAAG,UAAUX,UAAU,EAAE;IAChE,IAAIU,cAAc,GAAG,IAAI,CAACQ,eAAe;IAEzC,IAAI,CAACR,cAAc,EAAE;MACnB;MACA;MACAA,cAAc,GAAG,IAAI,CAACQ,eAAe,GAAG,IAAI1D,KAAK,EAAE;MAEnD,IAAI,CAAC2D,WAAW,CAACT,cAAc,CAAC;MAEhC,IAAI,CAACU,KAAK,CAACC,GAAG,CAACX,cAAc,CAAC;IAChC;IAEAA,cAAc,CAACY,CAAC,GAAGtB,UAAU,CAACsB,CAAC;IAC/BZ,cAAc,CAACa,CAAC,GAAGvB,UAAU,CAACuB,CAAC;IAC/B,OAAOb,cAAc;EACvB,CAAC;EAEDlC,WAAW,CAACS,SAAS,CAAC4B,SAAS,GAAG,UAAUH,cAAc,EAAEvB,WAAW,EAAEiB,MAAM,EAAE;IAC/E,IAAIoB,QAAQ,GAAGrC,WAAW,CAACsC,OAAO,EAAE,CAACC,IAAI;IACzC,IAAIC,OAAO,GAAG,IAAI,CAACzB,QAAQ,CAAC,CAAC;;IAE7B,IAAI0B,iBAAiB,GAAG5C,aAAa,EAAE;IACvC,IAAImB,WAAW,GAAGnB,aAAa,EAAE;IACjC,IAAI6C,UAAU,GAAG,IAAI,CAAC9C,QAAQ;IAC9B,IAAI+C,gBAAgB,GAAG,EAAE;IAEzB,SAASC,YAAY,CAACC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,KAAK,EAAE;MAC3D,OAAOC,UAAU,CAACjD,WAAW,EAAEgB,WAAW,EAAE0B,UAAU,EAAEzB,MAAM,EAAEwB,iBAAiB,EAAEE,gBAAgB,EAAEE,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,KAAK,CAAC;IAC7I,CAAC,CAAC;IACF;IACA;IACA;;IAGAE,UAAU,CAACb,QAAQ,CAACc,IAAI,GAAG,CAACd,QAAQ,CAACc,IAAI,CAAC,GAAG,EAAE,EAAEX,OAAO,IAAIA,OAAO,CAACW,IAAI,GAAG,CAACX,OAAO,CAACW,IAAI,CAAC,GAAG,EAAE,EAAE5B,cAAc,EAAEc,QAAQ,KAAKG,OAAO,IAAI,CAACA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEtJ,IAAIY,aAAa,GAAGC,YAAY,CAACX,UAAU,CAAC;IAC5C,IAAI,CAAC3B,QAAQ,GAAGsB,QAAQ;IACxB,IAAI,CAACzC,QAAQ,GAAGoB,WAAW;IAC3B,OAAO;MACLyB,iBAAiB,EAAEA,iBAAiB;MACpCW,aAAa,EAAEA,aAAa;MAC5BxB,aAAa,EAAEA;IACjB,CAAC;IAED,SAASsB,UAAU,CAACI,gBAAgB,EAAEC,eAAe,EAAER,WAAW,EAAES,QAAQ,EAAER,KAAK,EAAE;MACnF;MACA;MACA;MACA,IAAIQ,QAAQ,EAAE;QACZD,eAAe,GAAGD,gBAAgB;QAClC7G,IAAI,CAAC6G,gBAAgB,EAAE,UAAUG,KAAK,EAAEC,KAAK,EAAE;UAC7C,CAACD,KAAK,CAACE,SAAS,EAAE,IAAIC,WAAW,CAACF,KAAK,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACJ,CAAC,CAAC;MACF;MAAA,KACK;QACD,IAAIpG,UAAU,CAACiG,eAAe,EAAED,gBAAgB,EAAEO,MAAM,EAAEA,MAAM,CAAC,CAAC3B,GAAG,CAAC0B,WAAW,CAAC,CAACE,MAAM,CAACF,WAAW,CAAC,CAACG,MAAM,CAACpH,KAAK,CAACiH,WAAW,EAAE,IAAI,CAAC,CAAC,CAACI,OAAO,EAAE;MACnJ;MAEF,SAASH,MAAM,CAACzC,IAAI,EAAE;QACpB;QACA,OAAOA,IAAI,CAAC6C,KAAK,EAAE;MACrB;MAEA,SAASL,WAAW,CAACM,QAAQ,EAAEC,QAAQ,EAAE;QACvC,IAAItB,QAAQ,GAAGqB,QAAQ,IAAI,IAAI,GAAGZ,gBAAgB,CAACY,QAAQ,CAAC,GAAG,IAAI;QACnE,IAAIpB,OAAO,GAAGqB,QAAQ,IAAI,IAAI,GAAGZ,eAAe,CAACY,QAAQ,CAAC,GAAG,IAAI;QACjE,IAAIlC,KAAK,GAAGW,YAAY,CAACC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,KAAK,CAAC;QAC/Df,KAAK,IAAIiB,UAAU,CAACL,QAAQ,IAAIA,QAAQ,CAACuB,YAAY,IAAI,EAAE,EAAEtB,OAAO,IAAIA,OAAO,CAACsB,YAAY,IAAI,EAAE,EAAEnC,KAAK,EAAEuB,QAAQ,EAAER,KAAK,GAAG,CAAC,CAAC;MACjI;IACF;IAEA,SAASK,YAAY,CAACgB,OAAO,EAAE;MAC7B,IAAIjB,aAAa,GAAGvD,aAAa,EAAE;MACnCwE,OAAO,IAAI5H,IAAI,CAAC4H,OAAO,EAAE,UAAUC,KAAK,EAAEC,WAAW,EAAE;QACrD,IAAIC,MAAM,GAAGpB,aAAa,CAACmB,WAAW,CAAC;QACvC9H,IAAI,CAAC6H,KAAK,EAAE,UAAUG,EAAE,EAAE;UACxBA,EAAE,KAAKD,MAAM,CAACE,IAAI,CAACD,EAAE,CAAC,EAAErF,KAAK,CAACqF,EAAE,CAAC,CAACE,UAAU,GAAG,IAAI,CAAC;QACtD,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOvB,aAAa;IACtB;IAEA,SAASxB,aAAa,GAAG;MACvBnF,IAAI,CAAC2G,aAAa,EAAE,UAAUwB,GAAG,EAAE;QACjCnI,IAAI,CAACmI,GAAG,EAAE,UAAUH,EAAE,EAAE;UACtBA,EAAE,CAACI,MAAM,IAAIJ,EAAE,CAACI,MAAM,CAACd,MAAM,CAACU,EAAE,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;MACFhI,IAAI,CAACkG,gBAAgB,EAAE,UAAU8B,EAAE,EAAE;QACnCA,EAAE,CAACK,SAAS,GAAG,IAAI,CAAC,CAAC;QACrB;;QAEAL,EAAE,CAACM,KAAK,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAED1F,WAAW,CAACS,SAAS,CAAC6B,YAAY,GAAG,UAAUJ,cAAc,EAAEE,YAAY,EAAEzB,WAAW,EAAEiB,MAAM,EAAE;IAChG,IAAI,CAACjB,WAAW,CAACgF,GAAG,CAAC,WAAW,CAAC,EAAE;MACjC;IACF;IAEA,IAAIC,cAAc,GAAGjF,WAAW,CAACgF,GAAG,CAAC,yBAAyB,CAAC;IAC/D,IAAIE,YAAY,GAAGlF,WAAW,CAACgF,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;;IAEvD,IAAIG,QAAQ,GAAG,CAACrI,UAAU,CAACmI,cAAc,CAAC,GAAG,CAAC,GAAGA,cAAc,KAAK,CAAC;IACrE,IAAIG,MAAM,GAAG,CAACtI,UAAU,CAACoI,YAAY,CAAC,GAAG,IAAI,GAAGA,YAAY,KAAK,UAAU;IAC3E,IAAIG,aAAa,GAAGzH,aAAa,CAAC0H,UAAU,EAAE,CAAC,CAAC;;IAEhD7I,IAAI,CAACgF,YAAY,CAAC2B,aAAa,EAAE,UAAUkB,KAAK,EAAEC,WAAW,EAAE;MAC7D9H,IAAI,CAAC6H,KAAK,EAAE,UAAUG,EAAE,EAAEc,QAAQ,EAAE;QAClC,IAAId,EAAE,CAACK,SAAS,EAAE;UAChB;QACF;QAEA,IAAID,MAAM,GAAGJ,EAAE,CAACI,MAAM,CAAC,CAAC;;QAExB,IAAIW,MAAM;QACV,IAAIC,UAAU,GAAGrG,KAAK,CAACyF,MAAM,CAAC;QAE9B,IAAI5D,MAAM,IAAIA,MAAM,CAACK,SAAS,KAAK,WAAW,EAAE;UAC9CkE,MAAM,GAAGX,MAAM,KAAK5D,MAAM,CAACC,aAAa,CAAC;UACzC;UACA;UAAA,EACE;YACAwE,KAAK,EAAE;cACLvD,CAAC,EAAE,CAAC;cACJC,CAAC,EAAE,CAAC;cACJuD,KAAK,EAAEF,UAAU,CAACG,SAAS;cAC3BC,MAAM,EAAEJ,UAAU,CAACK;YACrB,CAAC;YACDC,KAAK,EAAE;cACLC,OAAO,EAAE;YACX;UACF,CAAC,CAAC;UAAA,EACA;YACAD,KAAK,EAAE;cACLC,OAAO,EAAE;YACX;UACF,CAAC;QACH,CAAC,MAAM;UACL,IAAIC,OAAO,GAAG,CAAC;UACf,IAAIC,OAAO,GAAG,CAAC;UAEf,IAAI,CAACT,UAAU,CAACd,UAAU,EAAE;YAC1B;YACA;YACA;YACAsB,OAAO,GAAGR,UAAU,CAACG,SAAS,GAAG,CAAC;YAClCM,OAAO,GAAGT,UAAU,CAACK,UAAU,GAAG,CAAC;UACrC;UAEAN,MAAM,GAAGjB,WAAW,KAAK,WAAW,GAAG;YACrCpC,CAAC,EAAE8D,OAAO;YACV7D,CAAC,EAAE8D,OAAO;YACVH,KAAK,EAAE;cACLC,OAAO,EAAE;YACX;UACF,CAAC,GAAG;YACFN,KAAK,EAAE;cACLvD,CAAC,EAAE8D,OAAO;cACV7D,CAAC,EAAE8D,OAAO;cACVP,KAAK,EAAE,CAAC;cACRE,MAAM,EAAE;YACV,CAAC;YACDE,KAAK,EAAE;cACLC,OAAO,EAAE;YACX;UACF,CAAC;QACH,CAAC,CAAC;;QAGFR,MAAM,IAAIH,aAAa,CAACnD,GAAG,CAACuC,EAAE,EAAEe,MAAM,EAAEL,QAAQ,EAAE,CAAC,EAAEC,MAAM,CAAC;MAC9D,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,CAAC;;IAEJ3I,IAAI,CAAC,IAAI,CAACmD,QAAQ,EAAE,UAAU0E,KAAK,EAAEC,WAAW,EAAE;MAChD9H,IAAI,CAAC6H,KAAK,EAAE,UAAUG,EAAE,EAAEc,QAAQ,EAAE;QAClC,IAAIY,IAAI,GAAG1E,YAAY,CAACgB,iBAAiB,CAAC8B,WAAW,CAAC,CAACgB,QAAQ,CAAC;QAChE,IAAIC,MAAM,GAAG,CAAC,CAAC;QAEf,IAAI,CAACW,IAAI,EAAE;UACT;QACF;QAEA,IAAI1B,EAAE,YAAY1H,OAAO,CAACsB,KAAK,EAAE;UAC/B,IAAI8H,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;YACrBZ,MAAM,CAACrD,CAAC,GAAGsC,EAAE,CAACtC,CAAC;YACfqD,MAAM,CAACpD,CAAC,GAAGqC,EAAE,CAACrC,CAAC;YACfqC,EAAE,CAACtC,CAAC,GAAGgE,IAAI,CAACC,IAAI;YAChB3B,EAAE,CAACrC,CAAC,GAAG+D,IAAI,CAACE,IAAI;UAClB;QACF,CAAC,MAAM;UACL,IAAIF,IAAI,CAACG,QAAQ,EAAE;YACjBd,MAAM,CAACE,KAAK,GAAG9I,MAAM,CAAC,CAAC,CAAC,EAAE6H,EAAE,CAACiB,KAAK,CAAC;YACnCjB,EAAE,CAAC8B,QAAQ,CAACJ,IAAI,CAACG,QAAQ,CAAC;UAC5B;UAEA,IAAIH,IAAI,CAACK,MAAM,EAAE;YACf/B,EAAE,CAACgC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;YACzBjB,MAAM,CAACO,KAAK,GAAG;cACbC,OAAO,EAAE;YACX,CAAC;UACH,CAAC,CAAC;UACF;UAAA,KACK,IAAIvB,EAAE,CAACsB,KAAK,CAACC,OAAO,KAAK,CAAC,EAAE;YAC7BR,MAAM,CAACO,KAAK,GAAG;cACbC,OAAO,EAAE;YACX,CAAC;UACH;QACJ;QAEAX,aAAa,CAACnD,GAAG,CAACuC,EAAE,EAAEe,MAAM,EAAEL,QAAQ,EAAE,CAAC,EAAEC,MAAM,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IACR,IAAI,CAACzF,MAAM,GAAG,WAAW;IACzB0F,aAAa,CAACqB,QAAQ,CAAClK,IAAI,CAAC,YAAY;MACtC,IAAI,CAACmD,MAAM,GAAG,OAAO;MACrB8B,YAAY,CAACG,aAAa,EAAE;IAC9B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC+E,KAAK,EAAE;EACnB,CAAC;EAEDtH,WAAW,CAACS,SAAS,CAAC+B,gBAAgB,GAAG,UAAU3B,GAAG,EAAE;IACtD,IAAI0G,UAAU,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;;IAEnC,IAAI,CAACD,UAAU,EAAE;MACfA,UAAU,GAAG,IAAI,CAACC,WAAW,GAAG,IAAIpJ,cAAc,CAACyC,GAAG,CAAC4G,KAAK,EAAE,CAAC;MAC/DF,UAAU,CAACG,MAAM,CAAC,IAAI,CAAC/G,WAAW,CAACgF,GAAG,CAAC,MAAM,CAAC,CAAC;MAC/C4B,UAAU,CAACI,EAAE,CAAC,KAAK,EAAExK,IAAI,CAAC,IAAI,CAACyK,MAAM,EAAE,IAAI,CAAC,CAAC;MAC7CL,UAAU,CAACI,EAAE,CAAC,MAAM,EAAExK,IAAI,CAAC,IAAI,CAAC0K,OAAO,EAAE,IAAI,CAAC,CAAC;IACjD;IAEA,IAAIC,IAAI,GAAG,IAAIzJ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEwC,GAAG,CAACkH,QAAQ,EAAE,EAAElH,GAAG,CAACmH,SAAS,EAAE,CAAC;IAClET,UAAU,CAACU,iBAAiB,CAAC,UAAUC,CAAC,EAAEpF,CAAC,EAAEC,CAAC,EAAE;MAC9C,OAAO+E,IAAI,CAACK,OAAO,CAACrF,CAAC,EAAEC,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC;EAED/C,WAAW,CAACS,SAAS,CAAC2H,gBAAgB,GAAG,YAAY;IACnD,IAAIb,UAAU,GAAG,IAAI,CAACC,WAAW;IAEjC,IAAID,UAAU,EAAE;MACdA,UAAU,CAACc,OAAO,EAAE;MACpBd,UAAU,GAAG,IAAI;IACnB;EACF,CAAC;EAEDvH,WAAW,CAACS,SAAS,CAACmH,MAAM,GAAG,UAAUM,CAAC,EAAE;IAC1C,IAAI,IAAI,CAAC5H,MAAM,KAAK,WAAW,KAAKgI,IAAI,CAACC,GAAG,CAACL,CAAC,CAACM,EAAE,CAAC,GAAGtJ,cAAc,IAAIoJ,IAAI,CAACC,GAAG,CAACL,CAAC,CAACO,EAAE,CAAC,GAAGvJ,cAAc,CAAC,EAAE;MACvG;MACA,IAAI4E,IAAI,GAAG,IAAI,CAACnD,WAAW,CAACsC,OAAO,EAAE,CAACC,IAAI,CAACY,IAAI;MAE/C,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MAEA,IAAI4E,UAAU,GAAG5E,IAAI,CAAC6E,SAAS,EAAE;MAEjC,IAAI,CAACD,UAAU,EAAE;QACf;MACF;MAEA,IAAI,CAAC7H,GAAG,CAAC+H,cAAc,CAAC;QACtBvI,IAAI,EAAE,aAAa;QACnBwI,IAAI,EAAE,IAAI,CAACC,GAAG;QACdC,QAAQ,EAAE,IAAI,CAACpI,WAAW,CAACqI,EAAE;QAC7BC,QAAQ,EAAE;UACRnG,CAAC,EAAE4F,UAAU,CAAC5F,CAAC,GAAGoF,CAAC,CAACM,EAAE;UACtBzF,CAAC,EAAE2F,UAAU,CAAC3F,CAAC,GAAGmF,CAAC,CAACO,EAAE;UACtBnC,KAAK,EAAEoC,UAAU,CAACpC,KAAK;UACvBE,MAAM,EAAEkC,UAAU,CAAClC;QACrB;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAEDxG,WAAW,CAACS,SAAS,CAACoH,OAAO,GAAG,UAAUK,CAAC,EAAE;IAC3C,IAAIgB,MAAM,GAAGhB,CAAC,CAACiB,OAAO;IACtB,IAAIC,MAAM,GAAGlB,CAAC,CAACmB,OAAO;IAEtB,IAAI,IAAI,CAAC/I,MAAM,KAAK,WAAW,EAAE;MAC/B;MACA,IAAIwD,IAAI,GAAG,IAAI,CAACnD,WAAW,CAACsC,OAAO,EAAE,CAACC,IAAI,CAACY,IAAI;MAE/C,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MAEA,IAAI4E,UAAU,GAAG5E,IAAI,CAAC6E,SAAS,EAAE;MAEjC,IAAI,CAACD,UAAU,EAAE;QACf;MACF;MAEA,IAAIZ,IAAI,GAAG,IAAIzJ,YAAY,CAACqK,UAAU,CAAC5F,CAAC,EAAE4F,UAAU,CAAC3F,CAAC,EAAE2F,UAAU,CAACpC,KAAK,EAAEoC,UAAU,CAAClC,MAAM,CAAC;MAC5F,IAAIhF,UAAU,GAAG,IAAI,CAACb,WAAW,CAACa,UAAU,CAAC,CAAC;;MAE9C0H,MAAM,IAAI1H,UAAU,CAACsB,CAAC;MACtBsG,MAAM,IAAI5H,UAAU,CAACuB,CAAC,CAAC,CAAC;;MAExB,IAAIuG,CAAC,GAAGhL,MAAM,CAACiL,MAAM,EAAE;MACvBjL,MAAM,CAACkL,SAAS,CAACF,CAAC,EAAEA,CAAC,EAAE,CAAC,CAACJ,MAAM,EAAE,CAACE,MAAM,CAAC,CAAC;MAC1C9K,MAAM,CAACmL,KAAK,CAACH,CAAC,EAAEA,CAAC,EAAE,CAACpB,CAAC,CAACuB,KAAK,EAAEvB,CAAC,CAACuB,KAAK,CAAC,CAAC;MACtCnL,MAAM,CAACkL,SAAS,CAACF,CAAC,EAAEA,CAAC,EAAE,CAACJ,MAAM,EAAEE,MAAM,CAAC,CAAC;MACxCtB,IAAI,CAAC4B,cAAc,CAACJ,CAAC,CAAC;MACtB,IAAI,CAACzI,GAAG,CAAC+H,cAAc,CAAC;QACtBvI,IAAI,EAAE,eAAe;QACrBwI,IAAI,EAAE,IAAI,CAACC,GAAG;QACdC,QAAQ,EAAE,IAAI,CAACpI,WAAW,CAACqI,EAAE;QAC7BC,QAAQ,EAAE;UACRnG,CAAC,EAAEgF,IAAI,CAAChF,CAAC;UACTC,CAAC,EAAE+E,IAAI,CAAC/E,CAAC;UACTuD,KAAK,EAAEwB,IAAI,CAACxB,KAAK;UACjBE,MAAM,EAAEsB,IAAI,CAACtB;QACf;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAEDxG,WAAW,CAACS,SAAS,CAACkC,WAAW,GAAG,UAAUT,cAAc,EAAE;IAC5D,IAAIhC,KAAK,GAAG,IAAI;IAEhBgC,cAAc,CAACyF,EAAE,CAAC,OAAO,EAAE,UAAUO,CAAC,EAAE;MACtC,IAAIhI,KAAK,CAACI,MAAM,KAAK,OAAO,EAAE;QAC5B;MACF;MAEA,IAAIqJ,SAAS,GAAGzJ,KAAK,CAACS,WAAW,CAACgF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;MAExD,IAAI,CAACgE,SAAS,EAAE;QACd;MACF;MAEA,IAAItI,UAAU,GAAGnB,KAAK,CAAC0J,UAAU,CAAC1B,CAAC,CAAC2B,OAAO,EAAE3B,CAAC,CAAC4B,OAAO,CAAC;MAEvD,IAAI,CAACzI,UAAU,EAAE;QACf;MACF;MAEA,IAAIU,IAAI,GAAGV,UAAU,CAACU,IAAI;MAE1B,IAAIA,IAAI,CAAC4G,SAAS,EAAE,CAACoB,UAAU,EAAE;QAC/B7J,KAAK,CAAC8J,WAAW,CAAC3I,UAAU,CAAC;MAC/B,CAAC,MAAM;QACL,IAAIsI,SAAS,KAAK,YAAY,EAAE;UAC9BzJ,KAAK,CAAC+J,WAAW,CAAC5I,UAAU,CAAC;QAC/B,CAAC,MAAM,IAAIsI,SAAS,KAAK,MAAM,EAAE;UAC/B,IAAIO,SAAS,GAAGnI,IAAI,CAACoI,QAAQ,CAACC,IAAI,CAACC,YAAY,CAACtI,IAAI,CAACuI,SAAS,CAAC;UAC/D,IAAIC,IAAI,GAAGL,SAAS,CAACvE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;UACtC,IAAI6E,UAAU,GAAGN,SAAS,CAACvE,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,OAAO;UACzD4E,IAAI,IAAI1L,UAAU,CAAC0L,IAAI,EAAEC,UAAU,CAAC;QACtC;MACF;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAEDxK,WAAW,CAACS,SAAS,CAACgC,iBAAiB,GAAG,UAAU9B,WAAW,EAAEE,GAAG,EAAEQ,UAAU,EAAE;IAChF,IAAInB,KAAK,GAAG,IAAI;IAEhB,IAAI,CAACmB,UAAU,EAAE;MACfA,UAAU,GAAGV,WAAW,CAACgF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG;QACxD5D,IAAI,EAAEpB,WAAW,CAAC8J,WAAW;MAC/B,CAAC,CAAC;MACF;MACA;MAAA,EACE,IAAI,CAACb,UAAU,CAAC/I,GAAG,CAACkH,QAAQ,EAAE,GAAG,CAAC,EAAElH,GAAG,CAACmH,SAAS,EAAE,GAAG,CAAC,CAAC;MAE1D,IAAI,CAAC3G,UAAU,EAAE;QACfA,UAAU,GAAG;UACXU,IAAI,EAAEpB,WAAW,CAACsC,OAAO,EAAE,CAACC,IAAI,CAACY;QACnC,CAAC;MACH;IACF;IAEA,CAAC,IAAI,CAAC4G,WAAW,KAAK,IAAI,CAACA,WAAW,GAAG,IAAIvM,UAAU,CAAC,IAAI,CAACyE,KAAK,CAAC,CAAC,EAAElC,MAAM,CAACC,WAAW,EAAEE,GAAG,EAAEQ,UAAU,CAACU,IAAI,EAAE,UAAUA,IAAI,EAAE;MAC9H,IAAI7B,KAAK,CAACI,MAAM,KAAK,WAAW,EAAE;QAChCpC,MAAM,CAACyM,aAAa,CAAChK,WAAW,CAAC8J,WAAW,EAAE,EAAE1I,IAAI,CAAC,GAAG7B,KAAK,CAAC8J,WAAW,CAAC;UACxEjI,IAAI,EAAEA;QACR,CAAC,CAAC,GAAG7B,KAAK,CAAC+J,WAAW,CAAC;UACrBlI,IAAI,EAAEA;QACR,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EACD;AACF;AACA;;EAGE/B,WAAW,CAACS,SAAS,CAACiE,MAAM,GAAG,YAAY;IACzC,IAAI,CAAC0D,gBAAgB,EAAE;IAEvB,IAAI,CAAC1F,eAAe,IAAI,IAAI,CAACA,eAAe,CAACkI,SAAS,EAAE;IACxD,IAAI,CAACrK,QAAQ,GAAGC,aAAa,EAAE;IAC/B,IAAI,CAACF,MAAM,GAAG,OAAO;IACrB,IAAI,CAACoK,WAAW,IAAI,IAAI,CAACA,WAAW,CAAChG,MAAM,EAAE;EAC/C,CAAC;EAED1E,WAAW,CAACS,SAAS,CAAC4H,OAAO,GAAG,YAAY;IAC1C,IAAI,CAACD,gBAAgB,EAAE;EACzB,CAAC;EAEDpI,WAAW,CAACS,SAAS,CAACwJ,WAAW,GAAG,UAAU5I,UAAU,EAAE;IACxD,IAAI,CAACR,GAAG,CAAC+H,cAAc,CAAC;MACtBvI,IAAI,EAAE,mBAAmB;MACzBwI,IAAI,EAAE,IAAI,CAACC,GAAG;MACdC,QAAQ,EAAE,IAAI,CAACpI,WAAW,CAACqI,EAAE;MAC7B6B,UAAU,EAAExJ,UAAU,CAACU;IACzB,CAAC,CAAC;EACJ,CAAC;EAED/B,WAAW,CAACS,SAAS,CAACuJ,WAAW,GAAG,UAAU3I,UAAU,EAAE;IACxD,IAAI,CAACR,GAAG,CAAC+H,cAAc,CAAC;MACtBvI,IAAI,EAAE,mBAAmB;MACzBwI,IAAI,EAAE,IAAI,CAACC,GAAG;MACdC,QAAQ,EAAE,IAAI,CAACpI,WAAW,CAACqI,EAAE;MAC7B6B,UAAU,EAAExJ,UAAU,CAACU;IACzB,CAAC,CAAC;EACJ,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE/B,WAAW,CAACS,SAAS,CAACmJ,UAAU,GAAG,UAAU9G,CAAC,EAAEC,CAAC,EAAE;IACjD,IAAI1B,UAAU;IACd,IAAIyJ,QAAQ,GAAG,IAAI,CAACnK,WAAW,CAAC8J,WAAW,EAAE;IAC7CK,QAAQ,CAACC,QAAQ,CAAC;MAChBC,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE;IACT,CAAC,EAAE,UAAUlJ,IAAI,EAAE;MACjB,IAAImJ,IAAI,GAAG,IAAI,CAAC3K,QAAQ,CAAC4K,UAAU,CAACpJ,IAAI,CAACC,WAAW,EAAE,CAAC,CAAC,CAAC;;MAGzD,IAAIkJ,IAAI,EAAE;QACR,IAAIE,KAAK,GAAGF,IAAI,CAACG,qBAAqB,CAACvI,CAAC,EAAEC,CAAC,CAAC;QAC5C,IAAIsD,KAAK,GAAG6E,IAAI,CAAC7E,KAAK,CAAC,CAAC;;QAExB,IAAIA,KAAK,CAACvD,CAAC,IAAIsI,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI/E,KAAK,CAACvD,CAAC,GAAGuD,KAAK,CAACC,KAAK,IAAID,KAAK,CAACtD,CAAC,IAAIqI,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI/E,KAAK,CAACtD,CAAC,GAAGsD,KAAK,CAACG,MAAM,EAAE;UACzHnF,UAAU,GAAG;YACXU,IAAI,EAAEA,IAAI;YACV8H,OAAO,EAAEuB,KAAK,CAAC,CAAC,CAAC;YACjBtB,OAAO,EAAEsB,KAAK,CAAC,CAAC;UAClB,CAAC;QACH,CAAC,MAAM;UACL,OAAO,KAAK,CAAC,CAAC;QAChB;MACF;IACF,CAAC,EAAE,IAAI,CAAC;IACR,OAAO/J,UAAU;EACnB,CAAC;EAEDrB,WAAW,CAACK,IAAI,GAAG,SAAS;EAC5B,OAAOL,WAAW;AACpB,CAAC,CAACvB,SAAS,CAAC;AACZ;AACA;AACA;;AAGA,SAAS+B,aAAa,GAAG;EACvB,OAAO;IACLsB,SAAS,EAAE,EAAE;IACbqJ,UAAU,EAAE,EAAE;IACdG,OAAO,EAAE;EACX,CAAC;AACH;AACA;AACA;AACA;AACA;;AAGA,SAAS1H,UAAU,CAACjD,WAAW,EAAEgB,WAAW,EAAE0B,UAAU,EAAEzB,MAAM,EAAEwB,iBAAiB,EAAEE,gBAAgB,EAAEE,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,KAAK,EAAE;EAC5I;EACA,IAAI,CAACH,QAAQ,EAAE;IACb;IACA;IACA;IACA;EACF,CAAC,CAAC;EACF;;EAGA,IAAI+H,UAAU,GAAG/H,QAAQ,CAACmF,SAAS,EAAE;EACrC,IAAIyB,IAAI,GAAGzJ,WAAW,CAACsC,OAAO,EAAE;EAChC,IAAIuI,SAAS,GAAGhI,QAAQ,CAACiI,QAAQ,EAAE,CAAC,CAAC;EACrC;;EAEArB,IAAI,CAACsB,gBAAgB,CAAClI,QAAQ,CAAC8G,SAAS,EAAE,IAAI,CAAC;EAE/C,IAAI,CAACiB,UAAU,IAAI,CAACA,UAAU,CAACI,QAAQ,EAAE;IACvC;EACF;EAEA,IAAIC,SAAS,GAAGL,UAAU,CAACjF,KAAK;EAChC,IAAIuF,UAAU,GAAGN,UAAU,CAAC/E,MAAM;EAClC,IAAIsF,WAAW,GAAGP,UAAU,CAACO,WAAW;EACxC,IAAIC,aAAa,GAAGR,UAAU,CAAC9F,SAAS;EACxC,IAAIuG,YAAY,GAAGxI,QAAQ,CAACxB,WAAW,EAAE;EACzC,IAAIiK,WAAW,GAAGxI,OAAO,IAAIA,OAAO,CAACzB,WAAW,EAAE;EAClD,IAAIiC,gBAAgB,GAAGT,QAAQ,CAACuB,YAAY;EAC5C,IAAImH,WAAW,GAAGX,UAAU,CAACW,WAAW;EACxC,IAAIC,QAAQ,GAAGlI,gBAAgB,IAAIA,gBAAgB,CAACmI,MAAM;EAC1D,IAAIC,oBAAoB,GAAGb,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC;EAC1D,IAAIa,sBAAsB,GAAGd,SAAS,CAACC,QAAQ,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;EAC1E,IAAIc,kBAAkB,GAAGf,SAAS,CAACC,QAAQ,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;EAClE,IAAIe,oBAAoB,GAAGhB,SAAS,CAACC,QAAQ,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;EACtE,IAAIgB,YAAY,GAAGJ,oBAAoB,CAAC1G,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EAClE;EACA;;EAEA,IAAI/C,KAAK,GAAG8J,WAAW,CAAC,WAAW,EAAE1N,KAAK,CAAC;EAE3C,IAAI,CAAC4D,KAAK,EAAE;IACV;EACF;EAEAc,WAAW,CAACb,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC;;EAExBA,KAAK,CAACE,CAAC,GAAGyI,UAAU,CAACzI,CAAC,IAAI,CAAC;EAC3BF,KAAK,CAACG,CAAC,GAAGwI,UAAU,CAACxI,CAAC,IAAI,CAAC;EAC3BH,KAAK,CAAC+J,UAAU,EAAE;EAClB5M,KAAK,CAAC6C,KAAK,CAAC,CAAC2D,SAAS,GAAGqF,SAAS;EAClC7L,KAAK,CAAC6C,KAAK,CAAC,CAAC6D,UAAU,GAAGoF,UAAU;EAEpC,IAAIN,UAAU,CAACqB,eAAe,EAAE;IAC9B,OAAOhK,KAAK;EACd,CAAC,CAAC;;EAGF,IAAIiK,EAAE,GAAGH,WAAW,CAAC,YAAY,EAAEzN,IAAI,EAAE0E,KAAK,EAAErE,KAAK,CAAC;EACtDuN,EAAE,IAAIC,gBAAgB,CAAClK,KAAK,EAAEiK,EAAE,EAAEV,QAAQ,IAAIZ,UAAU,CAACwB,gBAAgB,CAAC;EAC1E,IAAIC,KAAK,GAAGxB,SAAS,CAAC7F,GAAG,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;EAChD,IAAIsH,SAAS,GAAGzB,SAAS,CAAC7F,GAAG,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;EACxD,IAAIuH,cAAc,GAAGF,KAAK,KAAK,UAAU,GAAGxJ,QAAQ,CAAC2J,mBAAmB,EAAE,GAAGH,KAAK,KAAK,YAAY,GAAGxJ,QAAQ,CAAC4J,oBAAoB,EAAE,GAAGJ,KAAK,CAAC,CAAC;;EAE/I,IAAIb,QAAQ,EAAE;IACZ;IACA;IACA;IACA,IAAIvO,oBAAoB,CAACgF,KAAK,CAAC,EAAE;MAC/B/E,uBAAuB,CAAC+E,KAAK,EAAE,KAAK,CAAC;IACvC;IAEA,IAAIiK,EAAE,EAAE;MACNhP,uBAAuB,CAACgP,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEnCzC,IAAI,CAACsB,gBAAgB,CAAClI,QAAQ,CAAC8G,SAAS,EAAEuC,EAAE,CAAC;MAC7C9O,gBAAgB,CAAC8O,EAAE,EAAEK,cAAc,EAAED,SAAS,CAAC;IACjD;EACF,CAAC,MAAM;IACL,IAAI3B,OAAO,GAAGoB,WAAW,CAAC,SAAS,EAAEzN,IAAI,EAAE0E,KAAK,EAAEpE,UAAU,CAAC;IAC7D+L,OAAO,IAAI+B,aAAa,CAACzK,KAAK,EAAE0I,OAAO,CAAC;IAExC,IAAIuB,EAAE,IAAIjP,oBAAoB,CAACiP,EAAE,CAAC,EAAE;MAClChP,uBAAuB,CAACgP,EAAE,EAAE,KAAK,CAAC;IACpC;IAEAhP,uBAAuB,CAAC+E,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEtCwH,IAAI,CAACsB,gBAAgB,CAAClI,QAAQ,CAAC8G,SAAS,EAAE1H,KAAK,CAAC;IAChD7E,gBAAgB,CAAC6E,KAAK,EAAEsK,cAAc,EAAED,SAAS,CAAC;EACpD;EAEA,OAAOrK,KAAK,CAAC,CAAC;EACd;EACA;;EAEA,SAASkK,gBAAgB,CAAClK,KAAK,EAAEiK,EAAE,EAAES,aAAa,EAAE;IAClD,IAAIC,MAAM,GAAG5P,SAAS,CAACkP,EAAE,CAAC,CAAC,CAAC;;IAE5BU,MAAM,CAACjD,SAAS,GAAG9G,QAAQ,CAAC8G,SAAS;IACrCiD,MAAM,CAACC,WAAW,GAAG7M,WAAW,CAAC6M,WAAW;IAC5CX,EAAE,CAAC3F,QAAQ,CAAC;MACVpE,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJuD,KAAK,EAAEsF,SAAS;MAChBpF,MAAM,EAAEqF,UAAU;MAClB4B,CAAC,EAAEhB;IACL,CAAC,CAAC;IAEF,IAAIV,aAAa,EAAE;MACjB;MACA;MACA;MACA2B,gBAAgB,CAACb,EAAE,CAAC;IACtB,CAAC,MAAM;MACLA,EAAE,CAACpH,SAAS,GAAG,KAAK;MACpB,IAAIiB,KAAK,GAAGlD,QAAQ,CAACmK,SAAS,CAAC,OAAO,CAAC;MACvC,IAAIC,iBAAiB,GAAGlH,KAAK,CAAC9G,MAAM;MACpC,IAAIiO,WAAW,GAAGpO,kBAAkB,CAAC4M,oBAAoB,CAAC;MAC1DwB,WAAW,CAAChO,IAAI,GAAG+N,iBAAiB;MACpC,IAAIE,aAAa,GAAGtO,iBAAiB,CAAC8M,sBAAsB,CAAC;MAC7DwB,aAAa,CAACjO,IAAI,GAAGyM,sBAAsB,CAAC3G,GAAG,CAAC,aAAa,CAAC;MAC9D,IAAIoI,SAAS,GAAGvO,iBAAiB,CAAC+M,kBAAkB,CAAC;MACrDwB,SAAS,CAAClO,IAAI,GAAG0M,kBAAkB,CAAC5G,GAAG,CAAC,aAAa,CAAC;MACtD,IAAIqI,WAAW,GAAGxO,iBAAiB,CAACgN,oBAAoB,CAAC;MACzDwB,WAAW,CAACnO,IAAI,GAAG2M,oBAAoB,CAAC7G,GAAG,CAAC,aAAa,CAAC;MAE1D,IAAI2H,aAAa,EAAE;QACjB,IAAIW,eAAe,GAAGrC,SAAS,GAAG,CAAC,GAAGE,WAAW;QACjDoC,WAAW;QAAE;QACbrB,EAAE,EAAEe,iBAAiB,EAAElH,KAAK,CAACC,OAAO,EAAE;UACpC7D,CAAC,EAAEgJ,WAAW;UACd/I,CAAC,EAAE,CAAC;UACJuD,KAAK,EAAE2H,eAAe;UACtBzH,MAAM,EAAE0F;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;MAAA,KACG;QACDW,EAAE,CAACsB,iBAAiB,EAAE;MACxB;MAEFtB,EAAE,CAACzF,QAAQ,CAACyG,WAAW,CAAC;MACxBhB,EAAE,CAACuB,WAAW,CAAC,UAAU,CAAC,CAAC1H,KAAK,GAAGoH,aAAa;MAChDjB,EAAE,CAACuB,WAAW,CAAC,MAAM,CAAC,CAAC1H,KAAK,GAAGqH,SAAS;MACxClB,EAAE,CAACuB,WAAW,CAAC,QAAQ,CAAC,CAAC1H,KAAK,GAAGsH,WAAW;MAC5ClQ,oBAAoB,CAAC+O,EAAE,CAAC;IAC1B;IAEAjK,KAAK,CAACC,GAAG,CAACgK,EAAE,CAAC;EACf;EAEA,SAASQ,aAAa,CAACzK,KAAK,EAAE0I,OAAO,EAAE;IACrC,IAAIiC,MAAM,GAAG5P,SAAS,CAAC2N,OAAO,CAAC,CAAC,CAAC;;IAEjCiC,MAAM,CAACjD,SAAS,GAAG9G,QAAQ,CAAC8G,SAAS;IACrCiD,MAAM,CAACC,WAAW,GAAG7M,WAAW,CAAC6M,WAAW;IAC5C,IAAIa,YAAY,GAAG/F,IAAI,CAACgG,GAAG,CAAC1C,SAAS,GAAG,CAAC,GAAGE,WAAW,EAAE,CAAC,CAAC;IAC3D,IAAIyC,aAAa,GAAGjG,IAAI,CAACgG,GAAG,CAACzC,UAAU,GAAG,CAAC,GAAGC,WAAW,EAAE,CAAC,CAAC;IAC7DR,OAAO,CAACkD,OAAO,GAAG,IAAI;IACtBlD,OAAO,CAACpE,QAAQ,CAAC;MACfpE,CAAC,EAAEgJ,WAAW;MACd/I,CAAC,EAAE+I,WAAW;MACdxF,KAAK,EAAE+H,YAAY;MACnB7H,MAAM,EAAE+H,aAAa;MACrBd,CAAC,EAAEhB;IACL,CAAC,CAAC;IAEF,IAAIV,aAAa,EAAE;MACjB;MACA;MACA;MACA2B,gBAAgB,CAACpC,OAAO,CAAC;IAC3B,CAAC,MAAM;MACLA,OAAO,CAAC7F,SAAS,GAAG,KAAK;MACzB,IAAIgJ,SAAS,GAAGjL,QAAQ,CAACmK,SAAS,CAAC,OAAO,CAAC;MAC3C,IAAIe,WAAW,GAAGD,SAAS,CAAC5O,IAAI;MAChC,IAAIgO,WAAW,GAAGpO,kBAAkB,CAAC4M,oBAAoB,CAAC;MAC1DwB,WAAW,CAAChO,IAAI,GAAG6O,WAAW;MAC9Bb,WAAW,CAACc,KAAK,GAAGF,SAAS,CAACE,KAAK;MACnC,IAAIb,aAAa,GAAGtO,iBAAiB,CAAC8M,sBAAsB,CAAC;MAC7D,IAAIyB,SAAS,GAAGvO,iBAAiB,CAAC+M,kBAAkB,CAAC;MACrD,IAAIyB,WAAW,GAAGxO,iBAAiB,CAACgN,oBAAoB,CAAC,CAAC,CAAC;;MAE3D0B,WAAW,CAAC5C,OAAO,EAAEoD,WAAW,EAAED,SAAS,CAAC9H,OAAO,EAAE,IAAI,CAAC;MAC1D2E,OAAO,CAAClE,QAAQ,CAACyG,WAAW,CAAC;MAC7BvC,OAAO,CAAC8C,WAAW,CAAC,UAAU,CAAC,CAAC1H,KAAK,GAAGoH,aAAa;MACrDxC,OAAO,CAAC8C,WAAW,CAAC,MAAM,CAAC,CAAC1H,KAAK,GAAGqH,SAAS;MAC7CzC,OAAO,CAAC8C,WAAW,CAAC,QAAQ,CAAC,CAAC1H,KAAK,GAAGsH,WAAW;MACjDlQ,oBAAoB,CAACwN,OAAO,CAAC;IAC/B;IAEA1I,KAAK,CAACC,GAAG,CAACyI,OAAO,CAAC;EACpB;EAEA,SAASoC,gBAAgB,CAACkB,OAAO,EAAE;IACjC;IACA;IACA,CAACA,OAAO,CAACnJ,SAAS,IAAInC,gBAAgB,CAAC+B,IAAI,CAACuJ,OAAO,CAAC;EACtD;EAEA,SAASV,WAAW,CAACW,MAAM,EAAEH,WAAW,EAAEI,aAAa;EAAE;EACzDC,cAAc,EAAE;IACd,IAAIC,gBAAgB,GAAGxD,SAAS,CAACC,QAAQ,CAACsD,cAAc,GAAG3P,sBAAsB,GAAGD,iBAAiB,CAAC;IACtG,IAAI8P,WAAW,GAAGrQ,mBAAmB,CAAC4M,SAAS,CAAC7F,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;IAClE,IAAIuJ,MAAM,GAAGF,gBAAgB,CAACG,UAAU,CAAC,MAAM,CAAC;IAChDrQ,aAAa,CAAC+P,MAAM,EAAE9P,oBAAoB,CAACyM,SAAS,EAAEuD,cAAc,GAAG3P,sBAAsB,GAAGD,iBAAiB,CAAC,EAAE;MAClH8P,WAAW,EAAEC,MAAM,GAAGD,WAAW,GAAG,IAAI;MACxCG,YAAY,EAAEV,WAAW;MACzBW,cAAc,EAAEP,aAAa;MAC7BQ,YAAY,EAAE3O,WAAW;MACzB4O,cAAc,EAAE/L,QAAQ,CAAC8G;IAC3B,CAAC,CAAC;IACF,IAAIkF,MAAM,GAAGX,MAAM,CAACY,cAAc,EAAE;IACpC,IAAIC,SAAS,GAAGF,MAAM,CAAC9I,KAAK;IAC5B,IAAIiJ,WAAW,GAAGnS,iBAAiB,CAACkS,SAAS,CAACE,OAAO,IAAI,CAAC,CAAC;IAE3D,IAAIb,cAAc,EAAE;MAClBF,MAAM,CAACgB,aAAa,CAAC;QACnBC,UAAU,EAAEf;MACd,CAAC,CAAC;MACFS,MAAM,CAACO,kBAAkB,GAAG,IAAI;IAClC;IAEAP,MAAM,CAACQ,YAAY,GAAG,YAAY;MAChC,IAAI1J,KAAK,GAAGgC,IAAI,CAACgG,GAAG,CAAC,CAACS,cAAc,GAAGA,cAAc,CAACzI,KAAK,GAAGuI,MAAM,CAACxI,KAAK,CAACC,KAAK,IAAIqJ,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACvH,IAAInJ,MAAM,GAAG8B,IAAI,CAACgG,GAAG,CAAC,CAACS,cAAc,GAAGA,cAAc,CAACvI,MAAM,GAAGqI,MAAM,CAACxI,KAAK,CAACG,MAAM,IAAImJ,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAE1H,IAAID,SAAS,CAACpJ,KAAK,KAAKA,KAAK,IAAIoJ,SAAS,CAAClJ,MAAM,KAAKA,MAAM,EAAE;QAC5DgJ,MAAM,CAACpI,QAAQ,CAAC;UACdd,KAAK,EAAEA,KAAK;UACZE,MAAM,EAAEA;QACV,CAAC,CAAC;MACJ;IACF,CAAC;IAEDkJ,SAAS,CAACO,eAAe,GAAG,CAAC;IAC7BP,SAAS,CAACQ,YAAY,GAAG,UAAU;IACnCC,gBAAgB,CAACT,SAAS,EAAEX,cAAc,EAAExD,UAAU,CAAC;IACvD,IAAI6E,iBAAiB,GAAGZ,MAAM,CAACa,QAAQ,CAAC,UAAU,CAAC;IACnDF,gBAAgB,CAACC,iBAAiB,GAAGA,iBAAiB,CAAC1J,KAAK,GAAG,IAAI,EAAEqI,cAAc,EAAExD,UAAU,CAAC;EAClG;EAEA,SAAS4E,gBAAgB,CAACzJ,KAAK,EAAEqI,cAAc,EAAExD,UAAU,EAAE;IAC3D,IAAI+E,IAAI,GAAG5J,KAAK,GAAGA,KAAK,CAAC4J,IAAI,GAAG,IAAI;IAEpC,IAAI,CAACvB,cAAc,IAAIxD,UAAU,CAACxB,UAAU,IAAIuG,IAAI,IAAI,IAAI,EAAE;MAC5D,IAAIC,QAAQ,GAAG5P,WAAW,CAACgF,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC;MACrDe,KAAK,CAAC4J,IAAI,GAAGC,QAAQ,GAAGA,QAAQ,GAAG,GAAG,GAAGD,IAAI,GAAGA,IAAI;IACtD;EACF;EAEA,SAAS5D,WAAW,CAACxH,WAAW,EAAEsL,IAAI,EAAE7M,KAAK,EAAE8M,CAAC,EAAE;IAChD,IAAI7B,OAAO,GAAG3C,WAAW,IAAI,IAAI,IAAI5I,UAAU,CAAC6B,WAAW,CAAC,CAAC+G,WAAW,CAAC;IACzE,IAAIyE,KAAK,GAAGtN,iBAAiB,CAAC8B,WAAW,CAAC;IAE1C,IAAI0J,OAAO,EAAE;MACX;MACAvL,UAAU,CAAC6B,WAAW,CAAC,CAAC+G,WAAW,CAAC,GAAG,IAAI;MAC3C0E,0BAA0B,CAACD,KAAK,EAAE9B,OAAO,CAAC;IAC5C,CAAC,CAAC;IAAA,KACG,IAAI,CAAC7C,aAAa,EAAE;MACrB6C,OAAO,GAAG,IAAI4B,IAAI,EAAE;MAEpB,IAAI5B,OAAO,YAAYlQ,WAAW,EAAE;QAClCkQ,OAAO,CAACgC,EAAE,GAAGC,WAAW,CAAClN,KAAK,EAAE8M,CAAC,CAAC;MACpC;MAEAK,yBAAyB,CAACJ,KAAK,EAAE9B,OAAO,CAAC;IAC3C,CAAC,CAAC;;IAGJ,OAAOjN,WAAW,CAACuD,WAAW,CAAC,CAAC8G,YAAY,CAAC,GAAG4C,OAAO;EACzD;EAEA,SAAS+B,0BAA0B,CAACD,KAAK,EAAE9B,OAAO,EAAE;IAClD,IAAImC,OAAO,GAAGL,KAAK,CAAC1E,YAAY,CAAC,GAAG,CAAC,CAAC;IAEtC,IAAI4C,OAAO,YAAY5P,KAAK,EAAE;MAC5B+R,OAAO,CAAChK,IAAI,GAAG6H,OAAO,CAAC9L,CAAC;MACxBiO,OAAO,CAAC/J,IAAI,GAAG4H,OAAO,CAAC7L,CAAC;IAC1B,CAAC,MAAM;MACLgO,OAAO,CAAC9J,QAAQ,GAAG1J,MAAM,CAAC,CAAC,CAAC,EAAEqR,OAAO,CAACvI,KAAK,CAAC;IAC9C;EACF,CAAC,CAAC;EACF;;EAGA,SAASyK,yBAAyB,CAACJ,KAAK,EAAE9B,OAAO,EAAE;IACjD,IAAImC,OAAO,GAAGL,KAAK,CAAC1E,YAAY,CAAC,GAAG,CAAC,CAAC;IACtC,IAAIgF,UAAU,GAAGxN,QAAQ,CAACwN,UAAU;IACpC,IAAIC,OAAO,GAAGrC,OAAO,YAAYlR,OAAO,CAACsB,KAAK;IAE9C,IAAIgS,UAAU,KAAK,CAACpP,MAAM,IAAIA,MAAM,CAACK,SAAS,KAAK,WAAW,CAAC,EAAE;MAC/D,IAAIiP,UAAU,GAAG,CAAC;MAClB,IAAIC,UAAU,GAAG,CAAC,CAAC,CAAC;MACpB;;MAEA,IAAIC,WAAW,GAAGhO,iBAAiB,CAAC+H,UAAU,CAAC6F,UAAU,CAAChP,WAAW,EAAE,CAAC;MAExE,IAAI,CAACJ,MAAM,IAAIwP,WAAW,IAAIA,WAAW,CAACnK,QAAQ,EAAE;QAClDiK,UAAU,GAAGE,WAAW,CAACnK,QAAQ,CAACX,KAAK;QACvC6K,UAAU,GAAGC,WAAW,CAACnK,QAAQ,CAACT,MAAM;MAC1C,CAAC,CAAC;MACF;;MAGA,IAAIyK,OAAO,EAAE;QACXF,OAAO,CAAChK,IAAI,GAAG,CAAC;QAChBgK,OAAO,CAAC/J,IAAI,GAAGmK,UAAU;MAC3B,CAAC,MAAM;QACLJ,OAAO,CAAC9J,QAAQ,GAAG;UACjBnE,CAAC,EAAEoO,UAAU;UACbnO,CAAC,EAAEoO,UAAU;UACb7K,KAAK,EAAE,CAAC;UACRE,MAAM,EAAE;QACV,CAAC;MACH;IACF,CAAC,CAAC;;IAGFuK,OAAO,CAAC5J,MAAM,GAAG,CAAC8J,OAAO;EAC3B;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAGA,SAASJ,WAAW,CAAClN,KAAK,EAAE0N,SAAS,EAAE;EACrC,OAAO1N,KAAK,GAAGtE,OAAO,GAAGgS,SAAS;AACpC;AAEA,eAAerR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}